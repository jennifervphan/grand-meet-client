{"version":3,"sources":["components/navbar/Navbar.jsx","components/layout/MainLayout.jsx","pages/Home.jsx","components/auth/auth-service.jsx","components/auth/Signup.jsx","components/share/EachPostCard.jsx","method.jsx","pages/Profile.jsx","pages/EditProfile.jsx","components/auth/Login.jsx","pages/Nearby.jsx","pages/NearbyUser.jsx","components/message/AllRooms.jsx","components/message/MessageList.jsx","components/message/Input.jsx","components/message/EachRoom.jsx","pages/Inbox.jsx","components/commonRoom/CommonRoomIntro.jsx","components/commonRoom/Login.jsx","components/commonRoom/Rooms.jsx","components/commonRoom/GameBoard.jsx","components/commonRoom/Chat.jsx","components/commonRoom/Games.jsx","pages/CommonRoom.jsx","components/share/AllPosts.jsx","components/share/ShareCorner.jsx","components/share/PostInput.jsx","components/share/EachPost.jsx","components/share/EditPost.jsx","pages/SharePage.jsx","components/share/DeletePost.jsx","components/message/ChatApp.jsx","pages/ChatPage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navbar","props","state","loggedInUser","user","this","getUser","setState","className","style","backgroundColor","opacity","to","textDecoration","color","Component","MainLayout","children","Home","userInSession","AuthService","signup","form","axios","method","baseURL","process","withCredentials","data","then","response","setUser","loggedin","service","get","login","username","password","coordinates","post","logout","localStorage","removeItem","create","setItem","JSON","stringify","Signup","handleFormSubmit","event","preventDefault","FormData","formRef","current","append","coords","longitude","latitude","console","log","file","history","push","catch","error","handleChange","target","name","value","uploadPic","files","React","createRef","ref","onSubmit","type","onChange","e","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","EachPostCard","eachPost","posts","map","index","short","key","backgroundImage","author","profilePicUrl","marginRight","title","marginTop","class","niceTime","pathname","_id","text","formatWrittenAt","writtenAt","now","getDate","getMonth","getFullYear","getHours","toString","getMinutes","Profile","logoutUser","parse","getItem","bind","usersPosts","filter","Date","eachchangePost","length","substring","err","width","about","margin","onClick","EditProfile","height","border","Login","Nearby","_isMounted","calculateUserDist","users","userLong","userLat","i","otherLong","otherLat","calculateDistance","sort","a","b","distance","sortedUsers","lat1","lon1","lat2","lon2","Math","PI","x","cos","y","floor","sqrt","responseFromApi","setTimeout","eachUser","fontSize","NearbyUser","nearbyUsers","userId","match","params","id","nearby","chatPartner","AllRooms","otherUsers","rooms","eachRoom","room","roomName","partner","isRoomActive","currentRoom","unread_count","MessageList","eachMess","messages","message","senderId","Input","showEmojiPicker","handleSubmit","addEmoji","emoji","native","toggleEmojiPicker","set","onSelect","placeholder","EachRoom","currentUser","addMessage","prevProps","ChatManager","instanceLocator","tokenProvider","TokenProvider","url","connect","onRoomUpdated","findIndex","r","subscribeToRoom","roomId","messageLimit","hooks","onMessage","setReadCursor","position","userIds","setRoom","sendMessage","Inbox","setCurrentRoom","chatRooms","path","render","CommonRoomIntro","Rooms","joined","joinable","activeRoom","enterRoom","leaveRoom","joinedRooms","List","Item","Content","floated","Icon","joinableRooms","Header","as","divided","relaxed","pusher","Pusher","cluster","forceTLS","PIECES","GameBoard","board","players","activeCell","row","rowIndex","piece","columnIndex","pieceSymbol","font","fillOpacity","fill","Object","keys","player","Grid","Row","columns","Column","xmlns","viewBox","d","concat","apply","_handleBoardClick","subscribe","_refreshGame","unsubscribe","dim","getBoundingClientRect","clientX","left","clientY","top","cellX","cellY","request","fromRow","fromColumn","toRow","toColumn","Chat","newMessage","onUserJoined","onUserLeft","opponent","attachment","link","startsWith","undefined","listStyle","padding","_challengePlayer","acceptGame","_acceptChallenge","game","child","_gameBoard","float","clear","el","messagesEnd","Form","_handleSubmit","_handleNewMessageChange","_scrollToBottom","scrollIntoView","behavior","fetchRequired","createRoom","addUserIds","startedGame","getPlayers","includes","Games","getJoinableRooms","lobby","find","joinRoom","lobbyId","setInterval","_pollRooms","filtered","isPrivate","joinedfiltered","white","black","whitePlayer","blackPlayer","chat","_startedGame","_enterRoom","_leaveRoom","CommonRoom","contents","AllPosts","changePost","ShareCorner","PostInput","cols","rows","EachPost","comment","eachComment","comments","postId","eachLine","marginBottom","textAlign","justifyContent","deletePost","exact","EditPost","updatedPost","SharePage","routeProps","ChatApp","location","existRoom","usersInRoom","j","chatManager","private","customData","foo","ChatPage","App","getTheUser","fetchUser","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.313dc584.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n// import AuthService from '../auth/auth-service';\n\nclass Navbar extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      loggedInUser: null };\n  }\n\n  componentDidMount() {\n    \n    let user= this.props.getUser(); \n    this.setState({loggedInUser:user})\n  }\n\n  render(){\n    if(this.state.loggedInUser){\n      return(\n        <nav className=\"Navbar\" style={{backgroundColor:\"#334455\", opacity:\"0.7\"}}>\n          <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n          <div className=\"NavbarRight\">\n          <Link to=\"/profile\" style={{color: \"white\"}}><h4 className=\"navItem\">Profile</h4></Link>\n          <Link to=\"/nearby\"  style={{color: \"white\"}}><h4 className=\"navItem\">Nearby</h4></Link>\n          <Link to=\"/share\" style={{color: \"white\"}} ><h4 className=\"navItem\">Share</h4></Link>\n          <Link to=\"/inbox\" style={{color: \"white\"}}><h4 className=\"navItem\">Inbox</h4></Link>\n          </div>\n          {/* </div> */}\n        </nav>\n      )\n    } else {\n      return ( \n        <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}>Login</Link>\n        </nav>\n      )\n    }\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport Nav from '../navbar/Navbar';\nimport './MainLayout.css';\n\nexport default class MainLayout extends Component {\n    render() {\n        return (\n            <div className=\"MainLayout\">\n                <Nav {...this.props}/>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport MainLayout from '../components/layout/MainLayout';\nimport {Link} from 'react-router-dom';\nimport \"./Home.css\";\n\nexport default class Home extends Component {\n    render() {\n        if (this.props.userInSession){\n            return (\n                <div className=\"Homepage\">\n                <MainLayout {...this.props}>\n                    <div className=\"welcomeInfo\">\n                    <h1>talk.share.meet.</h1>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                    </p>\n                    </div>\n                </MainLayout>\n                </div>\n            )\n        }else {\n            return (\n            <div className=\"Homepage\">\n            {/* <MainLayout {...this.props}> */}\n            <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}><h3>Login</h3></Link>\n            </nav>\n                <div className=\"welcomeInfo\">\n                <h1>talk.share.meet.</h1>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                </p>\n                <Link to='/signup' style={{ textDecoration: 'none' }}><button className=\"registerBtnHome\">Register</button></Link>\n                </div>\n            {/* </MainLayout> */}\n            </div>\n        ) \n        }   \n    }\n}\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API}`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (form) => {\n    return axios({\n      method:\"POST\",\n      baseURL:`${process.env.REACT_APP_API}/signup`,\n      withCredentials: true,\n      data:form\n    })\n    .then(response => {\n      this.setUser(response.data)\n      return response.data    \n    })\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n  \n  login = \n  (username, password, coordinates) => {\n    return this.service.post('/login', {username, password, coordinates})\n    .then(response => {\n      this.setUser(response.data)\n    return response.data})     \n  }\n\n  setUser(user){\n    localStorage.setItem('user', JSON.stringify(user));\n}\n\n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(() => {\n      localStorage.removeItem('user');\n      localStorage.removeItem('nearbyUsers');\n      localStorage.removeItem('chatRooms');\n      localStorage.removeItem('currentRoom');\n\n    })\n  }\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\nimport {geolocated} from 'react-geolocated';\n// import MainLayout from '../layout/MainLayout';\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.formRef = React.createRef();\n    this.state = { username: '', password: '', file: null };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const form = new FormData(this.formRef.current)\n    form.append(\"longitude\",this.props.coords.longitude)\n    form.append(\"latitude\",this.props.coords.latitude)\n\n    this.service.signup(form)\n    .then(response => {\n      console.log(response)\n        this.setState({\n            username: \"\", \n            password: \"\",\n            file: null,\n            // message:response.data.message\n\n        });\n        this.props.history.push('/profile')\n    })\n    .catch( error => console.log(error) )\n  }\n  \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n  uploadPic=(event)=>{\n    this.setState({\n      file: (event.target.files[0])})\n  }\n\n  render(){\n    return(\n      <div className=\"loginPage\">\n         <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}><h3>Login</h3></Link>\n        </nav>\n      <Link to=\"/\" style={{ textDecoration: 'none', color:\"white\" }}><i className=\"fas fa-times-circle fa-2x\"></i></Link>\n        <div className=\"signupForm\">\n        <h3>Register</h3>\n        {/* {this.state.message?\n        (<p>{this.state.message}</p>)\n        :\n        (null)} */}\n        <form className=\"loginInput\" ref={this.formRef} onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <label>Profile Picture:</label>\n          <input type=\"file\" name=\"picture\" onChange={this.uploadPic}/>\n\n          <button className=\"submitBtn\" type=\"submit\">Register</button>\n        </form>\n  \n        <p>Already have account? \n            <Link to={\"/login\"} style={{ color: 'rgb(5, 5, 5)', textDecoration:\"underline\" }}> Login</Link>\n        </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(Signup);\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class EachPostCard extends Component {\n    render() {\n            const {posts}= this.props;\n            let eachPost= posts.map((post,index)=>{\n                if(post.short){\n                    return(\n                        <div className=\"eachPost\"  key={index}>\n                            <div className=\"titleDiv\">\n                                <div className=\"sharePic\" style={{backgroundImage: `url(${post.author.profilePicUrl})`, marginRight:\"10px\"}}></div>\n                                <h4 className=\"postTitle\">{post.title}</h4>\n                            </div>\n                            <p style={{marginTop:\"10px\"}}>{post.short[0]} {post.short[1]}</p>\n                            <div className=\"footerDiv\">\n                                <p><i class=\"far fa-clock\"></i> {post.niceTime}</p>\n                                <Link to={{\n                                pathname:`/share/thoughtsCorner/allThoughts/${post._id}`\n                                }}>Read more</Link>\n                            </div>\n                            \n                        </div>\n                    )\n                } else{\n                    return(\n                        <div className=\"eachPost\" key={index}>\n                            <div className=\"titleDiv\">\n                                <div className=\"sharePic\" style={{backgroundImage: `url(${post.author.profilePicUrl})`, marginRight:\"10px\"}}></div>\n                                <h4 className=\"postTitle\">{post.title}</h4>\n                            </div>\n                            <p style={{marginTop:\"10px\"}}>{post.text[0]} ...</p>\n                            <div className=\"footerDiv\">\n                                <p><i class=\"far fa-clock\"></i> {post.niceTime}</p>\n                                <Link to={{\n                                pathname:`/share/thoughtsCorner/allThoughts/${post._id}`\n                                }}>Read more</Link>\n                            </div>\n                        </div>\n                )\n                }\n                \n            })\n            return (\n                <div  className=\"posts\">\n                    {eachPost}\n                </div>\n            )\n    }\n}\n","function toggleEmojiPicker() {\nthis.setState({\n  showEmojiPicker: !this.state.showEmojiPicker,\n});\n}\n\nfunction addEmoji(emoji) {\nconst { message } = this.state;\nconst text = `${message}${emoji.native}`;\n\nthis.setState({\n  message: text,\n  showEmojiPicker: false,\n});\n}\n\nfunction formatWrittenAt(writtenAt, now) {\n  if (writtenAt.getDate() === now.getDate() &&\n      writtenAt.getMonth() === now.getMonth() &&\n      writtenAt.getFullYear() === now.getFullYear()) {\n      return \"today at \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n          (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString());\n  } else if (writtenAt.getMonth() === now.getMonth() &&\n      writtenAt.getFullYear() === now.getFullYear() &&\n      writtenAt.getDate() === now.getDate() - 1) {\n      return \"yesterday at \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n          (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString());\n  } else if (writtenAt.getFullYear() === now.getFullYear()) {\n      return \" on \" +(writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate().toString()) + \".\" +\n          (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth().toString()) +\".\"+\n          writtenAt.getFullYear().toString() +\n          \" at \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n          (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString());\n  } else {\n      return \" on \" +(writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate()) + \".\" +\n          (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth()) + \".\" +\n          writtenAt.getFullYear().toString() +\n          \" at \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours()) + \":\" +\n          (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes());\n  }\n}\n\nexport {toggleEmojiPicker, addEmoji, formatWrittenAt };","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport MainLayout from '../components/layout/MainLayout';\nimport AuthService from '../components/auth/auth-service';\nimport EachPostCard from '../components/share/EachPostCard';\nimport './Profile.css';\nimport axios from 'axios';\nimport { formatWrittenAt } from \"../method\";\n\nexport default class Profile extends Component {\n    constructor(props){\n        super(props);\n        this.state = { \n          user: JSON.parse(localStorage.getItem('user'))\n        };\n        this.service = new AuthService();\n        this.formatWrittenAt=formatWrittenAt.bind(this)\n      }\n    \n      componentDidMount() {\n        let user= this.state.user; \n        axios.get(`${process.env.REACT_APP_API}/postsBy/${user._id}`, {withCredentials:true})\n        .then( response =>{\n          const posts = response.data;\n          let usersPosts = posts.filter(function(post) {\n            return post.author._id === user._id;\n        });\n\n        let now = new Date();\n\n        let eachchangePost= usersPosts.map(post=>{\n            if (post.text[0].length > 100) {\n            post.short = []\n            post.short[0] = post.text[0].substring(0, 100) + \"...\"\n        }else if (post.text.length > 1) {\n            post.short = []\n            post.short[0] = post.text[0]\n            post.short[1] = \"...\"\n            }\n            post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            return post\n        })\n          this.setState({posts:eachchangePost});\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n        // this.setState({loggedInUser:user})\n      }\n\n      logoutUser = () =>{\n        this.service.logout()\n        .then(() => {\n          this.setState({ user: null });\n          this.props.history.push('/');\n        })\n      }\n\n    render() {\n          if(this.state.user){\n            return (\n              <MainLayout {...this.props}>\n                <div className=\"ProfilePage\">\n                    <div className=\"profilePic\" style={{  backgroundImage: `url(${this.state.user.profilePicUrl})`}}></div>\n                    <Link style={{ textDecoration:\"none\" }} to=\"/editProfile\"><div className=\"editIcon\"><i class=\"fas fa-pen fa-2x\"></i></div></Link>\n                    <h3>{this.state.user.username}</h3>\n                    <hr style={{width: \"100%\"}}/>\n                    <p className=\"aboutSect\">About: {this.state.user.about} </p>\n                    <Link to='/'>\n                    <button style={{margin: \"20px 0\"}} onClick={() => this.logoutUser()}>Logout</button>\n                    </Link>\n                </div>\n                {this.state.posts? <EachPostCard posts={this.state.posts}/> : <></>}\n              </MainLayout>\n            )\n          } else\n          {\n            return(\n              <MainLayout {...this.props}>\n                Loading...\n              </MainLayout>\n            )\n          }         \n    }\n}\n","import React, { Component } from 'react';\nimport MainLayout from '../components/layout/MainLayout';\nimport axios from 'axios';\nimport '../components/auth/Login.css'\n\nexport default class EditProfile extends Component {\n    constructor(props){\n        super(props);\n        this.formRef = React.createRef();\n        this.state = {\n          about: '', \n          file: null\n        };\n      }\n    \n      handleFormSubmit = (event) => {\n        event.preventDefault();\n        const form = new FormData(this.formRef.current);\n        axios({\n            method:\"POST\",\n            baseURL: `${process.env.REACT_APP_API}/edit`,\n            withCredentials: true,\n            data:form\n          })\n        .then(response => {\n            this.setState({\n                about: \"\",\n                file: null\n    \n            });\n            localStorage.setItem('user', JSON.stringify(response.data));\n            this.props.history.push('/profile')\n        })\n        .catch( error => console.log(error) )\n      }\n      \n      handleChange = (event) => {  \n        const {name, value} = event.target;\n        this.setState({[name]: value});\n      }\n          \n      uploadPic=(event)=>{\n        this.setState({\n          file: (event.target.files[0])})\n      }\n\n    render() {\n        return (\n            <MainLayout {...this.props}>\n                <form className=\"editPage signupForm\" ref={this.formRef} onSubmit={this.handleFormSubmit}>\n                    <label>About </label>\n                    <input style={{height:'100px', width:'300px'}} type=\"text\" name=\"about\" value={this.state.about} onChange={ e => this.handleChange(e)}/>\n\n                    <label>Profile Picture </label>\n                    <input style={{border:\"solid 1px grey\", width:\"300px\"}} type=\"file\" name=\"picture\" onChange={this.uploadPic}/>\n\n                    <button className=\"submitBtn\">Save</button>\n                </form>\n            </MainLayout>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\nimport {geolocated} from 'react-geolocated';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: ''};\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username= this.state.username;\n    const password=this.state.password;\n    this.service.login(username,password, {longitude: this.props.coords.longitude, latitude: this.props.coords.latitude})\n    .then( response => {\n      console.log(response)\n        this.setState({ username: \"\", \n                        password: \"\"\n                      });\n        this.props.history.push('/profile')\n    })\n    .catch( error => console.log(error) )\n  }\n    \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n    \n  render(){\n    return(\n      <div className=\"loginPage\">\n      <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}><h3>Login</h3></Link>\n      </nav>\n      <Link to=\"/\" style={{ textDecoration: 'none', color:\"white\" }}><i className=\"fas fa-times-circle fa-2x\"></i></Link>\n        <div className=\"loginForm\">\n        <h3>Log in</h3>\n        {/* {this.state.message?\n        (<p>{this.state.message}</p>)\n        :\n        (null)} */}\n        <form className=\"loginInput\" onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <button className=\"submitBtn\" type=\"submit\">Log in</button>\n        </form>\n        <p>Don't have account? \n        <Link to={\"/signup\"} style={{ color: 'rgb(5, 5, 5)', textDecoration:\"underline\" }}> Register</Link>\n        </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(Login);","import React, { Component } from 'react';\nimport {geolocated} from 'react-geolocated';\nimport axios from 'axios';\nimport MainLayout from '../components/layout/MainLayout';\nimport {Link} from 'react-router-dom';\nimport './Nearby.css';\n\nclass Nearby extends Component {\n    _isMounted = false\n\n    constructor(props){\n        super(props);\n        this.state={\n            users:[],\n            sortedUsers:[]\n        }\n        this.calculateDistance=this.calculateDistance.bind(this);\n    }\n\n    calculateDistance (lat1, lon1, lat2, lon2){\n        lat1 =  Math.PI * lat1/180\n        lat2 = Math.PI * lat2/180\n        lon1 = Math.PI * lon1/180\n        lon2 = Math.PI * lon2/180\n        var R = 6371; // km\n        var x = (lon2 - lon1) * Math.cos((lat1 + lat2) / 2);\n        var y = (lat2 - lat1);\n        var d = Math.floor(Math.sqrt(x * x + y * y) * R);\n        return d;\n      }\n\n    componentDidMount() {\n        // this._isMounted = true;\n        axios.get(`${process.env.REACT_APP_API}/nearby`, {withCredentials:true})\n        .then(responseFromApi => {\n            // if (this._isMounted) {\n                let users= this.calculateUserDist(responseFromApi.data);\n                localStorage.setItem('nearbyUsers', JSON.stringify(users));\n                setTimeout(()=>{\n                     this.setState({sortedUsers:users});\n                }, 500)\n        // }\n    })\n    }\n\n    // componentWillUnmount() {\n    //     this._isMounted = false;\n    //   }\n\n      calculateUserDist= (users)=> {\n        let userLong= this.props.userInSession.longitude;\n        let userLat= this.props.userInSession.latitude;\n        for (var i = 0; i < users.length; i++) {\n            let otherLong=users[i].longitude;\n            let otherLat= users[i].latitude;\n            users[i][\"distance\"] = this.calculateDistance(userLat,userLong,otherLat,otherLong);}\n        users.sort(function(a, b) { \n            return a.distance - b.distance;\n        });\n        return users\n    } \n\n    render() {\n        if(this.state.sortedUsers.length>0){        \n        const users = this.state.sortedUsers;\n        let eachUser=users.map(user=>{\n            return(\n                    <Link style={{textDecoration:\"none\"}} to={{ pathname: `/nearby/${user._id}`}}>\n\n                        <div className=\"avaPic eachUser\" style={{backgroundImage:`url(${user.profilePicUrl})` }}>\n                        <div className=\"nameDist\">\n                            <h3 style={{margin:\"0\",color:\"black\"}}>{user.username}</h3>\n                            <p style={{fontSize:\"20px\", margin:\"0\"}}><i className=\"fas fa-map-marker-alt\"></i> {user.distance}km</p>\n                        </div>\n                        </div>\n                    </Link>\n            )\n        })\n        return (\n            <MainLayout {...this.props}>\n            <div className=\"NearbyPage\">\n              {eachUser}  \n            </div>\n            </MainLayout>\n        )}\n        return(\n            <MainLayout {...this.props}>\n                <h1>Loading...</h1>\n            </MainLayout>\n        )\n    }\n}\n\nexport default geolocated({\n    positionOptions: {\n      enableHighAccuracy: false,\n    },\n    userDecisionTimeout: 5000,\n  })(Nearby);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport MainLayout from '../components/layout/MainLayout';\nimport EachPostCard from '../components/share/EachPostCard';\nimport {formatWrittenAt} from '../method';\n\nexport default class NearbyUser extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            nearbyUsers:JSON.parse(localStorage.getItem('nearbyUsers')),\n        }\n        this.formatWrittenAt= formatWrittenAt.bind(this);\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        let userId=params.id;\n        let users=this.state.nearbyUsers;\n        let nearbyUser = users.filter( function(user) {\n            return user._id===userId\n          })\n        let nearby= nearbyUser[0]\n        axios.get(`${process.env.REACT_APP_API}/postsBy/${nearby._id}`, {withCredentials:true})\n        .then( response =>{\n          const posts = response.data;\n          let usersPosts = posts.filter(function(post) {\n            return post.author._id === nearby._id;\n        });\n\n        let now = new Date();\n\n        let eachchangePost= usersPosts.map(post=>{\n            if (post.text[0].length > 100) {\n            post.short = []\n            post.short[0] = post.text[0].substring(0, 100) + \"...\"\n        }else if (post.text.length > 1) {\n            post.short = []\n            post.short[0] = post.text[0]\n            post.short[1] = \"...\"\n            }\n            post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            return post\n        })\n    \n          this.setState({posts:eachchangePost, user:nearby});\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n\n\n    render() {\n        if(this.state.user){\n                return (\n                    <div className=\"NearbyUser\">\n                        <MainLayout {...this.props}>\n                        <div className=\"avaPic\" style={{backgroundImage:`url(${this.state.user.profilePicUrl})` }}>\n                        </div>\n                        <h3>{this.state.user.username}</h3>\n                        <p style={{fontSize:\"20px\"}}><i className=\"fas fa-map-marker-alt\"></i> {this.state.user.distance}km</p>\n                        <hr/>\n                        <p>{this.state.user.about}</p>\n                        <Link to={{ pathname: `/chat/${this.state.user._id}`,\n                                    chatPartner: {user: this.state.user}}}>\n                            <button style={{margin: \"20px 0\"}} className=\"\" type=\"submit\">Message</button>\n                        </Link>\n\n                        {this.state.posts? <EachPostCard posts={this.state.posts}/> : <></>}\n\n                        </MainLayout>\n                    </div>\n        )\n            \n        } else {\n            return(\n                <>\n            </>\n            )\n            \n        }\n\n        \n        \n    }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport './AllRooms.css';\n\nexport default class AllRooms extends Component {\n    constructor (props){\n        super(props);\n        this.state={\n            user: JSON.parse(localStorage.getItem('user')),\n            otherUsers:JSON.parse(localStorage.getItem('nearbyUsers'))\n        }\n    }\n    \n    render() {\n        const {rooms} =this.props\n    \n        if(this.state.otherUsers){\n            let eachRoom= rooms.map((room, index)=>{\n                        let roomName= room[\"member_user_ids\"].filter(id => id !== this.state.user.username)[0]\n                        let partner= this.state.otherUsers.filter(user => user.username=== roomName)[0]\n                        const isRoomActive = room.id === this.props.currentRoom.id ? 'active' : '';   \n                        return(\n                            <Link className=\"eachRoom\" to={`/inbox/${room.id}`} key={index}>\n                            <li className={isRoomActive} key={room.id}>\n                                <div className=\"inboxList\">\n                                <div className=\"eachMesDiv\" style={{backgroundImage: `url(${partner.profilePicUrl})`}}>\n                                </div>\n                                {roomName}\n                                {room.unread_count > 0 ? (\n                                    <span className=\"room-unread\">{room.unread_count}</span>\n                                ): null}\n                                </div>\n                            </li>\n                            </Link>\n                        )\n                    })\n                    return (\n                        <ul className=\"roomsTab\">\n                        {eachRoom}   \n                        </ul>\n                    )\n        } else{\n            return(\n                <div>\n                    No messages, search for nearby user to chat with!\n                </div>\n            )\n        }\n        \n    }\n}\n","import React, { Component } from 'react';\nimport \"./MessageList.css\";\n\nexport default class MessageList extends Component {\n   \n    render() {\n        let eachMess= this.props.messages.map((message, index)=>{\n            if(message.senderId === this.props.userInSession.username){\n                return(\n                    <div key={index} className=\"currentUserDiv\" >\n                        {/* <div className=\"eachMes\"> */}\n                        {/* <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.props.userInSession.profilePicUrl})`}}> */}\n                        {/* </div> */}\n                        <p className=\"currentUser\">{message.text}</p>\n                        {/* <div style={{ float:\"left\", clear: \"both\" }}  ref={(el) => { this.messagesEnd = el; }} ></div> */}\n                        {/* </div> */}\n                    </div>\n                    )\n            }\n            else{\n                return(\n                    <div key={index} >\n                        {/* <div className=\"eachMes\">                        */}\n                        {/* <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.props.location.chatPartner.user.profilePicUrl})`}}> */}\n                        {/* </div> */}\n                        <p className=\"chatPartner\">{message.text}</p>\n                        {/* </div> */}\n                    </div>\n                )\n            }\n            \n            \n        })\n        return (\n            <div className=\"MessageList\">\n                {eachMess}\n            </div>\n        )\n    }\n   \n}\n","import React, {Component} from 'react';\nimport { Smile } from 'react-feather';\nimport { Picker } from 'emoji-mart';\nimport {\n    addEmoji,\n    toggleEmojiPicker,\n  } from '../../method';\nimport 'emoji-mart/css/emoji-mart.css';\nimport \"./Input.css\";\n\n    class Input extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                message: \"\",\n                showEmojiPicker: false,\n            }\n            this.handleChange = this.handleChange.bind(this);\n            this.handleSubmit = this.handleSubmit.bind(this);\n            this.addEmoji = addEmoji.bind(this);\n            this.toggleEmojiPicker = toggleEmojiPicker.bind(this);\n        }\n        handleChange(e) {\n            this.setState({\n                message: e.target.value\n            })\n        }\n        handleSubmit(e) {\n            e.preventDefault();\n            this.props.onSubmit(this.state.message);\n            this.setState({\n                message: ''\n            })\n        }\n        render() {\n            const {showEmojiPicker} = this.state; \n            return (\n                <>\n                    {showEmojiPicker ? (\n                        <Picker set=\"emojione\" onSelect={this.addEmoji} />\n                    ) : null}\n                    <form onSubmit={this.handleSubmit} className=\"input-field\">\n                    <button type=\"button\" className=\"toggle-emoji\" onClick={this.toggleEmojiPicker}>\n                        <Smile />\n                    </button>\n                    <input className=\"message-input\" type=\"text\" placeholder=\"Type your message and hit ENTER to send...\" onChange={this.handleChange} value={this.state.message}/>\n                    {/* <input className=\"message-submit\" type=\"submit\" value=\"send\" /> */}\n                    </form>\n                </>\n            )\n        }\n    }\n    export default Input;","import React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\nimport '../../pages/Inbox.css';\n\nexport default class EachRoom extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            currentUser:null,\n            userInSession: JSON.parse(localStorage.getItem('user')),\n            currentRoom: null,\n            messages:[],\n            users:[]\n        }\n        this.addMessage = this.addMessage.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.match.params.id !== this.props.match.params.id) {\n            const {params}= this.props.match;\n            // let roomId=params.id\n            const chatManager = new ChatManager({\n                instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n                userId: this.state.userInSession.username,\n                tokenProvider: new TokenProvider({\n                    url: `${process.env.REACT_APP_API}/authenticate`\n                })\n            })\n    \n            chatManager\n                    .connect({\n                        onRoomUpdated: room => {\n                            const { rooms } = this.props;\n                            const index = rooms.findIndex(r => r.id === room.id);\n                            rooms[index] = room;\n                            console.log(rooms)\n                            this.setState({\n                              rooms,\n                            });\n                          }\n                    })\n                    .then(currentUser => {    \n                        this.setState({\n                            currentUser:currentUser,\n                            messages:[]\n                        })\n                        currentUser.subscribeToRoom({\n                            roomId: `${params.id}`,\n                            messageLimit: 50,\n                            hooks: {\n                                onMessage: message => {\n                                    this.setState({\n                                        messages: [...this.state.messages, message]\n                                    })\n                                    const { currentRoom } = this.state;\n\n                                    if (currentRoom === null) return;\n\n                                    return currentUser.setReadCursor({\n                                        roomId: currentRoom.id,\n                                        position: message.id,\n                                    });\n                                },\n                            }})\n                            .then(currentRoom => {\n                            this.setState({\n                                currentRoom,\n                                users: currentRoom.userIds\n                            })\n                            this.props.setRoom(currentRoom)\n\n                            })\n                            .catch(error => console.log(error))\n                        })\n        }\n    }\n\n    componentDidMount (){\n        const {params}= this.props.match;\n        const chatManager = new ChatManager({\n            instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n            userId: this.state.userInSession.username,\n            tokenProvider: new TokenProvider({\n                url: `${process.env.REACT_APP_API}/authenticate`\n            })\n        })\n\n        chatManager\n                .connect({\n                    onRoomUpdated: room => {\n                        const { rooms } = this.state;\n                        const index = rooms.findIndex(r => r.id === room.id);\n                        rooms[index] = room;\n                        console.log(\"rooms on connect\"+ rooms)\n                        this.setState({\n                          rooms,\n                        });\n                      }\n                })\n                .then(currentUser => {\n                    this.setState({\n                        currentUser:currentUser,\n                        message:[]\n                    })\n\n                    currentUser.subscribeToRoom({\n                        roomId: `${params.id}`,\n                        messageLimit: 50,\n                        hooks: {\n                            onMessage: message => {\n                                this.setState({\n                                    messages: [...this.state.messages, message]\n                                })\n\n                                const { currentRoom } = this.state;\n\n                                if (currentRoom === null) return;\n\n                                return currentUser.setReadCursor({\n                                    roomId: currentRoom.id,\n                                    position: message.id,\n                                });\n                            },\n                        }})\n                        .then(currentRoom => {\n                        this.setState({\n                            currentRoom,\n                            users: currentRoom.userIds\n                        })\n                        this.props.setRoom(currentRoom)\n                        })\n                        .catch(error => console.log(error))\n    })}\n\n    addMessage(text) {\n        this.state.currentUser.sendMessage({\n            text,\n            roomId: this.state.currentRoom.id\n        })\n        .catch(error => console.error('error', error));\n    }\n\n    render() {\n        return (\n            <div className=\"eachRoom\"> \n                <MessageList messages={this.state.messages} userInSession={this.state.userInSession}/>           \n                <Input className=\"input-field-one\" onSubmit={this.addMessage} />            \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {Route} from 'react-router-dom';\nimport axios from 'axios';\nimport AllRooms from '../components/message/AllRooms';\nimport EachRoom from '../components/message/EachRoom';\nimport MainLayout from '../components/layout/MainLayout'\nimport './Inbox.css';\n\nexport default class Inbox extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            chatRooms:[],\n            currentUser: JSON.parse(localStorage.getItem('user')), \n            currentRoom:{}\n        };\n        this.setCurrentRoom= this.setCurrentRoom.bind(this);\n    }\n\n    componentDidMount (){\n        axios.get(`${process.env.REACT_APP_API}/inbox`, \n                    {withCredentials:true})\n        .then(response => {\n                let chatRooms= response.data;\n                this.setState({chatRooms:chatRooms})\n    })\n    }\n\n    setCurrentRoom= (room)=>{\n        this.setState({\n            currentRoom: room\n        })\n    }\n\n    render() {\n        return (\n            <MainLayout {...this.props} className=\"Dashboard\">\n                <div className=\"inboxPage\">\n                <AllRooms rooms={this.state.chatRooms} currentUser={this.state.currentUser} currentRoom={this.state.currentRoom}/>\n                <Route path=\"/inbox/:id\" render={(props)=><EachRoom rooms={this.state.chatRooms} userInSession={this.state.currentUser} setRoom={this.setCurrentRoom} {...props}/>}/>\n                </div>\n            </MainLayout>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n// import CommonRoom from '../../pages/CommonRoom';\n\nexport default class CommonRoomIntro extends Component {\n    render() {\n        return (\n            <div className=\"commonRoomIntro\">\n                <h3>Welcome to the Common Room</h3>\n                <p>You can talk with other online users \n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n                    Etiam vitae fringilla purus. Aenean commodo facilisis elit, ac pulvinar neque malesuada sed. \n                </p>\n                <p>Play some chess \n                    Mauris vestibulum metus id est maximus dignissim. \n                    Nunc id libero et enim fermentum semper. Nulla porta tristique lorem, et fermentum ex ornare sed. \n                    Aenean quis cursus erat, ut consequat quam. Praesent id velit metus. Aenean ut dui eget massa euismod tristique.\n                </p>\n                <Link style={{textDecoration:\"none\", color: \"white\"}} to=\"/share/commonRoom\">\n                    <button>Enter</button> \n                </Link>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n    export default class Login extends React.Component {\n        state = {\n            username: ''\n        };\n        render() {\n            return (\n                <div class=\"loginToCommon\">\n                    <form className=\"loginToCommonForm\" onSubmit={this.handleFormSubmit.bind(this)}>\n                            <label>Welcome to the Common Room!</label>\n                            <input placeholder='Enter your username' \n                                   value={this.state.username} \n                                   onChange={this.handleUsernameChange.bind(this)} />\n                        <button type='submit'>Enter</button>\n                    </form>  \n                </div>\n            );\n        }\n        handleUsernameChange(e) {\n            this.setState({\n                username: e.target.value\n            });\n        }\n        handleFormSubmit() {\n            if (this.state.username) {\n                this.props.login(this.state.username);\n            }\n        }\n    }\n","import React from 'react';\nimport { List, Icon, Header } from 'semantic-ui-react';\n    \nexport default function Rooms({ joined, joinable, activeRoom, enterRoom, leaveRoom }) {\n    const joinedRooms = joined.map((room) => (\n        <List.Item key={room.id}>\n            <List.Content floated='right'>\n                <a onClick={() => leaveRoom(room.id)}>Leave</a>\n            </List.Content>\n            <Icon name={room.id === activeRoom ? 'right triangle' : ''} />\n            <List.Content>\n                <a onClick={() => enterRoom(room.id)}>{ room.name }</a>\n            </List.Content>\n        </List.Item>\n    ));\n    const joinableRooms = joinable.map((room) => (\n        <List.Item key={room.id}>\n            <Icon name=\"\" />\n            <List.Content>\n                <a onClick={() => enterRoom(room.id)}>{ room.name }</a>\n            </List.Content>\n        </List.Item>\n    ));\n    return (\n        <div>\n            <Header as=\"h4\">Active Rooms</Header>\n            <List divided relaxed>\n                { joinedRooms }\n            </List>\n            <Header as=\"h4\">Joinable Rooms</Header>\n            <List divided relaxed>\n                { joinableRooms }\n            </List>\n        </div>\n    );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { Grid, List } from 'semantic-ui-react';\nimport Pusher from 'pusher-js';\n\nvar pusher = new Pusher(process.env.REACT_APP_PUSHER_key, {\n            cluster: process.env.REACT_APP_PUSHER_cluster,\n            forceTLS: true\n        });\n\nconst PIECES = {\n    'WK': '♔',\n    'WQ': '♕',\n    'WR': '♖',\n    'WB': '♗',\n    'WN': '♘',\n    'WP': '♙',\n    'BK': '♚',\n    'BQ': '♛',\n    'BR': '♜',\n    'BB': '♝',\n    'BN': '♞',\n    'BP': '♟'\n}\n\nexport default class GameBoard extends React.Component {\n    state = {\n        board: [],\n        players: {}\n    };\n\n    render() {\n        const board = this.state.board\n            .map((row, rowIndex) => {\n                return row.map((piece, columnIndex) => {\n                    const pieceSymbol = PIECES[piece];\n                    if (pieceSymbol) {\n                        return <text key={rowIndex + '-' + columnIndex} x={columnIndex} y={rowIndex + 0.8} style={{font: '1px sans-serif'}}>{pieceSymbol}</text>\n                    }\n                    return undefined;\n                }).filter((value) => value);\n            });\n\n        let activeCell;\n        if (this.state.activeCell) {\n            activeCell = <rect x={this.state.activeCell.x} y={this.state.activeCell.y} width=\"1\" height=\"1\" fillOpacity=\"0.5\" fill=\"#F00\" />\n        }\n\n        const players = Object.keys(this.state.players).map((player) => {\n            const color = this.state.players[player];\n            return (\n                <List.Item>\n                    <List.Header>{ color }</List.Header>\n                    { player }\n                </List.Item>\n            );\n        });\n\n        return (\n            <Grid>\n                <Grid.Row columns={2}>\n                    <Grid.Column>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\" viewBox=\"-.05 -.05 8.1 8.1\">\n                            <rect x=\"-.5\" y=\"-.5\" width=\"9\" height=\"9\" style={{fill: '#F4A460'}} />\n                            <path fill=\"#FFEBCD\" d=\"M0,0H8v1H0zm0,2H8v1H0zm0\n                            2H8v1H0zm0,2H8v1H0zM1,0V8h1V0zm2,0V8h1V0zm2\n                            0V8h1V0zm2,0V8h1V0z\"/>\n\n                            { [].concat.apply([], board) }\n\n                            { activeCell }\n                            <rect x=\"0\" y=\"0\" width=\"8\" height=\"8\" fillOpacity=\"0.1\" onClick={(e) => this._handleBoardClick(e)} />\n                        </svg>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <List>\n                            { players }\n                        </List>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n\n    componentDidMount() {\n        const room = this.props.room;\n\n        const channel = pusher.subscribe(`game-${room}`);\n        channel.bind('board-updated', () => {\n            this._refreshGame();\n        });\n        this._refreshGame();\n    }\n\n    componentWillUnmount() {\n        const room = this.props.room;\n\n        pusher.unsubscribe(`game-${room}`);\n    }\n\n    _handleBoardClick(e) {\n        const dim = e.target.getBoundingClientRect();\n        const x = e.clientX - dim.left;\n        const y = e.clientY - dim.top;\n\n        const cellX = Math.floor((x / 200) * 8);\n        const cellY = Math.floor((y / 200) * 8);\n\n        if (this.state.activeCell) {\n            if (this.state.activeCell.x === cellX && this.state.activeCell.y === cellY) {\n                this.setState({\n                    activeCell: null\n                });\n            } else {\n                axios.request({\n                    method: 'POST',\n                    url: `${process.env.REACT_APP_API}/games/` + this.props.room,\n                    data: {\n                        player: this.props.user.id,\n                        fromRow: this.state.activeCell.y,\n                        fromColumn: this.state.activeCell.x,\n                        toRow: cellY,\n                        toColumn: cellX\n                    }\n                });\n                this.setState({\n                    activeCell: null\n                });\n            }\n        } else {\n            this.setState({\n                activeCell: {\n                    x: cellX,\n                    y: cellY\n                }\n            });\n        }\n    }\n\n    _refreshGame() {\n        axios.request({\n            url: `${process.env.REACT_APP_API}/games/` + this.props.room\n        })\n        .then((response) => {\n            this.setState({\n                board: response.data.board,\n                players: response.data.players\n            });\n        });\n    }\n\n    getPlayers() {\n        return Object.keys(this.state.players);\n    }\n}\n// import React from 'react';\n// import axios from 'axios';\n// import { Grid, List } from 'semantic-ui-react';\n// import Pusher from 'pusher-js';\n//     var pusher = new Pusher( \"4c266cab29bd293c0092\", {\n//         cluster: \"eu\",\n//         forceTLS: true\n//     });\n// const PIECES = {\n//     'WK': '♔',\n//     'WQ': '♕',\n//     'WR': '♖',\n//     'WB': '♗',\n//     'WN': '♘',\n//     'WP': '♙',\n//     'BK': '♚',\n//     'BQ': '♛',\n//     'BR': '♜',\n//     'BB': '♝',\n//     'BN': '♞',\n//     'BP': '♟'\n// }\n// export default class GameBoard extends React.Component {\n//     state = {\n//         board: [],\n//         players: {}\n//     };\n\n//     componentDidMount() {\n//         const room = this.props.room;\n//         const channel = pusher.subscribe(`game-${room}`);\n//         channel.bind('board-updated', () => {\n//             this._refreshGame();\n//         });\n//         this._refreshGame();\n//     }\n\n//     componentWillUnmount() {\n//         const room = this.props.room;\n//         pusher.unsubscribe(`game-${room}`);\n//     }\n\n//     render() {\n//         const board = this.state.board\n//             .map((row, rowIndex) => {\n//                 return row.map((piece, columnIndex) => {\n//                     const pieceSymbol = PIECES[piece];\n//                     if (pieceSymbol) {\n//                         return <text key={rowIndex + '-' + columnIndex} x={columnIndex} y={rowIndex + 0.8} style={{font: '1px sans-serif'}}>{pieceSymbol}</text>\n//                     }\n//                     return undefined;\n//                 }).filter((value) => value);\n//             });\n//         let activeCell;\n//         if (this.state.activeCell) {\n//             activeCell = <rect x={this.state.activeCell.x} y={this.state.activeCell.y} width=\"1\" height=\"1\" fillOpacity=\"0.5\" fill=\"#F00\" />\n//         }\n//         const players = Object.keys(this.state.players).map((player) => {\n//             const color = this.state.players[player];\n//             return (\n//                 <List.Item>\n//                     <List.Header>{ color }</List.Header>\n//                     { player }\n//                 </List.Item>\n//             );\n//         });\n//         return (\n//             <Grid>\n//                 <Grid.Row columns={2}>\n//                     <Grid.Column>\n//                         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\" viewBox=\"-.05 -.05 8.1 8.1\">\n//                             <rect x=\"-.5\" y=\"-.5\" width=\"9\" height=\"9\" style={{fill: '#F4A460'}} />\n//                             <path fill=\"#FFEBCD\" d=\"M0,0H8v1H0zm0,2H8v1H0zm0\n//                             2H8v1H0zm0,2H8v1H0zM1,0V8h1V0zm2,0V8h1V0zm2\n//                             0V8h1V0zm2,0V8h1V0z\"/>\n//                             { [].concat.apply([], board) }\n//                             { activeCell }\n//                             <rect x=\"0\" y=\"0\" width=\"8\" height=\"8\" fillOpacity=\"0.1\" onClick={(e) => this._handleBoardClick(e)} />\n//                         </svg>\n//                     </Grid.Column>\n//                     <Grid.Column>\n//                         <List>\n//                             { players }\n//                         </List>\n//                     </Grid.Column>\n//                 </Grid.Row>\n//             </Grid>\n//         );\n//     }\n  \n//     _handleBoardClick(e) {\n//         const dim = e.target.getBoundingClientRect();\n//         const x = e.clientX - dim.left;\n//         const y = e.clientY - dim.top;\n//         const cellX = Math.floor((x / 200) * 8);\n//         const cellY = Math.floor((y / 200) * 8);\n//         if (this.state.activeCell) {\n//             if (this.state.activeCell.x === cellX && this.state.activeCell.y === cellY) {\n//                 this.setState({\n//                     activeCell: null\n//                 });\n//             } else {\n//                 axios.request({\n//                     method: 'POST',\n//                     url: `${process.env.REACT_APP_API}/games/` + this.props.room,\n//                     data: {\n//                         player: this.props.user.id,\n//                         fromRow: this.state.activeCell.y,\n//                         fromColumn: this.state.activeCell.x,\n//                         toRow: cellY,\n//                         toColumn: cellX\n//                     }\n//                 });\n//                 this.setState({\n//                     activeCell: null\n//                 });\n//             }\n//         } else {\n//             this.setState({\n//                 activeCell: {\n//                     x: cellX,\n//                     y: cellY\n//                 }\n//             });\n//         }\n//     }\n//     _refreshGame() {\n//         axios.request({\n//             url: `${process.env.REACT_APP_API}/games/` + this.props.room\n//         })\n//         .then((response) => {\n//             this.setState({\n//                 board: response.data.board,\n//                 players: response.data.players\n//             });\n//         });\n//     }\n// }\n","import React from 'react';\nimport { Grid, List, Comment, Form, Input } from 'semantic-ui-react';\nimport GameBoard from './GameBoard';\n\nexport default class Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: this.props.room.userIds,\n            messages: [],\n            newMessage: ''\n        };\n\n        props.user.subscribeToRoom({\n            roomId: props.room.id,\n            messageLimit: 50,\n            hooks: {\n                onUserJoined: (user) => {\n                    this.setState({\n                        users: props.room.users\n                    });\n                },\n                onUserLeft: (user) => {\n                    this.setState({\n                        users: props.room.users\n                    });\n                },\n                onMessage: (message) => {\n                    const messages = this.state.messages;\n                    let opponent;\n                    if (message.attachment && message.attachment.link && message.attachment.link.startsWith('urn:player:')) {\n                        opponent = message.attachment.link.substring(11);\n                        if (opponent !== props.user.id) {\n                            opponent = undefined;\n                        }\n                    }\n                    messages.push({\n                        id: message.id,\n                        user: message.senderId,\n                        message: this.state.newMessage,\n                        opponent: opponent\n                    });\n                    this.setState({\n                        messages: [...messages, message]\n                    });\n                }\n            }\n        })\n        .then(currentRoom=>{\n            this.setState({user: currentRoom.userIds})\n        })\n    }\n\n    render() {\n        const users = this.state.users\n            .filter((user) => user.id !== this.props.user.id)\n            .map((user) => (\n                <li style={{listStyle:\"none\"}} key={user.id}>\n                    <b style={{margin: \"0\", padding:\"0\"}}>\n                        { user.name }\n                    </b>\n                    <p style={{floated:'right'}}>\n                        <a onClick={() => this._challengePlayer(user)}>Challenge</a>\n                    </p>\n                </li>\n            ));\n\n        const messages = this.state.messages\n            .map((message) => {\n                let acceptGame;\n                if (message.opponent) {\n                    acceptGame = (\n                            <a onClick={() => this._acceptChallenge(message.user)}>Accept Challenge</a>\n                    );\n                }\n                return (\n                    // <div key={message.id}>\n                        <div className=\"columnFlex\">\n                            <h4 className=\"flexpart\">{ message.user}</h4>\n                            <p className=\"flexpart\">{ message.text }</p>\n                            { acceptGame }\n                        </div>\n                    // </div>\n                );\n            });\n\n        return (\n            <>\n                <div className=\"rowFlex\">\n                    <div className=\"allMessages\">\n                        { this.props.game && <GameBoard room={this.props.game} user={this.props.user} ref={(child) => { this._gameBoard = child; }}/> }\n                        <div className=\"ColumnFlex\" >\n                            { messages }\n                        </div>\n                        <div style={{ float:\"left\", clear: \"both\" }} ref={(el) => { this.messagesEnd = el; }} />\n                    </div>\n                    <div className=\"availableUsers\">\n                        <ul>\n                            <li style={{listStyle:\"none\"}}>\n                                <b>\n                                   You: { this.props.user.name }\n                                </b>\n                            </li>\n                            { users }\n                        </ul>\n                    </div>\n                </div>\n                <div>\n                    <Form onSubmit={this._handleSubmit.bind(this)}>\n                        <input className=\"typeText\" type=\"text\" placeholder='New Message...' value={this.state.newMessage} onChange={this._handleNewMessageChange.bind(this)} />\n                    </Form>\n                </div>\n            </>\n        );\n    }\n\n    componentDidMount() {\n        this._scrollToBottom();\n    }\n\n    componentDidUpdate() {\n        this._scrollToBottom();\n    }\n\n    _scrollToBottom() {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    _handleNewMessageChange(e) {\n        this.setState({\n            newMessage: e.target.value\n        });\n    }\n\n    _handleSubmit() {\n        const { newMessage } = this.state;\n        const { user, room } = this.props;\n        user.sendMessage({\n            text: newMessage,\n            roomId: room.id\n        });\n        this.setState({\n            newMessage: ''\n        });\n    }\n\n    _challengePlayer(player) {\n        const { user, room } = this.props;\n        user.sendMessage({\n            text: `I challenge ${player.name} to a game`,\n            roomId: room.id,\n            attachment: {\n                link: `urn:player:${player.id}`,\n                type: 'file',\n                fetchRequired: false\n            }\n        });\n    }\n\n    _acceptChallenge(player) {\n        const { user } = this.props;\n        user.createRoom({\n            name: `${user.id} vs ${player}`,\n            addUserIds: [player]\n        }).then((room) => {\n            this.props.startedGame(room.id, user.id, player);\n        });\n    }\n\n    getPlayersInRoom() {\n        const players = this._gameBoard ? this._gameBoard.getPlayers() : [];\n        const playersInRoom = this.state.users\n            .filter((user) => players.includes(user.id));\n        return playersInRoom;\n    }\n}","import React from 'react';\nimport { TokenProvider, ChatManager } from '@pusher/chatkit-client';\nimport Rooms from './Rooms';\nimport Chat from './Chat';\nimport axios from 'axios';\n\nexport default class Games extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        joined: [],\n        joinable: []\n    };\n    }\n\n    componentDidMount(){\n        const chatManager = new ChatManager({\n            instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n            userId: this.props.username,\n            tokenProvider: new TokenProvider({\n                url: `${process.env.REACT_APP_API}/authenticate`\n            })\n        });\n\n        chatManager\n        .connect()\n        .then(currentUser => {\n                console.log(\"here is user\"+currentUser);\n            this.setState({\n                currentUser: currentUser\n            });\n            currentUser.getJoinableRooms().then((rooms) => {\n                let lobby = rooms.find(room => room.name === 'Lobby');\n                if (lobby) {\n                    console.log(lobby)\n                    currentUser.joinRoom({ roomId: lobby.id });\n                } else {\n                    lobby = currentUser.rooms.find(room => room.name === 'Lobby');\n                }\n                if (lobby) {\n                    this.setState({\n                        lobbyId: lobby.id,\n                        activeRoom: lobby.id\n                    });\n                }\n            });\n            setInterval(this._pollRooms.bind(this), 5000);\n            this._pollRooms();\n        })\n        .catch((e) => {\n            console.log('Failed to connect to Chatkit');\n            console.log(e);\n        });\n    }\n\n    _pollRooms() {\n        const { currentUser } = this.state;\n        currentUser.getJoinableRooms()\n            .then((rooms) => {\n                let filtered = rooms.filter(room => {\n                    return room.isPrivate === false\n                })      \n                let joinedfiltered = currentUser.rooms.filter(room => {\n                    return room.isPrivate === false\n                })                \n                this.setState({\n                    joined: joinedfiltered,\n                    joinable: filtered\n                })\n            });\n    }\n    \n    _enterRoom(id) {\n        const { currentUser } = this.state;\n        currentUser.joinRoom({ roomId: id })\n            .then(() => {\n                this.setState({\n                    activeRoom: id\n                });\n                this._pollRooms();\n            })\n            .catch(() => {\n                console.log('Failed to enter room');\n            });\n    }\n\n    _leaveRoom(id) {\n        const { currentUser } = this.state;\n        currentUser.leaveRoom({ roomId: id })\n            .then(() => {\n                this._pollRooms();\n            })\n            .catch(() => {\n                console.log('Failed to leave room');\n            });\n    }\n\n    _startedGame(roomId, white, black) {\n        axios.request({\n            url: `${process.env.REACT_APP_API}/games`,\n            method: 'POST',\n            data: {\n                room: roomId,\n                whitePlayer: white,\n                blackPlayer: black\n            }\n        })\n        .then((response) => {\n            this.setState({\n                activeRoom: roomId\n            });\n            this._pollRooms();\n        });\n        }\n    \n    render() {\n        const { currentUser } = this.state;\n        let chat;\n        if (currentUser) {\n            const room = currentUser.rooms.find((room) => room.id === this.state.activeRoom);\n            if (room) {\n                const game = this.state.activeRoom !== this.state.lobbyId && this.state.activeRoom;\n                chat = <Chat user={currentUser} room={room} key={room.id} startedGame={this._startedGame.bind(this)} game={game} />\n            }\n        }\n        return (\n                <div className=\"rowFlex gamePage\">\n                    <div className=\"differentRooms\">\n                        <Rooms joined={this.state.joined}\n                                joinable={this.state.joinable}\n                                activeRoom={this.state.activeRoom}\n                                enterRoom={this._enterRoom.bind(this)}\n                                leaveRoom={this._leaveRoom.bind(this)} />\n                    </div>\n                    <div className=\"chatArea\">\n                        { chat }\n                    </div>\n                </div>\n        );\n    }\n}","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport Login from '../components/commonRoom/Login';\nimport Games from '../components/commonRoom/Games';\nimport \"../components/commonRoom/GameBoard.css\";\n\nclass CommonRoom extends React.Component {\n  constructor(props){\n      super(props);\n      this.state = {\n        user: JSON.parse(localStorage.getItem('user'))\n      };\n  }\n\n  //  enterGame(username) {\n  //   this.setState({\n  //   });\n  // }\n\n  render() {\n    let contents;\n    // if (this.state.username) {\n      contents = <Games username={this.state.user.username} />\n    // } else {\n    //   contents = <Login login={this.enterGame.bind(this)} />\n    // }\n    return (\n      <>\n        { contents }\n      </>\n    );\n  }\n}\n\nexport default CommonRoom;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './AllPosts.css';\nimport {formatWrittenAt} from '../../method'; \nimport EachPostCard from './EachPostCard';\n\nexport default class AllPosts extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {};\n        this.formatWrittenAt=formatWrittenAt.bind(this);\n    }\n\n    componentDidMount(){\n        axios({\n            method: \"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post`,\n            withCredentials: true\n        })\n        .then(response=>{\n            let changePost = response.data;\n            let now = new Date();\n            let eachchangePost= changePost.map(post=>{\n                if (post.text[0].length > 100) {\n                post.short = []\n                post.short[0] = post.text[0].substring(0, 100) + \"...\"\n            }else if (post.text.length > 1) {\n                post.short = []\n                post.short[0] = post.text[0]\n                post.short[1] = \"...\"\n                }\n                post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n                return post\n            })\n        \n            this.setState({posts:eachchangePost})\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    }\n\n    render() {\n        if(this.state.posts){\n            return <EachPostCard posts={this.state.posts}/>\n        } else {\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n","import React, { Component } from 'react'\nimport AllPosts from './AllPosts';\nimport {Link} from 'react-router-dom';\n\nexport default class ShareCorner extends Component {\n    render() {\n        return (\n            <div className=\"allPosts\">\n                <Link style={{textDecoration:\"none\", color: \"white\"}} to=\"/share/shareYourThoughts\">\n                    <button >Share your thougths</button> \n                </Link>\n                <AllPosts {...this.props}/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class PostInput extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            title:'',\n            text:'',\n            user: JSON.parse(localStorage.getItem('user'))\n        }\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_API}`,\n            withCredentials: true\n          });\n        this.service=service;\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const text = this.state.text;\n        const title = this.state.title;\n        this.service.post('/post', {text, title})\n        .then(response=>{\n            this.props.history.push('/share/thoughtsCorner/allThoughts')\n        })\n        .catch(err =>{\n            console.log(err)\n        })\n      }\n      \n    handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n    }\n    \n    render() {\n        return (\n            <div className=\"postInput\">\n            <form onSubmit={this.handleFormSubmit}>\n                <input name=\"title\" placeholder=\"title\" value={this.state.title} onChange={this.handleChange} type=\"text\"/>\n                <textarea className=\"form-control\" name=\"text\" cols=\"40\" rows=\"5\" placeholder=\"Share your thought...\" value={this.state.text} onChange={this.handleChange}></textarea>\n                <button style={{marginTop:\"10px\"}} type=\"submit\">Share</button>\n            </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link, Redirect} from 'react-router-dom';\nimport {formatWrittenAt} from '../../method'; \n\nexport default class EachPost extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            user:JSON.parse(localStorage.getItem('user')),\n            comment:'',\n            post:null\n        };\n        this.formatWrittenAt= formatWrittenAt.bind(this)\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        axios({\n            method:\"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post/${params.id}`,\n            withCredentials:true\n        })\n        .then(response=>{\n            console.log(response.data)\n            let now = new Date();\n            let post = response.data.post;\n            let comments = response.data.comments;\n            let eachComment= comments.map(comment=>{\n                comment.niceTime= this.formatWrittenAt(new Date(post.writtenAt), now);\n                return comment\n            })\n                post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            this.setState({post:post, comments:eachComment})\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    deletePost (postId){\n        axios({\n            method:\"POST\",\n            baseURL:`${process.env.REACT_APP_API}/deletePost/${postId}`,\n            withCredentials:true\n        })   \n        .then((response)=>{\n            this.setState({post:response.data.post, comments:null})\n            this.props.history.push('/share/thoughtsCorner/allThoughts');\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const comment = this.state.comment;\n        const user=this.state.user;\n        axios.post(`${process.env.REACT_APP_API}/post/${this.state.post._id}/comment`,{comment, user})\n        .then(response=>{ \n            let now = new Date();\n            let post=response.data.post;\n            post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            let comments = response.data.comments;\n            let eachComment= comments.map(comment=>{\n                comment.niceTime= this.formatWrittenAt(new Date(post.writtenAt), now);\n                return comment\n            })\n            this.setState({comments:eachComment, post:post, comment:\"\"})\n            this.props.history.push(`/share/thoughtsCorner/allThoughts/${post._id}`)    \n        })\n        .catch(err =>{\n            console.log(err)\n        })\n      }\n      \n    handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n    }\n\n    render() {\n        if(this.state.post){\n            let eachLine= this.state.post.text.map(text=>{\n                return(\n                    <p className=\"eachLine\">{text}</p>\n                )\n            })\n            let eachComment;\n            if(this.state.comments){\n                eachComment= this.state.comments.map(comment=>{\n                    return(\n                        <div className=\"columnFlex\" style={{width:\"100vh\"}}>\n                            {comment.author._id === this.state.user._id?\n                            (<>  \n                                <div className=\"rowFlex\" style={{marginBottom:\"10px\"}}> \n                                    <div className=\"eachMesDiv\" style={{backgroundImage: `url(${comment.author.profilePicUrl})`, width:\"50px\", height:\"50px\"}}></div>\n                                    <div className=\"columnDiv\">\n                                    <p className=\"commentLine\">\n                                    <Link to={{pathname: `/profile`}}>\n                                    {comment.author.username} </Link> <span className=\"\">{comment.text}</span></p>\n                                    <p style={{textAlign:\"left\"}}>{comment.niceTime}</p>\n                                    </div>\n                                </div>\n                            </>\n                            ):\n                            (<>\n                                <div className=\"rowFlex\" style={{marginBottom:\"20px\"}}> \n                                    <div className=\"eachMesDiv\" style={{backgroundImage: `url(${comment.author.profilePicUrl})`, width:\"50px\", height:\"50px\"}}></div>\n                                    <div className=\"columnDiv\">\n                                    <p className=\"commentLine\">\n                                    <Link to={{pathname: `/nearby/${comment.author._id}`}}>\n                                    {comment.author.username} </Link> <span className=\"\">{comment.text}</span></p>\n                                    <p style={{textAlign:\"left\"}}>{comment.niceTime}</p>\n                                    </div>\n                                </div>\n                            </>)\n                            }\n                        </div>\n                    )\n                })\n            }\n            return (\n            <div className=\"postDetails\">\n                <h1 style={{textAlign:\"left\"}}>{this.state.post.title}</h1>\n                    <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.state.post.author.profilePicUrl})`, width:\"50px\", height:\"50px\"}}></div>\n                    {this.state.post.author._id === this.state.user._id?\n                        (<>\n                            <p className=\"postedByLine\">Posted by <Link to={{ pathname: `/profile`}}>{this.state.post.author.username}</Link>  </p>\n                            <p style={{textAlign:\"left\"}}>{this.state.post.niceTime}</p>\n                            <div className=\"rowFlex\" style={{justifyContent:\"flex-start\"}}>\n                                <Link style={{marginRight:\"10px\"}} to={{pathname: `/share/thoughtsCorner/allThoughts/editThought/${this.state.post._id}`}}>Edit</Link>\n                                <Link   className=\"deleteBtn\"\n                                        onClick={()=>{this.deletePost(this.state.post._id)}} \n                                        exact to=\"#\">Delete\n                                </Link>\n                            </div>\n                        </>\n                        ) \n                        :   \n                        (<>\n                            <p className=\"postedByLine\">Posted by <Link to={{ pathname: `/nearby/${this.state.post.author._id}`}}>{this.state.post.author.username}</Link>            \n                            </p>\n                            <p style={{textAlign:\"left\"}}>{this.state.post.niceTime}</p>\n                        </>\n                        )\n                    }\n                <hr/>\n                {eachLine}\n                <hr/>\n                <form onSubmit={this.handleFormSubmit}>\n                    <textarea className=\"form-control\" name=\"comment\" cols=\"40\" rows=\"5\" placeholder=\"Comment...\" value={this.state.comment} onChange={this.handleChange}></textarea>\n                    <button className=\"commentBtn\" type=\"submit\">Comment</button>\n                </form>\n                <div className=\"columnFlex\">\n                {eachComment}\n                </div>\n                <hr/>\n                \n            </div>\n        )\n        }\n        else{\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class EditPost extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            title:\"\",\n            text:\"\"\n        }\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_API}`,\n            withCredentials: true\n          });\n        this.service=service;\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        axios({\n            method:\"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post/${params.id}`,\n            withCredentials:true\n        })    \n        .then(response=>{\n            let post=response.data.post;\n            this.setState({\n                title:post.title,\n                text:post.text,\n                post:post\n            })\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const text = this.state.text;\n        const title = this.state.title;\n        this.service.post(`/editPost/${this.state.post._id}`, {text, title})\n        .then(response=>{\n            let updatedPost=response.data\n            this.props.history.push(`/share/thoughtsCorner/allThoughts/${updatedPost._id}`)\n        })\n        .catch(err =>{\n            console.log(err)\n        })\n      }\n      \n    handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n    }\n\n    render() {\n        return (\n            <div className=\"postInput\">\n            <form onSubmit={this.handleFormSubmit}>\n                <label style={{marginRight:\"20px\"}}>Title</label>\n                <input name=\"title\" placeholder=\"title\" value={this.state.title} onChange={this.handleChange} type=\"text\"/>\n                <textarea className=\"form-control\" name=\"text\" cols=\"40\" rows=\"5\" placeholder=\"Share your thought...\" value={this.state.text} onChange={this.handleChange}></textarea>\n                <button style={{marginTop:\"10px\"}} type=\"submit\">Edit</button>\n            </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport CommonRoomIntro from \"../components/commonRoom/CommonRoomIntro\";\nimport CommonRoom from './CommonRoom';\nimport MainLayout from '../components/layout/MainLayout';\nimport ShareCorner from '../components/share/ShareCorner';\nimport \"./SharePage.css\"\nimport PostInput from '../components/share/PostInput';\nimport EachPost from '../components/share/EachPost';\nimport EditPost from '../components/share/EditPost';\nimport DeletePost from '../components/share/DeletePost';\n\nexport default class SharePage extends Component {\n    render() {\n        return (\n            <MainLayout {...this.props}>\n                {/* <div className=\"columnFlex\" style={{width:\"100%\", height: \"88vh\", justifyContent:\"space-between\"}}> */}\n                    <div className=\"sharebackground\">\n                        <div className=\"sharingTab\">\n                            <Link style={{textDecoration:\"none\", color: \"white\"}} to=\"/share/commonRoomIntro\">\n                                <h3>Common Room</h3>\n                            </Link>\n                            <Link style={{textDecoration:\"none\", color: \"white\"}} to=\"/share/thoughtsCorner/allThoughts\">\n                                <h3>Thoughts Corner</h3>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"otherComponents\">\n                    <Route path='/share/commonRoomIntro' render = {(routeProps) => <CommonRoomIntro {...routeProps}/>} />\n                    <Route path='/share/commonRoom' render = {(routeProps) => <CommonRoom {...routeProps}/>} />\n                    <Route path='/share/shareYourThoughts' render = { (routeProps) => <PostInput {...routeProps}/>}/>\n                    <Route exact path=\"/share/thoughtsCorner/allThoughts\" render = { (routeProps) => <ShareCorner {...routeProps} />}/>\n                    <Route exact path=\"/share/thoughtsCorner/allThoughts/:id\" render = { (routeProps) => <EachPost {...routeProps}/>}/>\n                    <Route exact path=\"/share/thoughtsCorner/allThoughts/editThought/:id\" render = { (routeProps) => <EditPost {...routeProps}/>}/>\n                    {/* <Route exact path=\"/share/thoughtsCorner/allThoughts/delete/:id\" render = {(routeProps)=> <DeletePost {...routeProps}/>}/> */}\n                    </div>\n                {/* </div> */}\n            </MainLayout>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Redirect} from 'react-router-dom';\n\nexport default class DeletePost extends Component {\n    componentDidMount(){\n        const {params} = this.props.match\n        axios({\n            method:\"POST\",\n            baseURL:`${process.env.REACT_APP_API}/deletePost/${params.id}`,\n            withCredentials:true\n        })   \n        .then(()=>{\n            return <Redirect to=\"/share/thoughtsCorner/allThoughts\"/>\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                Deleting...\n            </div>\n        )\n    }\n}\n","// import React, { Component } from 'react';\n// import Talk from 'talkjs';\n\n// export default class ChatApp extends Component {\n//     constructor (props){\n//         super (props);\n//         this.inbox=undefined;\n//     }\n//     componentDidMount() {\n//         // Promise can be `then`ed multiple times\n//         Talk.ready\n//             .then(() => {\n//                 const me = new Talk.User({\n//                     id: `${this.props.userInSession._id}`,\n//                     name: `${this.props.userInSession.username}`,\n//                     photoUrl: `${this.props.userInSession.profilePicUrl}`,\n//                     welcomeMessage: \"Hey there! How are you? :-)\"\n//                 });\n\n//                 if (!window.talkSession) {\n//                     window.talkSession = new Talk.Session({\n//                         appId: \"txjMxHYM\",\n//                         me: me\n//                     });\n//                 }\n\n//                 const other = new Talk.User({\n//                     id: `${this.props.location.chatPartner.user._id}`,\n//                     name: `${this.props.location.chatPartner.user.username}`,\n//                     photoUrl: `${this.props.location.chatPartner.user.profilePicUrl}`,\n//                     welcomeMessage: \"Hey there! Love to chat :-)\"\n//                 });\n\n//                 // You control the ID of a conversation. oneOnOneId is a helper method that generates\n//                 // a unique conversation ID for a given pair of users. \n//                 const conversationId = Talk.oneOnOneId(me, other);\n\n//                 const conversation = window.talkSession.getOrCreateConversation(conversationId);\n//                 conversation.setParticipant(me);\n//                 conversation.setParticipant(other);\n\n//                 this.inbox = window.talkSession.createInbox({\n//                     selected: conversation\n//                 });\n//                 this.inbox.mount(this.container);\n\n//             })\n//             .catch(e => console.error(e));\n//     }\n\n//     componentWillUnmount() {\n//         if (this.inbox) {\n//             this.inbox.destroy();\n//         }\n//     }\n\n//     render() {\n//         return ( \n//             < span >\n//             <div style = {{ height: '100vh' }} ref = { c => this.container = c }> Loading... \n//             </div> \n//             </span > );\n//     }\n// }\n\n\n\n\nimport React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\nimport axios from 'axios';\n\nexport default class ChatApp extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            currentUser:null,\n            chatPartner: this.props.location.chatPartner.user,\n            currentRoom: {users:[]},\n            messages:[],\n            users:[]\n        }\n        this.addMessage = this.addMessage.bind(this);\n    }\n\n    componentDidMount (){\n    \n        axios.get(`${process.env.REACT_APP_API}/newChat`, \n        {withCredentials:true})\n        .then(response => {\n            let chatRooms= response.data;\n          \n            let existRoom=\"\";\n            for (var i=0; i<chatRooms.length; i++){\n                let usersInRoom = chatRooms[i][\"member_user_ids\"]\n                for (var j=0; j<usersInRoom.length; j++){\n                \n                    if (usersInRoom[j]===this.state.chatPartner.username){\n                        existRoom= chatRooms[i].id\n    \n                        break;\n                    }\n                }\n            }\n\n            const chatManager = new ChatManager({\n                instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n                userId: this.props.userInSession.username,\n                tokenProvider: new TokenProvider({\n                    url: `${process.env.REACT_APP_API}/authenticate`\n                })\n                })\n            if (existRoom){\n                chatManager\n                    .connect()\n                    .then(currentUser => {\n                        console.log(currentUser)\n                        this.setState({\n                            currentUser:currentUser\n                        })\n                        currentUser.subscribeToRoom({\n                            roomId: `${existRoom}`,\n                            messageLimit: 100,\n                            hooks: {\n                                onMessage: message => {\n                                    this.setState({\n                                        messages: [...this.state.messages, message]\n                                    })\n                                },\n                            }})\n                            .then(currentRoom => {\n                            console.log(currentRoom.userIds);\n                            this.setState({\n                                currentRoom,\n                                users: currentRoom.userIds\n                            })\n                            })\n                            .catch(error => console.log(error))\n            })} else {\n                chatManager\n                .connect()\n                .then(currentUser => {\n                    this.setState({\n                        currentUser:currentUser\n                    })\n\n                    return currentUser.createRoom({\n                        name: `${this.props.location.chatPartner.user.username}`,\n                        private: true,\n                        addUserIds: [ `${this.state.chatPartner.username}`],\n                        customData: { foo: 42 },\n                    })\n                    .then(room => {\n                        return currentUser.subscribeToRoom({\n                            roomId: `${room.id}`,\n                            messageLimit: 100,\n                            hooks: {\n                                onMessage: message => {\n                                    this.setState({\n                                        messages: [...this.state.messages, message]\n                                    })\n                                },\n                            }})\n                            .then(currentRoom => {\n                            console.log(currentRoom.userIds);\n                            this.setState({\n                                currentRoom,\n                                users: currentRoom.userIds\n                            })\n                            })\n                            .catch(error => console.log(error))\n            })})\n         }\n        })\n    }\n    \n    addMessage(text) {\n        this.state.currentUser.sendMessage({\n            text,\n            roomId: this.state.currentRoom.id\n        })\n        .catch(error => console.error('error', error));\n    }\n\n    render() {\n        return (\n            <>\n                <MessageList messages={this.state.messages} {...this.props}/>\n                <Input className=\"input-field\" onSubmit={this.addMessage} />\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport ChatApp from '../components/message/ChatApp';\nimport MainLayout from '../components/layout/MainLayout';\n\nexport default class ChatPage extends Component {\n    render() {\n        return (\n            <MainLayout {...this.props}>\n                <ChatApp {...this.props}/>\n            </MainLayout>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom';\nimport Home from './pages/Home.jsx';\nimport Signup from './components/auth/Signup.jsx';\nimport Profile from './pages/Profile.jsx';\nimport EditProfile from './pages/EditProfile.jsx';\nimport AuthService from './components/auth/auth-service.jsx';\nimport Login from './components/auth/Login.jsx';\nimport Nearby from './pages/Nearby.jsx';\nimport NearbyUser from './pages/NearbyUser.jsx';\nimport Inbox from './pages/Inbox';\nimport SharePage from './pages/SharePage';\nimport CommonRoom from './pages/CommonRoom';\nimport './App.css';\nimport ChatPage from './pages/ChatPage';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = { loggedInUser: null };\n    this.service=new AuthService();\n  }\n\n  fetchUser(){\n    if( this.state.loggedInUser === null ){\n      this.service.loggedin()\n      .then(response =>{\n        this.setState({\n          loggedInUser:  response\n        }) \n      })\n      .catch( err =>{\n        this.setState({\n          loggedInUser:  false\n        }) \n      })\n    }\n  }\n\n  getTheUser= () => {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  render() {\n    this.fetchUser()\n      return (\n        <div className=\"App\">\n          <Route exact path='/profile' render = {(routeProps) => <Profile userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>}/>\n          <Route exact path = '/editProfile' render = {(routeProps) => <EditProfile userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/nearby' render = {(routeProps) => <Nearby userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>}/>\n          <Route exact path=\"/nearby/:id\" render = {(routeProps) => <NearbyUser userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/' render = {(routeProps) => <Home userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/signup' render = {(routeProps) => <Signup getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/login' render = {(routeProps) => <Login getUser={this.getTheUser} {...routeProps} />} />\n          <Route path='/inbox' render = {(routeProps) => <Inbox userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path=\"/chat/:id\" render= {(routeProps)=> <ChatPage userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route path=\"/share\" render= {(routeProps)=> <SharePage userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>}/>\n\n        </div>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'; // <== !!!\n\nReactDOM.render((\n<Router> \n    <App />\n</Router> \n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}