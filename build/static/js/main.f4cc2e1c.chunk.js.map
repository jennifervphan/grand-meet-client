{"version":3,"sources":["components/navbar/Navbar.jsx","components/layout/MainLayout.jsx","pages/Home.jsx","components/auth/auth-service.jsx","components/auth/Signup.jsx","components/share/EachPostCard.jsx","method.jsx","pages/Profile.jsx","pages/EditProfile.jsx","components/auth/Login.jsx","pages/Nearby.jsx","pages/NearbyUser.jsx","components/message/AllRooms.jsx","components/message/MessageList.jsx","components/message/Input.jsx","components/message/EachRoom.jsx","pages/Inbox.jsx","components/commonRoom/Login.jsx","components/commonRoom/Rooms.jsx","components/commonRoom/GameBoard.jsx","components/commonRoom/Chat.jsx","components/commonRoom/Games.jsx","pages/CommonRoom.jsx","components/share/AllPosts.jsx","components/share/ShareCorner.jsx","components/share/PostInput.jsx","components/share/EachPost.jsx","pages/SharePage.jsx","components/message/ChatApp.jsx","pages/ChatPage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navbar","props","state","loggedInUser","user","this","getUser","setState","className","style","backgroundColor","opacity","to","textDecoration","color","Component","MainLayout","children","Home","userInSession","AuthService","signup","form","axios","method","baseURL","process","withCredentials","data","then","response","setUser","loggedin","service","get","login","username","password","coordinates","post","logout","localStorage","removeItem","create","setItem","JSON","stringify","Signup","handleFormSubmit","event","preventDefault","FormData","formRef","current","append","coords","longitude","latitude","file","history","push","catch","error","console","log","handleChange","target","name","value","uploadPic","files","React","createRef","ref","onSubmit","type","onChange","e","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","EachPostCard","eachPost","posts","map","index","short","key","backgroundImage","author","profilePicUrl","marginRight","title","marginTop","class","niceTime","pathname","_id","text","formatWrittenAt","writtenAt","now","getDate","getMonth","getFullYear","getHours","toString","getMinutes","getSeconds","Profile","logoutUser","parse","getItem","bind","usersPosts","filter","Date","eachchangePost","length","substring","err","width","about","margin","onClick","EditProfile","height","border","Login","Nearby","_isMounted","calculateUserDist","users","userLong","userLat","i","otherLong","otherLat","calculateDistance","sort","a","b","distance","sortedUsers","lat1","lon1","lat2","lon2","Math","PI","x","cos","y","floor","sqrt","responseFromApi","eachUser","NearbyUser","nearbyUsers","userId","match","params","id","nearby","chatPartner","AllRooms","otherUsers","rooms","eachRoom","room","roomName","partner","isRoomActive","currentRoom","MessageList","eachMess","messages","message","senderId","Input","showEmojiPicker","handleSubmit","addEmoji","emoji","native","toggleEmojiPicker","set","onSelect","placeholder","EachRoom","currentUser","addMessage","prevProps","roomId","ChatManager","instanceLocator","tokenProvider","TokenProvider","url","connect","subscribeToRoom","messageLimit","hooks","onMessage","userIds","setRoom","sendMessage","Inbox","setCurrentRoom","chatRooms","path","render","handleUsernameChange","Rooms","joined","joinable","activeRoom","enterRoom","leaveRoom","joinedRooms","List","Item","Content","floated","Icon","joinableRooms","Header","as","divided","relaxed","pusher","Pusher","cluster","forceTLS","PIECES","GameBoard","board","players","activeCell","row","rowIndex","piece","columnIndex","pieceSymbol","font","fillOpacity","fill","Object","keys","player","Grid","Row","columns","Column","xmlns","viewBox","d","concat","apply","_handleBoardClick","subscribe","_refreshGame","unsubscribe","dim","getBoundingClientRect","clientX","left","clientY","top","cellX","cellY","request","fromRow","fromColumn","toRow","toColumn","Chat","newMessage","onUserJoined","onUserLeft","opponent","attachment","link","startsWith","undefined","listStyle","padding","_challengePlayer","acceptGame","_acceptChallenge","game","child","_gameBoard","float","clear","el","messagesEnd","Form","_handleSubmit","_handleNewMessageChange","_scrollToBottom","scrollIntoView","behavior","fetchRequired","createRoom","addUserIds","startedGame","getPlayers","includes","Games","getJoinableRooms","lobby","find","joinRoom","lobbyId","setInterval","_pollRooms","white","black","whitePlayer","blackPlayer","chat","_startedGame","_enterRoom","_leaveRoom","CommonRoom","contents","enterGame","AllPosts","changePost","ShareCorner","PostInput","cols","rows","EachPost","eachLine","alignItems","SharePage","justifyContent","routeProps","exact","ChatApp","location","existRoom","usersInRoom","j","chatManager","private","customData","foo","ChatPage","App","getTheUser","fetchUser","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4cc2e1c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n// import AuthService from '../auth/auth-service';\n\nclass Navbar extends Component {\n  constructor(props){\n    super(props);\n    this.state = { loggedInUser: null };\n    // this.service = new AuthService();\n  }\n\n  componentDidMount() {\n    debugger\n    let user= this.props.getUser(); \n    this.setState({loggedInUser:user})\n  }\n\n  render(){\n    if(this.state.loggedInUser){\n      return(\n        <nav className=\"Navbar\" style={{backgroundColor:\"#334455\", opacity:\"0.7\"}}>\n          {/* <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link> */}\n          {/* <div className=\"navItems\"> */}\n          <Link to=\"/profile\" style={{ textDecoration: 'none', color: \"white\"}}><h4 className=\"navItem\">Profile</h4></Link>\n          <Link to=\"/nearby\" style={{ textDecoration: 'none', color: \"white\"}}><h4 className=\"navItem\">Nearby</h4></Link>\n          <Link to=\"/share\" style={{ textDecoration: 'none', color: \"white\"}} ><h4 className=\"navItem\">Share</h4></Link>\n          <Link to=\"/inbox\" style={{ textDecoration: 'none', color: \"white\"}}><i className=\"navItem fas fa-comments fa-2x\"></i></Link>\n          {/* </div> */}\n        </nav>\n      )\n    } else {\n      return ( \n        <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}>Login</Link>\n        </nav>\n      )\n    }\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport Nav from '../navbar/Navbar';\nimport './MainLayout.css';\n\nexport default class MainLayout extends Component {\n    render() {\n        return (\n            <div className=\"MainLayout\">\n                <Nav {...this.props}/>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport MainLayout from '../components/layout/MainLayout';\nimport {Link} from 'react-router-dom';\nimport \"./Home.css\";\n\nexport default class Home extends Component {\n    render() {\n        if (this.props.userInSession){\n            return (\n                <div className=\"Homepage\">\n                <MainLayout {...this.props}>\n                    <div className=\"welcomeInfo\">\n                    <h1>talk.share.meet.</h1>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                    </p>\n                    </div>\n                </MainLayout>\n                </div>\n            )\n        }else {\n            return (\n            <div className=\"Homepage\">\n            {/* <MainLayout {...this.props}> */}\n            <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}><h3>Login</h3></Link>\n            </nav>\n                <div className=\"welcomeInfo\">\n                <h1>talk.share.meet.</h1>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                </p>\n                <Link to='/signup' style={{ textDecoration: 'none' }}><button className=\"registerBtnHome\">Register</button></Link>\n                </div>\n            {/* </MainLayout> */}\n            </div>\n        ) \n        }   \n    }\n}\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API}`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (form) => {\n    return axios({\n      method:\"POST\",\n      baseURL:`${process.env.REACT_APP_API}/signup`,\n      withCredentials: true,\n      data:form\n    })\n    .then(response => {\n      this.setUser(response.data)\n      return response.data    \n    })\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n  \n  login = \n  // (username,password) => {\n  //   return axios({\n  //     method:\"POST\",\n  //     baseURL: `http://localhost:5000/api/login`,\n  //     withCredentials: true,\n  //   })\n  (username, password, coordinates) => {\n    return this.service.post('/login', {username, password, coordinates})\n    .then(response => {\n      this.setUser(response.data)\n    return response.data})     \n  }\n\n  setUser(user){\n    localStorage.setItem('user', JSON.stringify(user));\n}\n\n// getUser(){\n//   return JSON.parse(localStorage.getItem('user'));\n// }\n\n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(() => {\n      localStorage.removeItem('user');\n      localStorage.removeItem('nearbyUsers');\n\n    })\n  }\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\nimport {geolocated} from 'react-geolocated';\n// import MainLayout from '../layout/MainLayout';\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.formRef = React.createRef();\n    this.state = { username: '', password: '', file: null };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const form = new FormData(this.formRef.current)\n    form.append(\"longitude\",this.props.coords.longitude)\n    form.append(\"latitude\",this.props.coords.latitude)\n\n    this.service.signup(form)\n    .then(response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n            file: null\n\n        });\n        this.props.history.push('/profile')\n    })\n    .catch( error => console.log(error) )\n  }\n  \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n  uploadPic=(event)=>{\n    this.setState({\n      file: (event.target.files[0])})\n  }\n\n  render(){\n    return(\n      <div className=\"loginPage\">\n         <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}><h3>Login</h3></Link>\n        </nav>\n      <Link to=\"/\" style={{ textDecoration: 'none', color:\"white\" }}><i className=\"fas fa-times-circle fa-2x\"></i></Link>\n        <div className=\"signupForm\">\n        <h3>Register</h3>\n        <form className=\"loginInput\" ref={this.formRef} onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <label>Profile Picture:</label>\n          <input type=\"file\" name=\"picture\" onChange={this.uploadPic}/>\n\n          <button className=\"submitBtn\" type=\"submit\">Register</button>\n        </form>\n  \n        <p>Already have account? \n            <Link to={\"/login\"} style={{ color: 'rgb(5, 5, 5)', textDecoration:\"underline\" }}> Login</Link>\n        </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(Signup);\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class EachPostCard extends Component {\n    render() {\n            const {posts}= this.props;\n            let eachPost= posts.map((post,index)=>{\n                if(post.short){\n                    return(\n                        <div className=\"eachPost\"  key={index}>\n                            <div className=\"titleDiv\">\n                                <div className=\"sharePic\" style={{backgroundImage: `url(${post.author.profilePicUrl})`, marginRight:\"10px\"}}></div>\n                                <h4 className=\"postTitle\">{post.title}</h4>\n                            </div>\n                            <p style={{marginTop:\"10px\"}}>{post.short[0]}</p>\n                            <p>{post.short[1]}</p>\n                            <div className=\"footerDiv\">\n                                <p><i class=\"far fa-clock\"></i> {post.niceTime}</p>\n                                <Link to={{\n                                pathname:`/share/thoughtsCorner/${post._id}`\n                                }}>Read more\n                                </Link>\n                            </div>\n                            \n                        </div>\n                    )\n                } else{\n                    return(\n                        <div className=\"eachPost\" key={index}>\n                            <div className=\"titleDiv\">\n                                <div className=\"sharePic\" style={{backgroundImage: `url(${post.author.profilePicUrl})`, marginRight:\"10px\"}}></div>\n                                <h4 className=\"postTitle\">{post.title}</h4>\n                            </div>\n                            <p style={{marginTop:\"10px\"}}>{post.text[0]} ...</p>\n                            <div className=\"footerDiv\">\n                                <p><i class=\"far fa-clock\"></i> {post.niceTime}</p>\n                                <Link to={{\n                                pathname:`/share/thoughtsCorner/${post._id}`\n                                }}>Read more</Link>\n                            </div>\n                        </div>\n                )\n                }\n                \n            })\n            return (\n                <div  className=\"posts\">\n                    {eachPost}\n                </div>\n            )\n    }\n}\n","// import Chatkit from '@pusher/chatkit-client';\n// import axios from 'axios';\n\n    function toggleEmojiPicker() {\n      this.setState({\n        showEmojiPicker: !this.state.showEmojiPicker,\n      });\n    }\n\n    function addEmoji(emoji) {\n      const { message } = this.state;\n      const text = `${message}${emoji.native}`;\n\n      this.setState({\n        message: text,\n        showEmojiPicker: false,\n      });\n    }\n\n    function formatWrittenAt(writtenAt, now) {\n      if (writtenAt.getDate() === now.getDate() &&\n          writtenAt.getMonth() === now.getMonth() &&\n          writtenAt.getFullYear() === now.getFullYear()) {\n          return \"today \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n              (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n              (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n      } else if (writtenAt.getMonth() === now.getMonth() &&\n          writtenAt.getFullYear() === now.getFullYear() &&\n          writtenAt.getDate() === now.getDate() - 1) {\n          return \"yesterday \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n              (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n              (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n      } else if (writtenAt.getFullYear() === now.getFullYear()) {\n          return (writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate().toString()) + \".\" +\n              (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth().toString()) +\n              \". \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n              (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n              (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n      } else {\n          return (writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate()) + \".\" +\n              (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth()) + \".\" +\n              writtenAt.getFullYear().toString() +\n              \" \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours()) + \":\" +\n              (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes()) + \":\" +\n              (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds());\n      }\n  }\nexport {toggleEmojiPicker, addEmoji, formatWrittenAt };","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport MainLayout from '../components/layout/MainLayout';\nimport AuthService from '../components/auth/auth-service';\nimport EachPostCard from '../components/share/EachPostCard';\nimport './Profile.css';\nimport axios from 'axios';\nimport { formatWrittenAt } from \"../method\";\n\nexport default class Profile extends Component {\n    constructor(props){\n        super(props);\n        this.state = { \n          user: JSON.parse(localStorage.getItem('user'))\n        };\n        this.service = new AuthService();\n        this.formatWrittenAt=formatWrittenAt.bind(this)\n      }\n    \n      componentDidMount() {\n        let user= this.state.user; \n        axios.get(`${process.env.REACT_APP_API}/postsBy/${user._id}`, {withCredentials:true})\n        .then( response =>{\n          const posts = response.data;\n          let usersPosts = posts.filter(function(post) {\n            return post.author._id === user._id;\n        });\n\n        let now = new Date();\n\n        let eachchangePost= usersPosts.map(post=>{\n            if (post.text[0].length > 100) {\n            post.short = []\n            post.short[0] = post.text[0].substring(0, 100) + \"...\"\n        }else if (post.text.length > 1) {\n            post.short = []\n            post.short[0] = post.text[0]\n            post.short[1] = \"...\"\n            }\n            post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            return post\n        })\n          this.setState({posts:eachchangePost});\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n        // this.setState({loggedInUser:user})\n      }\n\n      logoutUser = () =>{\n        this.service.logout()\n        .then(() => {\n          this.setState({ user: null });\n          this.props.history.push('/');\n        })\n      }\n\n    render() {\n          if(this.state.user){\n            return (\n              <MainLayout {...this.props}>\n                <div className=\"ProfilePage\">\n                    <div className=\"profilePic\" style={{  backgroundImage: `url(${this.state.user.profilePicUrl})`}}></div>\n                    <Link style={{ textDecoration:\"none\" }} to=\"/editProfile\"><div className=\"editIcon\"></div></Link>\n                    <h3>{this.state.user.username}</h3>\n                    <hr style={{width: \"100%\"}}/>\n                    <p className=\"aboutSect\">About: {this.state.user.about} </p>\n                    <Link to='/'>\n                    <button style={{margin: \"20px 0\"}} onClick={() => this.logoutUser()}>Logout</button>\n                    </Link>\n                </div>\n                {this.state.posts? <EachPostCard posts={this.state.posts}/> : <></>}\n              </MainLayout>\n            )\n          } else\n          {\n            return(\n              <MainLayout {...this.props}>\n                Loading...\n              </MainLayout>\n            )\n          }         \n    }\n}\n","import React, { Component } from 'react';\nimport MainLayout from '../components/layout/MainLayout';\nimport axios from 'axios';\nimport '../components/auth/Login.css'\n\nexport default class EditProfile extends Component {\n    constructor(props){\n        super(props);\n        this.formRef = React.createRef();\n        this.state = {about: '', file: null };\n      }\n    \n      handleFormSubmit = (event) => {\n        event.preventDefault();\n        const form = new FormData(this.formRef.current);\n        form.append('user',this.props.userInSession._id)\n        axios({\n            method:\"POST\",\n            baseURL: `${process.env.REACT_APP_API}/edit`,\n            withCredentials: true,\n            data:form\n          })\n        .then(response => {\n            this.setState({\n                about: \"\",\n                file: null\n    \n            });\n            localStorage.setItem('user', JSON.stringify(response.data));\n            this.props.history.push('/profile')\n        })\n        .catch( error => console.log(error) )\n      }\n      \n      handleChange = (event) => {  \n        const {name, value} = event.target;\n        this.setState({[name]: value});\n      }\n          \n      uploadPic=(event)=>{\n        this.setState({\n          file: (event.target.files[0])})\n      }\n\n    render() {\n        return (\n            <MainLayout {...this.props}>\n                <form className=\"editPage signupForm\" ref={this.formRef} onSubmit={this.handleFormSubmit}>\n                    <label>About </label>\n                    <input style={{height:'100px', width:'300px'}} type=\"text\" name=\"about\" value={this.state.about} onChange={ e => this.handleChange(e)}/>\n\n                    <label>Profile Picture </label>\n                    <input style={{border:\"solid 1px grey\", width:\"300px\"}} type=\"file\" name=\"picture\" onChange={this.uploadPic}/>\n\n                    <button className=\"submitBtn\">Save</button>\n                </form>\n            </MainLayout>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\nimport {geolocated} from 'react-geolocated';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: ''};\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username= this.state.username;\n    const password=this.state.password;\n    this.service.login(username,password, {longitude: this.props.coords.longitude, latitude: this.props.coords.latitude})\n    .then( response => {\n        this.setState({ username: \"\", password: \"\"});\n        // this.props.getUser();\n        this.props.history.push('/profile')\n    })\n    .catch( error => console.log(error) )\n  }\n    \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n    \n  render(){\n    return(\n      <div className=\"loginPage\">\n      {/* <MainLayout {...this.props}> */}\n      <nav className=\"Navbar\">\n            <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\"}}><h3>grandMeet</h3></Link>\n            <Link to='/login' style={{ textDecoration: 'none', color:\"white\"}}>Login</Link>\n      </nav>\n      <Link to=\"/\" style={{ textDecoration: 'none', color:\"white\" }}><i className=\"fas fa-times-circle fa-2x\"></i></Link>\n        <div className=\"loginForm\">\n        <h3>Log in</h3>\n        <form className=\"loginInput\" onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n\n          <label>Password:</label>\n          <input type=\"text\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <button className=\"submitBtn\" type=\"submit\">Log in</button>\n        </form>\n        <p>Don't have account? \n        <Link to={\"/signup\"} style={{ color: 'rgb(5, 5, 5)', textDecoration:\"underline\" }}> Register</Link>\n        </p>\n        </div>\n      {/* </MainLayout> */}\n      </div>\n    )\n  }\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false,\n  },\n  userDecisionTimeout: 5000,\n})(Login);","import React, { Component } from 'react';\nimport {geolocated} from 'react-geolocated';\nimport axios from 'axios';\nimport MainLayout from '../components/layout/MainLayout';\nimport {Link} from 'react-router-dom';\nimport './Nearby.css';\n\nclass Nearby extends Component {\n    _isMounted = false\n\n    constructor(props){\n        super(props);\n        this.state={\n            users:[],\n            sortedUsers:[]\n        }\n        this.calculateDistance=this.calculateDistance.bind(this);\n    }\n\n    calculateDistance (lat1, lon1, lat2, lon2){\n        lat1 =  Math.PI * lat1/180\n        lat2 = Math.PI * lat2/180\n        lon1 = Math.PI * lon1/180\n        lon2 = Math.PI * lon2/180\n        var R = 6371; // km\n        var x = (lon2 - lon1) * Math.cos((lat1 + lat2) / 2);\n        var y = (lat2 - lat1);\n        var d = Math.floor(Math.sqrt(x * x + y * y) * R);\n        return d;\n      }\n\n    componentDidMount() {\n        this._isMounted = true;\n        axios.get(`${process.env.REACT_APP_API}/nearby`, {withCredentials:true})\n        .then(responseFromApi => {\n            if (this._isMounted) {\n                let users= this.calculateUserDist(responseFromApi.data);\n                localStorage.setItem('nearbyUsers', JSON.stringify(users));\n                this.setState({sortedUsers:users});\n                this.props.history.push('/nearby');\n        }\n    })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n      }\n\n      calculateUserDist= (users)=> {\n          debugger\n        let userLong= this.props.userInSession.longitude;\n        let userLat= this.props.userInSession.latitude;\n        for (var i = 0; i < users.length; i++) {\n            let otherLong=users[i].longitude;\n            let otherLat= users[i].latitude;\n            users[i][\"distance\"] = this.calculateDistance(userLat,userLong,otherLat,otherLong);}\n        users.sort(function(a, b) { \n            return a.distance - b.distance;\n        });\n        return users\n    } \n\n    render() {\n        if(this.state.sortedUsers.length>0){        \n        const users = this.state.sortedUsers;\n        let eachUser=users.map(user=>{\n            return(\n                // <div className=\"eachUser\" key={user.username}>\n                    <Link style={{textDecoration:\"none\"}} to={{ pathname: `/nearby/${user._id}`}}>\n\n                        <div className=\"avaPic eachUser\" style={{backgroundImage:`url(${user.profilePicUrl})` }}>\n                            {/* <i className=\"fas fa-info-circle fa-2x\"></i> */}\n                        <div>\n                            <h4>{user.username}</h4>\n                            <p><i className=\"fas fa-map-marker-alt\"></i> {user.distance}km</p>\n                        </div>\n                        </div>\n                    </Link>\n                // </div>\n            )\n        })\n        return (\n            <MainLayout {...this.props}>\n            <div className=\"NearbyPage\">\n              {eachUser}  \n            </div>\n            </MainLayout>\n        )}\n        return(\n            <MainLayout {...this.props}>\n                <h1>Loading...</h1>\n            </MainLayout>\n        )\n    }\n}\n\nexport default geolocated({\n    positionOptions: {\n      enableHighAccuracy: false,\n    },\n    userDecisionTimeout: 5000,\n  })(Nearby);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport MainLayout from '../components/layout/MainLayout';\nimport EachPostCard from '../components/share/EachPostCard';\nimport {formatWrittenAt} from '../method';\n\nexport default class NearbyUser extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            nearbyUsers:JSON.parse(localStorage.getItem('nearbyUsers')),\n        }\n        this.formatWrittenAt= formatWrittenAt.bind(this);\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        let userId=params.id;\n        let users=this.state.nearbyUsers;\n        let nearbyUser = users.filter( function(user) {\n            return user._id===userId\n          })\n        let nearby= nearbyUser[0]\n        axios.get(`${process.env.REACT_APP_API}/postsBy/${nearby._id}`, {withCredentials:true})\n        .then( response =>{\n          const posts = response.data;\n          let usersPosts = posts.filter(function(post) {\n            return post.author._id === nearby._id;\n        });\n\n        let now = new Date();\n\n        let eachchangePost= usersPosts.map(post=>{\n            if (post.text[0].length > 100) {\n            post.short = []\n            post.short[0] = post.text[0].substring(0, 100) + \"...\"\n        }else if (post.text.length > 1) {\n            post.short = []\n            post.short[0] = post.text[0]\n            post.short[1] = \"...\"\n            }\n            post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            return post\n        })\n    \n          this.setState({posts:eachchangePost, user:nearby});\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n\n\n    render() {\n        if(this.state.user){\n                return (\n                    <div className=\"NearbyUser\">\n                        <MainLayout {...this.props}>\n                        <div className=\"avaPic\" style={{backgroundImage:`url(${this.state.user.profilePicUrl})` }}>\n                        </div>\n                        <h3>{this.state.user.username}</h3>\n                        <p><i className=\"fas fa-map-marker-alt\"></i> {this.state.user.distance}km</p>\n                        <hr/>\n                        <p>{this.state.user.about}</p>\n                        <Link to={{ pathname: `/chat/${this.state.user._id}`,\n                                    chatPartner: {user: this.state.user}}}>\n                            <button style={{margin: \"20px 0\"}} className=\"\" type=\"submit\">Message</button>\n                        </Link>\n\n                        {this.state.posts? <EachPostCard posts={this.state.posts}/> : <></>}\n\n                        </MainLayout>\n                    </div>\n        )\n            \n        } else {\n            return(\n                <>\n            </>\n            )\n            \n        }\n\n        \n        \n    }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport './AllRooms.css';\n\nexport default class AllRooms extends Component {\n    constructor (props){\n        super(props);\n        this.state={\n            user: JSON.parse(localStorage.getItem('user')),\n            otherUsers:{},\n            // currentRoom:this.props.currentRoom\n        }\n    }\n\n    componentDidMount(){\n            axios.get(`${process.env.REACT_APP_API}/nearby`,\n                         {withCredentials:true})\n            .then(response=>{\n                 this.setState({otherUsers:response.data})\n             })\n            .catch(err=>{\n            console.log(err)\n            })\n    }\n\n\n    render() {\n        const {rooms} =this.props\n        if(this.state.otherUsers){\n            let eachRoom= rooms.map((room, index)=>{\n                        let roomName= room[\"member_user_ids\"].filter(id => id !== this.state.user.username)[0]\n                        let partner= this.state.otherUsers.filter(user => user.username=== roomName)[0]\n                        const isRoomActive = room.id === this.props.currentRoom.id ? 'active' : '';   \n                        debugger\n                        return(\n                            <Link className=\"eachRoom\" to={`/inbox/${room.id}`} key={index}>\n                            <li className={isRoomActive} key={room.id}>\n                                <div className=\"inboxList\">\n                                <div className=\"eachMesDiv\" style={{backgroundImage: `url(${partner.profilePicUrl})`}}>\n                                </div>\n                                {roomName}\n                                </div>\n                            </li>\n                            </Link>\n                        )\n                    })\n                    return (\n                        <ul className=\"roomsTab\">\n                        {eachRoom}   \n                        </ul>\n                    )\n        } else{\n            return(\n                <div>\n                    No messages, search for nearby user to chat with!\n                </div>\n            )\n        }\n        \n    }\n}\n","import React, { Component } from 'react';\nimport \"./MessageList.css\";\n\nexport default class MessageList extends Component {\n   \n    render() {\n        let eachMess= this.props.messages.map((message, index)=>{\n            if(message.senderId === this.props.userInSession.username){\n                return(\n                    <div key={index} className=\"currentUserDiv\" >\n                        {/* <div className=\"eachMes\"> */}\n                        {/* <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.props.userInSession.profilePicUrl})`}}> */}\n                        {/* </div> */}\n                        <p className=\"currentUser\">{message.text}</p>\n                        {/* <div style={{ float:\"left\", clear: \"both\" }}  ref={(el) => { this.messagesEnd = el; }} ></div> */}\n                        {/* </div> */}\n                    </div>\n                    )\n            }\n            else{\n                return(\n                    <div key={index} >\n                        {/* <div className=\"eachMes\">                        */}\n                        {/* <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.props.location.chatPartner.user.profilePicUrl})`}}> */}\n                        {/* </div> */}\n                        <p className=\"chatPartner\">{message.text}</p>\n                        {/* </div> */}\n                    </div>\n                )\n            }\n            \n            \n        })\n        return (\n            <div className=\"MessageList\">\n                {eachMess}\n            </div>\n        )\n    }\n   \n}\n","import React, {Component} from 'react';\nimport { Smile } from 'react-feather';\nimport { Picker } from 'emoji-mart';\nimport {\n    addEmoji,\n    toggleEmojiPicker,\n  } from '../../method';\nimport 'emoji-mart/css/emoji-mart.css';\nimport \"./Input.css\";\n\n    class Input extends Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                message: \"\",\n                showEmojiPicker: false,\n            }\n            this.handleChange = this.handleChange.bind(this);\n            this.handleSubmit = this.handleSubmit.bind(this);\n            this.addEmoji = addEmoji.bind(this);\n            this.toggleEmojiPicker = toggleEmojiPicker.bind(this);\n        }\n        handleChange(e) {\n            this.setState({\n                message: e.target.value\n            })\n        }\n        handleSubmit(e) {\n            e.preventDefault();\n            this.props.onSubmit(this.state.message);\n            this.setState({\n                message: ''\n            })\n        }\n        render() {\n            const {showEmojiPicker} = this.state; \n            return (\n                <>\n                    {showEmojiPicker ? (\n                        <Picker set=\"emojione\" onSelect={this.addEmoji} />\n                    ) : null}\n                    <form onSubmit={this.handleSubmit} className=\"input-field\">\n                    <button type=\"button\" className=\"toggle-emoji\" onClick={this.toggleEmojiPicker}>\n                        <Smile />\n                    </button>\n                    <input className=\"message-input\" type=\"text\" placeholder=\"Type your message and hit ENTER to send...\" onChange={this.handleChange} value={this.state.message}/>\n                    {/* <input className=\"message-submit\" type=\"submit\" value=\"send\" /> */}\n                    </form>\n                </>\n            )\n        }\n    }\n    export default Input;","import React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\nimport '../../pages/Inbox.css';\n\nexport default class EachRoom extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            currentUser:null,\n            userInSession: JSON.parse(localStorage.getItem('user')),\n            currentRoom: {users:[]},\n            messages:[],\n            users:[]\n        }\n        this.addMessage = this.addMessage.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.match.params.id !== this.props.match.params.id) {\n            const {params}= this.props.match;\n            let roomId=params.id\n            const chatManager = new ChatManager({\n                instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n                userId: this.state.userInSession.username,\n                tokenProvider: new TokenProvider({\n                    url: `${process.env.REACT_APP_API}/authenticate`\n                })\n            })\n    \n            chatManager\n                    .connect()\n                    .then(currentUser => {\n                        debugger\n    \n                        this.setState({\n                            currentUser:currentUser,\n                            messages:[]\n                        })\n                        currentUser.subscribeToRoom({\n                            roomId: `${roomId}`,\n                            messageLimit: 50,\n                            hooks: {\n                                onMessage: message => {\n                                    this.setState({\n                                        messages: [...this.state.messages, message]\n                                    })\n                                },\n                            }})\n                            .then(currentRoom => {\n                                debugger\n                            console.log(currentRoom.userIds);\n                            this.setState({\n                                currentRoom,\n                                users: currentRoom.userIds\n                            })\n                            this.props.setRoom(currentRoom)\n\n                            })\n                            .catch(error => console.log(error))\n                        })\n        }\n    }\n\n    componentDidMount (){\n        debugger\n        const {params}= this.props.match;\n        let roomId=params.id\n        const chatManager = new ChatManager({\n            instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n            userId: this.state.userInSession.username,\n            tokenProvider: new TokenProvider({\n                url: `${process.env.REACT_APP_API}/authenticate`\n            })\n        })\n\n        chatManager\n                .connect()\n                .then(currentUser => {\n                    debugger\n\n                    this.setState({\n                        currentUser:currentUser,\n                        message:[]\n                    })\n                    currentUser.subscribeToRoom({\n                        roomId: `${roomId}`,\n                        messageLimit: 50,\n                        hooks: {\n                            onMessage: message => {\n                                this.setState({\n                                    messages: [...this.state.messages, message]\n                                })\n                            },\n                        }})\n                        .then(currentRoom => {\n                            debugger\n                        this.setState({\n                            currentRoom,\n                            users: currentRoom.userIds\n                        })\n                        this.props.setRoom(currentRoom)\n                        })\n                        .catch(error => console.log(error))\n    })}\n\n    addMessage(text) {\n        this.state.currentUser.sendMessage({\n            text,\n            roomId: this.state.currentRoom.id\n        })\n        .catch(error => console.error('error', error));\n    }\n\n    render() {\n        debugger\n        return (\n            <div className=\"eachRoom\"> \n                <MessageList messages={this.state.messages} userInSession={this.state.userInSession}/>           \n                <Input className=\"input-field-one\" onSubmit={this.addMessage} />            \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {Route} from 'react-router-dom';\nimport axios from 'axios';\nimport AllRooms from '../components/message/AllRooms';\nimport EachRoom from '../components/message/EachRoom';\nimport MainLayout from '../components/layout/MainLayout'\nimport './Inbox.css';\n\nexport default class Inbox extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            chatRooms:[],\n            currentUser:{}, \n            currentRoom:{}\n        };\n        this.setCurrentRoom= this.setCurrentRoom.bind(this);\n    }\n\n    componentDidMount (){\n        debugger\n        let user= this.props.getUser(); \n        axios.get(`${process.env.REACT_APP_API}/inbox`, \n                    {withCredentials:true})\n        .then(response => {\n            console.log(response.data);\n                let chatRooms= response.data;\n                this.setState({chatRooms:chatRooms, currentUser: user})\n    })\n    }\n\n    setCurrentRoom= (room)=>{\n        this.setState({\n            currentRoom: room\n        })\n    }\n\n    render() {\n        return (\n            <MainLayout {...this.props} className=\"Dashboard\">\n                <div className=\"inboxPage\">\n                <AllRooms rooms={this.state.chatRooms} currentUser={this.state.currentUser} currentRoom={this.state.currentRoom}/>\n                <Route path=\"/inbox/:id\" render={(props)=><EachRoom rooms={this.state.chatRooms} userInSession={this.state.currentUser} setRoom={this.setCurrentRoom} {...props}/>}/>\n                </div>\n            </MainLayout>\n        )\n    }\n}\n","import React from 'react';\n    import { Segment, Button, Form } from 'semantic-ui-react';\n    export default class Login extends React.Component {\n        state = {\n            username: ''\n        };\n        render() {\n            return (\n                <div class=\"loginToCommon\">\n                    <form className=\"loginToCommonForm\" onSubmit={this.handleFormSubmit.bind(this)}>\n                            <label>Welcome to the Common Room!</label>\n                            <input placeholder='Enter your username' \n                                   value={this.state.username} \n                                   onChange={this.handleUsernameChange.bind(this)} />\n                        <button type='submit'>Enter</button>\n                    </form>  \n                </div>\n            );\n        }\n        handleUsernameChange(e) {\n            this.setState({\n                username: e.target.value\n            });\n        }\n        handleFormSubmit() {\n            if (this.state.username) {\n                this.props.login(this.state.username);\n            }\n        }\n    }\n","import React from 'react';\nimport { List, Icon, Header } from 'semantic-ui-react';\n    \nexport default function Rooms({ joined, joinable, activeRoom, enterRoom, leaveRoom }) {\n    const joinedRooms = joined.map((room) => (\n        <List.Item key={room.id}>\n            <List.Content floated='right'>\n                <a onClick={() => leaveRoom(room.id)}>Leave</a>\n            </List.Content>\n            <Icon name={room.id === activeRoom ? 'right triangle' : ''} />\n            <List.Content>\n                <a onClick={() => enterRoom(room.id)}>{ room.name }</a>\n            </List.Content>\n        </List.Item>\n    ));\n    const joinableRooms = joinable.map((room) => (\n        <List.Item key={room.id}>\n            <Icon name=\"\" />\n            <List.Content>\n                <a onClick={() => enterRoom(room.id)}>{ room.name }</a>\n            </List.Content>\n        </List.Item>\n    ));\n    return (\n        <div>\n            <Header as=\"h4\">Active Rooms</Header>\n            <List divided relaxed>\n                { joinedRooms }\n            </List>\n            <Header as=\"h4\">Joinable Rooms</Header>\n            <List divided relaxed>\n                { joinableRooms }\n            </List>\n        </div>\n    );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { Grid, List } from 'semantic-ui-react';\nimport Pusher from 'pusher-js';\n\nvar pusher = new Pusher(process.env.REACT_APP_PUSHER_key, {\n            cluster: process.env.REACT_APP_PUSHER_cluster,\n            forceTLS: true\n        });\n\nconst PIECES = {\n    'WK': '♔',\n    'WQ': '♕',\n    'WR': '♖',\n    'WB': '♗',\n    'WN': '♘',\n    'WP': '♙',\n    'BK': '♚',\n    'BQ': '♛',\n    'BR': '♜',\n    'BB': '♝',\n    'BN': '♞',\n    'BP': '♟'\n}\n\nexport default class GameBoard extends React.Component {\n    state = {\n        board: [],\n        players: {}\n    };\n\n    render() {\n        const board = this.state.board\n            .map((row, rowIndex) => {\n                return row.map((piece, columnIndex) => {\n                    const pieceSymbol = PIECES[piece];\n                    if (pieceSymbol) {\n                        return <text key={rowIndex + '-' + columnIndex} x={columnIndex} y={rowIndex + 0.8} style={{font: '1px sans-serif'}}>{pieceSymbol}</text>\n                    }\n                    return undefined;\n                }).filter((value) => value);\n            });\n\n        let activeCell;\n        if (this.state.activeCell) {\n            activeCell = <rect x={this.state.activeCell.x} y={this.state.activeCell.y} width=\"1\" height=\"1\" fillOpacity=\"0.5\" fill=\"#F00\" />\n        }\n\n        const players = Object.keys(this.state.players).map((player) => {\n            const color = this.state.players[player];\n            return (\n                <List.Item>\n                    <List.Header>{ color }</List.Header>\n                    { player }\n                </List.Item>\n            );\n        });\n\n        return (\n            <Grid>\n                <Grid.Row columns={2}>\n                    <Grid.Column>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\" viewBox=\"-.05 -.05 8.1 8.1\">\n                            <rect x=\"-.5\" y=\"-.5\" width=\"9\" height=\"9\" style={{fill: '#F4A460'}} />\n                            <path fill=\"#FFEBCD\" d=\"M0,0H8v1H0zm0,2H8v1H0zm0\n                            2H8v1H0zm0,2H8v1H0zM1,0V8h1V0zm2,0V8h1V0zm2\n                            0V8h1V0zm2,0V8h1V0z\"/>\n\n                            { [].concat.apply([], board) }\n\n                            { activeCell }\n                            <rect x=\"0\" y=\"0\" width=\"8\" height=\"8\" fillOpacity=\"0.1\" onClick={(e) => this._handleBoardClick(e)} />\n                        </svg>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <List>\n                            { players }\n                        </List>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        );\n    }\n\n    componentDidMount() {\n        const room = this.props.room;\n\n        const channel = pusher.subscribe(`game-${room}`);\n        channel.bind('board-updated', () => {\n            this._refreshGame();\n        });\n        this._refreshGame();\n    }\n\n    componentWillUnmount() {\n        const room = this.props.room;\n\n        pusher.unsubscribe(`game-${room}`);\n    }\n\n    _handleBoardClick(e) {\n        const dim = e.target.getBoundingClientRect();\n        const x = e.clientX - dim.left;\n        const y = e.clientY - dim.top;\n\n        const cellX = Math.floor((x / 200) * 8);\n        const cellY = Math.floor((y / 200) * 8);\n\n        if (this.state.activeCell) {\n            if (this.state.activeCell.x === cellX && this.state.activeCell.y === cellY) {\n                this.setState({\n                    activeCell: null\n                });\n            } else {\n                axios.request({\n                    method: 'POST',\n                    url: `${process.env.REACT_APP_API}/games/` + this.props.room,\n                    data: {\n                        player: this.props.user.id,\n                        fromRow: this.state.activeCell.y,\n                        fromColumn: this.state.activeCell.x,\n                        toRow: cellY,\n                        toColumn: cellX\n                    }\n                });\n                this.setState({\n                    activeCell: null\n                });\n            }\n        } else {\n            this.setState({\n                activeCell: {\n                    x: cellX,\n                    y: cellY\n                }\n            });\n        }\n    }\n\n    _refreshGame() {\n        axios.request({\n            url: `${process.env.REACT_APP_API}/games/` + this.props.room\n        })\n        .then((response) => {\n            this.setState({\n                board: response.data.board,\n                players: response.data.players\n            });\n        });\n    }\n\n    getPlayers() {\n        return Object.keys(this.state.players);\n    }\n}\n// import React from 'react';\n// import axios from 'axios';\n// import { Grid, List } from 'semantic-ui-react';\n// import Pusher from 'pusher-js';\n//     var pusher = new Pusher( \"4c266cab29bd293c0092\", {\n//         cluster: \"eu\",\n//         forceTLS: true\n//     });\n// const PIECES = {\n//     'WK': '♔',\n//     'WQ': '♕',\n//     'WR': '♖',\n//     'WB': '♗',\n//     'WN': '♘',\n//     'WP': '♙',\n//     'BK': '♚',\n//     'BQ': '♛',\n//     'BR': '♜',\n//     'BB': '♝',\n//     'BN': '♞',\n//     'BP': '♟'\n// }\n// export default class GameBoard extends React.Component {\n//     state = {\n//         board: [],\n//         players: {}\n//     };\n\n//     componentDidMount() {\n//         const room = this.props.room;\n//         const channel = pusher.subscribe(`game-${room}`);\n//         channel.bind('board-updated', () => {\n//             this._refreshGame();\n//         });\n//         this._refreshGame();\n//     }\n\n//     componentWillUnmount() {\n//         const room = this.props.room;\n//         pusher.unsubscribe(`game-${room}`);\n//     }\n\n//     render() {\n//         const board = this.state.board\n//             .map((row, rowIndex) => {\n//                 return row.map((piece, columnIndex) => {\n//                     const pieceSymbol = PIECES[piece];\n//                     if (pieceSymbol) {\n//                         return <text key={rowIndex + '-' + columnIndex} x={columnIndex} y={rowIndex + 0.8} style={{font: '1px sans-serif'}}>{pieceSymbol}</text>\n//                     }\n//                     return undefined;\n//                 }).filter((value) => value);\n//             });\n//         let activeCell;\n//         if (this.state.activeCell) {\n//             activeCell = <rect x={this.state.activeCell.x} y={this.state.activeCell.y} width=\"1\" height=\"1\" fillOpacity=\"0.5\" fill=\"#F00\" />\n//         }\n//         const players = Object.keys(this.state.players).map((player) => {\n//             const color = this.state.players[player];\n//             return (\n//                 <List.Item>\n//                     <List.Header>{ color }</List.Header>\n//                     { player }\n//                 </List.Item>\n//             );\n//         });\n//         return (\n//             <Grid>\n//                 <Grid.Row columns={2}>\n//                     <Grid.Column>\n//                         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\" viewBox=\"-.05 -.05 8.1 8.1\">\n//                             <rect x=\"-.5\" y=\"-.5\" width=\"9\" height=\"9\" style={{fill: '#F4A460'}} />\n//                             <path fill=\"#FFEBCD\" d=\"M0,0H8v1H0zm0,2H8v1H0zm0\n//                             2H8v1H0zm0,2H8v1H0zM1,0V8h1V0zm2,0V8h1V0zm2\n//                             0V8h1V0zm2,0V8h1V0z\"/>\n//                             { [].concat.apply([], board) }\n//                             { activeCell }\n//                             <rect x=\"0\" y=\"0\" width=\"8\" height=\"8\" fillOpacity=\"0.1\" onClick={(e) => this._handleBoardClick(e)} />\n//                         </svg>\n//                     </Grid.Column>\n//                     <Grid.Column>\n//                         <List>\n//                             { players }\n//                         </List>\n//                     </Grid.Column>\n//                 </Grid.Row>\n//             </Grid>\n//         );\n//     }\n  \n//     _handleBoardClick(e) {\n//         const dim = e.target.getBoundingClientRect();\n//         const x = e.clientX - dim.left;\n//         const y = e.clientY - dim.top;\n//         const cellX = Math.floor((x / 200) * 8);\n//         const cellY = Math.floor((y / 200) * 8);\n//         if (this.state.activeCell) {\n//             if (this.state.activeCell.x === cellX && this.state.activeCell.y === cellY) {\n//                 this.setState({\n//                     activeCell: null\n//                 });\n//             } else {\n//                 axios.request({\n//                     method: 'POST',\n//                     url: `${process.env.REACT_APP_API}/games/` + this.props.room,\n//                     data: {\n//                         player: this.props.user.id,\n//                         fromRow: this.state.activeCell.y,\n//                         fromColumn: this.state.activeCell.x,\n//                         toRow: cellY,\n//                         toColumn: cellX\n//                     }\n//                 });\n//                 this.setState({\n//                     activeCell: null\n//                 });\n//             }\n//         } else {\n//             this.setState({\n//                 activeCell: {\n//                     x: cellX,\n//                     y: cellY\n//                 }\n//             });\n//         }\n//     }\n//     _refreshGame() {\n//         axios.request({\n//             url: `${process.env.REACT_APP_API}/games/` + this.props.room\n//         })\n//         .then((response) => {\n//             this.setState({\n//                 board: response.data.board,\n//                 players: response.data.players\n//             });\n//         });\n//     }\n// }\n","import React from 'react';\nimport { Grid, List, Comment, Form, Input } from 'semantic-ui-react';\nimport GameBoard from './GameBoard';\n\nexport default class Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: this.props.room.userIds,\n            messages: [],\n            newMessage: ''\n        };\n\n        props.user.subscribeToRoom({\n            roomId: props.room.id,\n            messageLimit: 50,\n            hooks: {\n                onUserJoined: (user) => {\n                    this.setState({\n                        users: props.room.users\n                    });\n                },\n                onUserLeft: (user) => {\n                    this.setState({\n                        users: props.room.users\n                    });\n                },\n                onMessage: (message) => {\n                    const messages = this.state.messages;\n                    let opponent;\n                    if (message.attachment && message.attachment.link && message.attachment.link.startsWith('urn:player:')) {\n                        opponent = message.attachment.link.substring(11);\n                        if (opponent !== props.user.id) {\n                            opponent = undefined;\n                        }\n                    }\n                    messages.push({\n                        id: message.id,\n                        user: message.senderId,\n                        message: this.state.newMessage,\n                        opponent: opponent\n                    });\n                    this.setState({\n                        messages: [...messages, message]\n                    });\n                }\n            }\n        })\n        .then(currentRoom=>{\n            this.setState({user: currentRoom.userIds})\n        })\n    }\n\n    render() {\n        const users = this.state.users\n            .filter((user) => user.id !== this.props.user.id)\n            .map((user) => (\n                <li style={{listStyle:\"none\"}} key={user.id}>\n                    <b style={{margin: \"0\", padding:\"0\"}}>\n                        { user.name }\n                    </b>\n                    <p style={{floated:'right'}}>\n                        <a onClick={() => this._challengePlayer(user)}>Challenge</a>\n                    </p>\n                </li>\n            ));\n\n        const messages = this.state.messages\n            .map((message) => {\n                let acceptGame;\n                if (message.opponent) {\n                    acceptGame = (\n                            <a onClick={() => this._acceptChallenge(message.user)}>Accept Challenge</a>\n                    );\n                }\n                return (\n                    // <div key={message.id}>\n                        <div className=\"columnFlex\">\n                            <h4 className=\"flexpart\">{ message.user}</h4>\n                            <p className=\"flexpart\">{ message.text }</p>\n                            { acceptGame }\n                        </div>\n                    // </div>\n                );\n            });\n\n        return (\n            <>\n                <div className=\"rowFlex\">\n                    <div className=\"allMessages\">\n                        { this.props.game && <GameBoard room={this.props.game} user={this.props.user} ref={(child) => { this._gameBoard = child; }}/> }\n                        <div className=\"ColumnFlex\" >\n                            { messages }\n                        </div>\n                        <div style={{ float:\"left\", clear: \"both\" }} ref={(el) => { this.messagesEnd = el; }} />\n                    </div>\n                    <div className=\"availableUsers\">\n                        <ul>\n                            <li style={{listStyle:\"none\"}}>\n                                <b>\n                                   You: { this.props.user.name }\n                                </b>\n                            </li>\n                            { users }\n                        </ul>\n                    </div>\n                </div>\n                <div>\n                    <Form onSubmit={this._handleSubmit.bind(this)}>\n                        <input className=\"typeText\" type=\"text\" placeholder='New Message...' value={this.state.newMessage} onChange={this._handleNewMessageChange.bind(this)} />\n                    </Form>\n                </div>\n            </>\n        );\n    }\n\n    componentDidMount() {\n        this._scrollToBottom();\n    }\n\n    componentDidUpdate() {\n        this._scrollToBottom();\n    }\n\n    _scrollToBottom() {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    _handleNewMessageChange(e) {\n        this.setState({\n            newMessage: e.target.value\n        });\n    }\n\n    _handleSubmit() {\n        const { newMessage } = this.state;\n        const { user, room } = this.props;\n        user.sendMessage({\n            text: newMessage,\n            roomId: room.id\n        });\n        this.setState({\n            newMessage: ''\n        });\n    }\n\n    _challengePlayer(player) {\n        const { user, room } = this.props;\n        user.sendMessage({\n            text: `I challenge ${player.name} to a game`,\n            roomId: room.id,\n            attachment: {\n                link: `urn:player:${player.id}`,\n                type: 'file',\n                fetchRequired: false\n            }\n        });\n    }\n\n    _acceptChallenge(player) {\n        const { user } = this.props;\n        user.createRoom({\n            name: `${user.id} vs ${player}`,\n            addUserIds: [player]\n        }).then((room) => {\n            this.props.startedGame(room.id, user.id, player);\n        });\n    }\n\n    getPlayersInRoom() {\n        const players = this._gameBoard ? this._gameBoard.getPlayers() : [];\n        const playersInRoom = this.state.users\n            .filter((user) => players.includes(user.id));\n        return playersInRoom;\n    }\n}","import React from 'react';\n    import { Segment, Grid } from 'semantic-ui-react';\n    import { TokenProvider, ChatManager } from '@pusher/chatkit-client';\n    import Rooms from './Rooms';\n    import Chat from './Chat';\n    import axios from 'axios';\n\n    export default class Games extends React.Component {\n        constructor(props) {\n            super(props);\n            debugger\n            this.state = {\n            joined: [],\n            joinable: []\n        };\n        }\n\n        componentDidMount(){\n            const chatManager = new ChatManager({\n                instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n                userId: this.props.username,\n                tokenProvider: new TokenProvider({\n                    url: `${process.env.REACT_APP_API}/commonRoom`\n                })\n            });\n\n            chatManager\n            .connect()\n            .then(currentUser => {\n                console.log(currentUser)\n                this.setState({\n                    currentUser: currentUser\n                });\n                currentUser.getJoinableRooms().then((rooms) => {\n                    let lobby = rooms.find(room => room.name === 'Lobby');\n                    if (lobby) {\n                        currentUser.joinRoom({ roomId: lobby.id });\n                    } else {\n                        lobby = currentUser.rooms.find(room => room.name === 'Lobby');\n                    }\n                    if (lobby) {\n                        this.setState({\n                            lobbyId: lobby.id,\n                            activeRoom: lobby.id\n                        });\n                    }\n                });\n                setInterval(this._pollRooms.bind(this), 5000);\n                this._pollRooms();\n            })\n            .catch((e) => {\n                console.log('Failed to connect to Chatkit');\n                console.log(e);\n            });\n        }\n\n        _pollRooms() {\n            const { currentUser } = this.state;\n            currentUser.getJoinableRooms()\n                .then((rooms) => {\n                    this.setState({\n                        joined: currentUser.rooms,\n                        joinable: rooms\n                    })\n                });\n        }\n        \n        _enterRoom(id) {\n            debugger\n            const { currentUser } = this.state;\n            currentUser.joinRoom({ roomId: id })\n                .then(() => {\n                    this.setState({\n                        activeRoom: id\n                    });\n                    this._pollRooms();\n                })\n                .catch(() => {\n                    console.log('Failed to enter room');\n                });\n        }\n\n        _leaveRoom(id) {\n            const { currentUser } = this.state;\n            currentUser.leaveRoom({ roomId: id })\n                .then(() => {\n                    this._pollRooms();\n                })\n                .catch(() => {\n                    console.log('Failed to leave room');\n                });\n        }\n\n        _startedGame(roomId, white, black) {\n            axios.request({\n                url: `${process.env.REACT_APP_API}/games`,\n                method: 'POST',\n                data: {\n                    room: roomId,\n                    whitePlayer: white,\n                    blackPlayer: black\n                }\n            })\n            .then((response) => {\n                this.setState({\n                    activeRoom: roomId\n                });\n                this._pollRooms();\n            });\n          }\n      \n        render() {\n            const { currentUser } = this.state;\n            let chat;\n            if (currentUser) {\n                const room = currentUser.rooms.find((room) => room.id === this.state.activeRoom);\n                if (room) {\n                    const game = this.state.activeRoom !== this.state.lobbyId && this.state.activeRoom;\n                    chat = <Chat user={currentUser} room={room} key={room.id} startedGame={this._startedGame.bind(this)} game={game} />\n                }\n            }\n            return (\n                    <div className=\"rowFlex gamePage\">\n                        <div className=\"differentRooms\">\n                            <Rooms joined={this.state.joined}\n                                   joinable={this.state.joinable}\n                                   activeRoom={this.state.activeRoom}\n                                   enterRoom={this._enterRoom.bind(this)}\n                                   leaveRoom={this._leaveRoom.bind(this)} />\n                        </div>\n                        <div className=\"chatArea\">\n                            { chat }\n                        </div>\n                    </div>\n            );\n        }\n    }","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport Login from '../components/commonRoom/Login';\nimport Games from '../components/commonRoom/Games';\nimport \"../components/commonRoom/GameBoard.css\";\n\nclass CommonRoom extends React.Component {\n  constructor(props){\n      super(props);\n      this.state = {};\n  }\n\n   enterGame(username) {\n    this.setState({\n      username: username\n    });\n  }\n\n  render() {\n    let contents;\n    if (this.state.username) {\n      contents = <Games username={this.state.username} />\n    } else {\n      contents = <Login login={this.enterGame.bind(this)} />\n    }\n    return (\n      <>\n        { contents }\n      </>\n    );\n  }\n}\n\nexport default CommonRoom;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './AllPosts.css';\nimport {formatWrittenAt} from '../../method'; \nimport EachPostCard from './EachPostCard';\n\nexport default class AllPosts extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {};\n        this.formatWrittenAt=formatWrittenAt.bind(this);\n    }\n\n    componentDidMount(){\n        axios({\n            method: \"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post`,\n            withCredentials: true\n        })\n        .then(response=>{\n            let changePost = response.data;\n            let now = new Date();\n            debugger\n            let eachchangePost= changePost.map(post=>{\n                if (post.text[0].length > 100) {\n                post.short = []\n                post.short[0] = post.text[0].substring(0, 100) + \"...\"\n            }else if (post.text.length > 1) {\n                post.short = []\n                post.short[0] = post.text[0]\n                post.short[1] = \"...\"\n                }\n                post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n                return post\n            })\n        \n            this.setState({posts:eachchangePost})\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    }\n\n    render() {\n        if(this.state.posts){\n            return <EachPostCard posts={this.state.posts}/>\n        } else {\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n","import React, { Component } from 'react'\nimport AllPosts from './AllPosts';\nimport {Link} from 'react-router-dom';\n\nexport default class ShareCorner extends Component {\n    render() {\n        return (\n            <div className=\"allPosts\">\n                <Link to=\"/share/shareYourThoughts\"><button> Share your thougths</button></Link>\n                <AllPosts {...this.props}/>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class PostInput extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            title:'',\n            text:'',\n            user: JSON.parse(localStorage.getItem('user'))\n        }\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_API}`,\n            withCredentials: true\n          });\n        this.service=service;\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const text = this.state.text;\n        const title = this.state.title;\n        this.service.post('/post', {text, title})\n        .then(response=>{\n            this.props.history.push('/share/thoughtsCorner')\n        })\n        .catch(err =>{\n            console.log(err)\n        })\n      }\n      \n    handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n    }\n    \n    render() {\n        return (\n            <div className=\"postInput\">\n            <form onSubmit={this.handleFormSubmit}>\n                <input name=\"title\" placeholder=\"title\" value={this.state.title} onChange={this.handleChange} type=\"text\"/>\n                <textarea className=\"form-control\" name=\"text\" cols=\"40\" rows=\"5\" placeholder=\"Share your thought...\" value={this.state.text} onChange={this.handleChange}></textarea>\n                <button style={{marginTop:\"10px\"}} type=\"submit\">Share</button>\n            </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport {\n    formatWrittenAt\n  } from '../../method'; \n\nexport default class EachPost extends Component {\n    constructor(props){\n        super(props);\n        this.state={};\n        this.formatWrittenAt= formatWrittenAt.bind(this)\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        debugger\n        axios({\n            method:\"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post/${params.id}`,\n            withCredentials:true\n        })\n        .then(response=>{\n            let now = new Date();\n            let post = response.data;\n                post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            this.setState({post:post})\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    render() {\n        if(this.state.post){\n            let eachLine= this.state.post.text.map(text=>{\n                return(\n                    <p className=\"eachLine\">{text}</p>\n                )\n            })\n            return (\n            <div className=\"postDetails\">\n                <h3 className=\"eachLine\">{this.state.post.title}</h3>\n                <div className=\"rowFlex\" style={{alignItems:\"center\"}}>\n                    <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.state.post.author.profilePicUrl})`, width:\"40px\", height:\"40px\"}}></div>\n                    <p className=\"eachLine\">Posted by <Link to={{ pathname: `/nearby/${this.state.post.author._id}`}}>{this.state.post.author.username}</Link>            \n                    </p>\n                </div>\n                <p className=\"eachLine\" style={{marginTop:\"10px\", color:\"darkgrey !important\"}}>{this.state.post.niceTime}</p>\n                <hr/>\n                {eachLine}\n            </div>\n        )\n        }\n        else{\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n","import React, { Component } from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport CommonRoom from \"./CommonRoom\";\nimport MainLayout from '../components/layout/MainLayout';\nimport ShareCorner from '../components/share/ShareCorner';\nimport \"./SharePage.css\"\nimport PostInput from '../components/share/PostInput';\nimport EachPost from '../components/share/EachPost';\n\nexport default class SharePage extends Component {\n    render() {\n        return (\n            <MainLayout {...this.props}>\n                <div className=\"columnFlex\" style={{width:\"100%\", height: \"88vh\", justifyContent:\"space-between\"}}>\n                <div className=\"sharingTab\">\n                <Link style={{textDecoration:\"none\", color: \"black\"}} to=\"/share/commonRoom\">\n                    <h4>Common Room</h4>\n                    {/* <p>Sed eleifend id ipsum a aliquam. Donec ultrices sollicitudin ullamcorper. \n                        Donec porta est in nibh elementum congue. \n                        Pellentesque tellus sapien, pharetra ut arcu a, consequat tincidunt leo. \n                        Integer diam metus, ultricies quis est at, eleifend cursus magna. \n                        Nam quis scelerisque eros. Duis a lectus vitae risus efficitur lacinia et a tortor. \n                        Etiam mollis dui lacus, eget tincidunt ligula condimentum vitae. Aliquam eu tellus tellus.</p> */}\n                </Link>\n\n                <Link style={{textDecoration:\"none\", color: \"black\"}} to=\"/share/thoughtsCorner\">\n                    <h4>Sharing Corner</h4>\n                    {/* <p>Sed eleifend id ipsum a aliquam. Donec ultrices sollicitudin ullamcorper. \n                        Donec porta est in nibh elementum congue. \n                        Pellentesque tellus sapien, pharetra ut arcu a, consequat tincidunt leo. \n                        Integer diam metus, ultricies quis est at, eleifend cursus magna. \n                        Nam quis scelerisque eros. Duis a lectus vitae risus efficitur lacinia et a tortor. \n                        Etiam mollis dui lacus, eget tincidunt ligula condimentum vitae. Aliquam eu tellus tellus.</p> */}\n                </Link>\n                </div>\n                \n                <Route path='/share/commonRoom' render = {(routeProps) => <CommonRoom {...routeProps}/>} />\n                <Route path='/share/shareYourThoughts' render = { (routeProps) => <PostInput {...routeProps}/>}/>\n                <Route exact path=\"/share/thoughtsCorner\" render = { (routeProps) => <ShareCorner {...routeProps} />}/>\n                <Route path=\"/share/thoughtsCorner/:id\" render = { (routeProps) => <EachPost {...routeProps}/>}/>\n\n                </div>\n            </MainLayout>\n        )\n    }\n}\n","// import React, { Component } from 'react';\n// import Talk from 'talkjs';\n\n// export default class ChatApp extends Component {\n//     constructor (props){\n//         super (props);\n//         this.inbox=undefined;\n//     }\n//     componentDidMount() {\n//         // Promise can be `then`ed multiple times\n//         Talk.ready\n//             .then(() => {\n//                 const me = new Talk.User({\n//                     id: `${this.props.userInSession._id}`,\n//                     name: `${this.props.userInSession.username}`,\n//                     photoUrl: `${this.props.userInSession.profilePicUrl}`,\n//                     welcomeMessage: \"Hey there! How are you? :-)\"\n//                 });\n\n//                 if (!window.talkSession) {\n//                     window.talkSession = new Talk.Session({\n//                         appId: \"txjMxHYM\",\n//                         me: me\n//                     });\n//                 }\n\n//                 const other = new Talk.User({\n//                     id: `${this.props.location.chatPartner.user._id}`,\n//                     name: `${this.props.location.chatPartner.user.username}`,\n//                     photoUrl: `${this.props.location.chatPartner.user.profilePicUrl}`,\n//                     welcomeMessage: \"Hey there! Love to chat :-)\"\n//                 });\n\n//                 // You control the ID of a conversation. oneOnOneId is a helper method that generates\n//                 // a unique conversation ID for a given pair of users. \n//                 const conversationId = Talk.oneOnOneId(me, other);\n\n//                 const conversation = window.talkSession.getOrCreateConversation(conversationId);\n//                 conversation.setParticipant(me);\n//                 conversation.setParticipant(other);\n\n//                 this.inbox = window.talkSession.createInbox({\n//                     selected: conversation\n//                 });\n//                 this.inbox.mount(this.container);\n\n//             })\n//             .catch(e => console.error(e));\n//     }\n\n//     componentWillUnmount() {\n//         if (this.inbox) {\n//             this.inbox.destroy();\n//         }\n//     }\n\n//     render() {\n//         return ( \n//             < span >\n//             <div style = {{ height: '100vh' }} ref = { c => this.container = c }> Loading... \n//             </div> \n//             </span > );\n//     }\n// }\n\n\n\n\nimport React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\nimport axios from 'axios';\n\nexport default class ChatApp extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            currentUser:null,\n            chatPartner: this.props.location.chatPartner.user,\n            currentRoom: {users:[]},\n            messages:[],\n            users:[]\n        }\n        this.addMessage = this.addMessage.bind(this);\n    }\n\n    componentDidMount (){\n        debugger\n        axios.get(`${process.env.REACT_APP_API}/newChat`, \n        {withCredentials:true})\n        .then(response => {\n            let chatRooms= response.data;\n            debugger\n            let existRoom=\"\";\n            for (var i=0; i<chatRooms.length; i++){\n                let usersInRoom = chatRooms[i][\"member_user_ids\"]\n                for (var j=0; j<usersInRoom.length; j++){\n                    debugger\n                    if (usersInRoom[j]===this.state.chatPartner.username){\n                        existRoom= chatRooms[i].id\n                        debugger\n                        break;\n                    }\n                }\n            }\n\n            const chatManager = new ChatManager({\n                instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n                userId: this.props.userInSession.username,\n                tokenProvider: new TokenProvider({\n                    url: `${process.env.REACT_APP_API}/authenticate`\n\n                    // url:`https://us1.pusherplatform.io/services/chatkit_token_provider/v1/95077b15-c43c-4d68-ae92-7a1f082f91c8/token`\n                })\n                })\n                debugger\n            if (existRoom){\n                debugger\n                chatManager\n                    .connect()\n                    .then(currentUser => {\n                        this.setState({\n                            currentUser:currentUser\n                        })\n                        currentUser.subscribeToRoom({\n                            roomId: `${existRoom}`,\n                            messageLimit: 100,\n                            hooks: {\n                                onMessage: message => {\n                                    this.setState({\n                                        messages: [...this.state.messages, message]\n                                    })\n                                },\n                            }})\n                            .then(currentRoom => {\n                            console.log(currentRoom.userIds);\n                            this.setState({\n                                currentRoom,\n                                users: currentRoom.userIds\n                            })\n                            })\n                            .catch(error => console.log(error))\n            })} else {\n                chatManager\n                .connect()\n                .then(currentUser => {\n                    this.setState({\n                        currentUser:currentUser\n                    })\n\n                    return currentUser.createRoom({\n                        name: `${this.props.location.chatPartner.user.username}`,\n                        private: true,\n                        addUserIds: [ `${this.state.chatPartner.username}`],\n                        customData: { foo: 42 },\n                    })\n                    .then(room => {\n                        return currentUser.subscribeToRoom({\n                            roomId: `${room.id}`,\n                            messageLimit: 100,\n                            hooks: {\n                                onMessage: message => {\n                                    this.setState({\n                                        messages: [...this.state.messages, message]\n                                    })\n                                },\n                            }})\n                            .then(currentRoom => {\n                            console.log(currentRoom.userIds);\n                            this.setState({\n                                currentRoom,\n                                users: currentRoom.userIds\n                            })\n                            })\n                            .catch(error => console.log(error))\n            })})\n         }\n                \n            // this.setState({chatRooms:chatRooms})\n        })\n    }\n    \n    addMessage(text) {\n        this.state.currentUser.sendMessage({\n            text,\n            roomId: this.state.currentRoom.id\n        })\n        .catch(error => console.error('error', error));\n    }\n\n    render() {\n        return (\n            <>\n                <MessageList messages={this.state.messages} {...this.props}/>\n                <Input className=\"input-field\" onSubmit={this.addMessage} />\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport ChatApp from '../components/message/ChatApp';\nimport MainLayout from '../components/layout/MainLayout';\n\nexport default class ChatPage extends Component {\n    render() {\n        return (\n            <MainLayout {...this.props}>\n                <ChatApp {...this.props}/>\n            </MainLayout>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom';\nimport Home from './pages/Home.jsx';\nimport Signup from './components/auth/Signup.jsx';\nimport Profile from './pages/Profile.jsx';\nimport EditProfile from './pages/EditProfile.jsx';\nimport AuthService from './components/auth/auth-service.jsx';\nimport Login from './components/auth/Login.jsx';\nimport Nearby from './pages/Nearby.jsx';\nimport NearbyUser from './pages/NearbyUser.jsx';\nimport Inbox from './pages/Inbox';\nimport SharePage from './pages/SharePage';\nimport CommonRoom from './pages/CommonRoom';\nimport './App.css';\nimport ChatPage from './pages/ChatPage';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = { loggedInUser: null };\n    this.service=new AuthService();\n  }\n\n  fetchUser(){\n    if( this.state.loggedInUser === null ){\n      this.service.loggedin()\n      .then(response =>{\n        this.setState({\n          loggedInUser:  response\n        }) \n      })\n      .catch( err =>{\n        this.setState({\n          loggedInUser:  false\n        }) \n      })\n    }\n  }\n\n  getTheUser= () => {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  render() {\n    this.fetchUser()\n      return (\n        <div className=\"App\">\n          <Route exact path='/profile' render = {(routeProps) => <Profile userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>}/>\n          <Route exact path = '/editProfile' render = {(routeProps) => <EditProfile userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/nearby' render = {(routeProps) => <Nearby userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>}/>\n          <Route exact path=\"/nearby/:id\" render = {(routeProps) => <NearbyUser userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/' render = {(routeProps) => <Home userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/signup' render = {(routeProps) => <Signup getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path='/login' render = {(routeProps) => <Login getUser={this.getTheUser} {...routeProps} />} />\n          <Route path='/inbox' render = {(routeProps) => <Inbox userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route exact path=\"/chat/:id\" render= {(routeProps)=> <ChatPage userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>} />\n          <Route path=\"/share\" render= {(routeProps)=> <SharePage userInSession={this.state.loggedInUser} getUser={this.getTheUser} {...routeProps}/>}/>\n\n        </div>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'; // <== !!!\n\nReactDOM.render((\n<Router> \n    <App />\n</Router> \n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}