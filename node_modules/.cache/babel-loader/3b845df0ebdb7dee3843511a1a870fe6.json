{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/AllPosts.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './AllPosts.css';\nimport { Route, Link } from 'react-router-dom';\nexport default class AllPosts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    axios({\n      method: \"GET\",\n      baseURL: \"\".concat(process.env.REACT_APP_API, \"/post\"),\n      withCredentials: true\n    }).then(response => {\n      let changePost = response.data;\n      debugger;\n      let eachchangePost = changePost.map(post => {\n        if (post.text[0].length > 100) {\n          post.short = [];\n          post.short[0] = post.text[0].substring(0, 100) + \"...\";\n        } else if (post.text.length > 1) {\n          post.short = [];\n          post.short[0] = post.text[0];\n          post.short[1] = \"...\";\n        }\n\n        return post;\n      });\n      console.log(eachchangePost); // changePost.niceTime = this.formatWrittenAt(changePost.writtenAt, now);\n\n      this.setState({\n        posts: eachchangePost\n      }); // console.log(response.data)\n      // this.setState({\n      //     posts: response.data\n      // })\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    if (this.state.posts) {\n      const posts = this.state.posts;\n      let eachPost = posts.map((post, index) => {\n        if (post.short) {\n          debugger;\n          let eachShort = post.short.map(short => {\n            return React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            }, short);\n          });\n          return React.createElement(\"div\", {\n            className: \"eachPost\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            style: {\n              color: \"black\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, post.title), eachShort, React.createElement(Link, {\n            to: {\n              pathname: \"/share/thoughtsCorner/\".concat(post._id)\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, \"Read more\"));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"eachPost\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            style: {\n              color: \"black\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, post.title), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, post.text[0], \"...\"), React.createElement(Link, {\n            to: {\n              pathname: \"/share/thoughtsCorner/\".concat(post._id)\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"Read more\"));\n        }\n      });\n      return React.createElement(\"div\", {\n        className: \"posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, eachPost);\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/AllPosts.jsx"],"names":["React","Component","axios","Route","Link","AllPosts","constructor","props","state","componentDidMount","method","baseURL","process","env","REACT_APP_API","withCredentials","then","response","changePost","data","eachchangePost","map","post","text","length","short","substring","console","log","setState","posts","catch","err","render","eachPost","index","eachShort","color","title","pathname","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './AllPosts.css';\nimport {Route,Link} from 'react-router-dom';\n\nexport default class AllPosts extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {};\n    }\n\n    componentDidMount(){\n        axios({\n            method: \"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post`,\n            withCredentials: true\n        })\n        .then(response=>{\n            let changePost = response.data;\n            debugger\n            let eachchangePost= changePost.map(post=>{\n                if (post.text[0].length > 100) {\n                post.short = []\n                post.short[0] = post.text[0].substring(0, 100) + \"...\"\n            }else if (post.text.length > 1) {\n                post.short = []\n                post.short[0] = post.text[0]\n                post.short[1] = \"...\"\n                }\n\n                return post\n            })\n            console.log(eachchangePost)\n        \n            // changePost.niceTime = this.formatWrittenAt(changePost.writtenAt, now);\n            this.setState({posts:eachchangePost})\n            // console.log(response.data)\n            // this.setState({\n            //     posts: response.data\n            // })\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    }\n\n    render() {\n        if(this.state.posts){\n            const {posts}= this.state;\n        let eachPost= posts.map((post,index)=>{\n            if(post.short){\n                debugger\n                let eachShort= post.short.map(short=>{\n                    return(\n                        <p>{short}</p>\n                    )\n                })\n                return(\n                    <div className=\"eachPost\"  key={index}>\n                        <h4 style={{color: \"black\"}}>{post.title}</h4>\n                        {eachShort}\n                        <Link to={{\n                        pathname:`/share/thoughtsCorner/${post._id}`\n                        }}>Read more\n                        </Link>\n                    </div>\n                    \n                    \n                )\n            } else{\n                return(\n                    <div className=\"eachPost\" key={index}>\n                        <h4 style={{color: \"black\"}}>{post.title}</h4>\n                        <p>{post.text[0]}...</p>\n                        <Link to={{\n                        pathname:`/share/thoughtsCorner/${post._id}`\n                        }}>Read more</Link>\n                    </div>\n            )\n            }\n            \n        })\n        return (\n            <div  className=\"posts\">\n                {eachPost}\n            </div>\n        )\n        } else {\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}