{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/Code/labs/project-management-client/src/components/projects/ProjectDetails.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport EditProject from './EditProject';\nimport AddTask from '../tasks/AddTask';\n\nclass ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getSingleProject = () => {\n      const params = this.props.match.params;\n      axios.get(\"http://localhost:5000/api/projects/\".concat(params.id)).then(responseFromApi => {\n        const theProject = responseFromApi.data;\n        this.setState(theProject);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.renderEditForm = () => {\n      if (!this.state.title) {\n        this.getSingleProject();\n      } else {\n        //                                                    {...props} => so we can have 'this.props.history' in Edit.js\n        //                                                                                          ^\n        //                                                                                          |\n        return React.createElement(EditProject, Object.assign({\n          theProject: this.state,\n          getTheProject: this.getSingleProject\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.deleteProject = () => {\n      const params = this.props.match.params;\n      axios.delete(\"http://localhost:5000/api/projects/\".concat(params.id)).then(() => {\n        this.props.history.push('/projects'); // !!!         \n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.renderAddTaskForm = () => {\n      if (!this.state.title) {\n        this.getSingleProject();\n      } else {\n        // pass the project and method getSingleProject() as a props down to AddTask component\n        return React.createElement(AddTask, {\n          theProject: this.state,\n          getTheProject: this.getSingleProject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.getSingleProject();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.description), this.state.tasks && this.state.tasks.length > 0 && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Tasks \"), this.state.tasks && this.state.tasks.map((task, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/projects/\".concat(this.state._id, \"/tasks/\").concat(task._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, task.title));\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.renderEditForm(), \" \"), React.createElement(\"button\", {\n      onClick: () => this.deleteProject(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Delete project\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.renderAddTaskForm(), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: '/projects',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Back to projects\"));\n  }\n\n}\n\nexport default ProjectDetails;","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project-management-client/src/components/projects/ProjectDetails.jsx"],"names":["React","Component","axios","Link","EditProject","AddTask","ProjectDetails","constructor","props","getSingleProject","params","match","get","id","then","responseFromApi","theProject","data","setState","catch","err","console","log","renderEditForm","state","title","deleteProject","delete","history","push","renderAddTaskForm","componentDidMount","render","description","tasks","length","map","task","index","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport EditProject from './EditProject';\nimport AddTask from '../tasks/AddTask'\n\nclass ProjectDetails extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount(){\n    this.getSingleProject();\n  }\n\n  getSingleProject = () => {\n    const { params } = this.props.match;\n    axios.get(`http://localhost:5000/api/projects/${params.id}`)\n    .then( responseFromApi =>{\n      const theProject = responseFromApi.data;\n      this.setState(theProject);\n    })\n    .catch((err)=>{\n        console.log(err)\n    })\n  }\n\n  renderEditForm = () => {\n    if(!this.state.title){\n      this.getSingleProject();\n    } else {\n    //                                                    {...props} => so we can have 'this.props.history' in Edit.js\n    //                                                                                          ^\n    //                                                                                          |\n      return <EditProject theProject={this.state} getTheProject={this.getSingleProject} {...this.props} />\n    }\n  }\n\n// DELETE PROJECT:\n  deleteProject = () => {\n    const { params } = this.props.match;\n    axios.delete(`http://localhost:5000/api/projects/${params.id}`)\n    .then( () =>{\n        this.props.history.push('/projects'); // !!!         \n    })\n    .catch((err)=>{\n        console.log(err)\n    })\n  }\n\n  renderAddTaskForm = () => {\n    if(!this.state.title){\n        this.getSingleProject();\n      } else {     \n                // pass the project and method getSingleProject() as a props down to AddTask component\n        return <AddTask theProject={this.state} getTheProject={this.getSingleProject} />\n      }\n  }\n\n\n  render(){\n    return(\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.description}</p>\n        {/* show the task heading only if there are tasks */}\n        { this.state.tasks && this.state.tasks.length > 0 && <h3>Tasks </h3> }\n        {/* map through the array of tasks and... */}\n        { this.state.tasks && this.state.tasks.map((task, index) => {\n            return(\n                <div key={ index }>\n                {/* ... make each task's title a link that goes to the task details page */}\n                    <Link to={`/projects/${this.state._id}/tasks/${task._id}`}> \n                        { task.title }\n                    </Link>\n                </div>\n            )\n            \n        }) }\n        <div>{this.renderEditForm()} </div>\n        <button onClick={() => this.deleteProject()}>Delete project</button> {/* <== !!! */}\n        <br/>\n        <div>{this.renderAddTaskForm()} </div>\n        <br/><br/><br/><br/><br/>\n        <Link to={'/projects'}>Back to projects</Link>\n      </div>\n    )\n  }\n}\n\nexport default ProjectDetails;"]},"metadata":{},"sourceType":"module"}