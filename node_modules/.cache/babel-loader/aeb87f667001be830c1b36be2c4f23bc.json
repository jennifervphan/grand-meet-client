{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { formatWrittenAt } from '../../method';\nexport default class EachPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: JSON.parse(localStorage.getItem('user'))\n    };\n    this.formatWrittenAt = formatWrittenAt.bind(this);\n  }\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    axios({\n      method: \"GET\",\n      baseURL: \"\".concat(process.env.REACT_APP_API, \"/post/\").concat(params.id),\n      withCredentials: true\n    }).then(response => {\n      let now = new Date();\n      let post = response.data;\n      post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n      this.setState({\n        post: post\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    if (this.state.post) {\n      let eachLine = this.state.post.text.map(text => {\n        return React.createElement(\"p\", {\n          className: \"eachLine\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, text);\n      });\n      return React.createElement(\"div\", {\n        className: \"postDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"eachLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.post.title), React.createElement(\"div\", {\n        className: \"eachMesDiv\",\n        style: {\n          backgroundImage: \"url(\".concat(this.state.post.author.profilePicUrl, \")\"),\n          width: \"40px\",\n          height: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), this.state.post.author._id === this.state.user._id ? React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        style: {\n          textAlign: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Posted by you\"), React.createElement(Link, {\n        style: {\n          textAlign: \"left\"\n        },\n        to: {\n          pathname: \"/share/thoughtsCorner/allThoughts/editThought/\".concat(this.state.post._id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Edit\")) : React.createElement(\"p\", {\n        className: \"eachLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Posted by \", React.createElement(Link, {\n        to: {\n          pathname: \"/nearby/\".concat(this.state.post.author._id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.post.author.username)), React.createElement(\"p\", {\n        className: \"eachLine\",\n        style: {\n          marginTop: \"10px\",\n          color: \"darkgrey !important\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.post.niceTime), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), eachLine);\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx"],"names":["React","Component","axios","Link","formatWrittenAt","EachPost","constructor","props","state","user","JSON","parse","localStorage","getItem","bind","componentDidMount","params","match","method","baseURL","process","env","REACT_APP_API","id","withCredentials","then","response","now","Date","post","data","niceTime","writtenAt","setState","catch","err","console","log","render","eachLine","text","map","title","backgroundImage","author","profilePicUrl","width","height","_id","textAlign","pathname","username","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport {\n    formatWrittenAt\n  } from '../../method'; \n\nexport default class EachPost extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            user:JSON.parse(localStorage.getItem('user'))\n        };\n        this.formatWrittenAt= formatWrittenAt.bind(this)\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        axios({\n            method:\"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post/${params.id}`,\n            withCredentials:true\n        })\n        .then(response=>{\n            let now = new Date();\n            let post = response.data;\n                post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            this.setState({post:post})\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    render() {\n        if(this.state.post){\n            let eachLine= this.state.post.text.map(text=>{\n                return(\n                    <p className=\"eachLine\">{text}</p>\n                )\n            })\n            return (\n            <div className=\"postDetails\">\n                <h3 className=\"eachLine\">{this.state.post.title}</h3>\n                {/* < className=\"ea\" style={{alignItems:\"center\"}}> */}\n                    <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.state.post.author.profilePicUrl})`, width:\"40px\", height:\"40px\"}}></div>\n                    {this.state.post.author._id === this.state.user._id?\n                        (<>\n                            <p style={{textAlign:\"left\"}}>Posted by you</p>\n                            <Link style={{textAlign:\"left\"}} to={{pathname: `/share/thoughtsCorner/allThoughts/editThought/${this.state.post._id}`}}>Edit</Link>\n                        </>\n                        ) \n                        :   \n                        (<p className=\"eachLine\">Posted by <Link to={{ pathname: `/nearby/${this.state.post.author._id}`}}>{this.state.post.author.username}</Link>            \n                        </p>)\n                    }\n                {/* </div> */}\n                <p className=\"eachLine\" style={{marginTop:\"10px\", color:\"darkgrey !important\"}}>{this.state.post.niceTime}</p>\n                <hr/>\n                {eachLine}\n            </div>\n        )\n        }\n        else{\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}