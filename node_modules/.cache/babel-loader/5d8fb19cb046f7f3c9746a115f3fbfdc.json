{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/components/message/ChatApp.jsx\";\nimport React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client'; // import MessageList from './MessageList';\n\nexport default class ChatApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      currentRoom: {\n        users: []\n      },\n      messages: [],\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    const chatManager = new ChatManager({\n      instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n      userId: this.props.userInSession._id,\n      tokenProvider: new TokenProvider({\n        url: \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/95077b15-c43c-4d68-ae92-7a1f082f91c8/token\"\n      })\n    });\n    chatManager.connect().then(currentUser => {\n      this.setState({\n        currentUser: currentUser\n      });\n      return currentUser.subscribeToRoom({\n        roomId: \"24ab072d-77b6-4003-92e5-dca664986179\",\n        messageLimit: 100,\n        hooks: {\n          onMessage: message => {\n            this.setState({\n              messages: [...this.state.messages, message]\n            });\n          }\n        }\n      });\n    }).then(currentRoom => {\n      this.setState({\n        currentRoom,\n        users: currentRoom.userIds\n      });\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/components/message/ChatApp.jsx"],"names":["React","Component","ChatManager","TokenProvider","ChatApp","constructor","props","state","currentUser","currentRoom","users","messages","componentDidMount","chatManager","instanceLocator","process","env","REACT_APP_chatkit_instance_locator","userId","userInSession","_id","tokenProvider","url","connect","then","setState","subscribeToRoom","roomId","messageLimit","hooks","onMessage","message","userIds","catch","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,wBAA3C,C,CACA;;AAEA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAC,IADL;AAEPC,MAAAA,WAAW,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAFN;AAGPC,MAAAA,QAAQ,EAAC,EAHF;AAIPD,MAAAA,KAAK,EAAC;AAJC,KAAX;AAMH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,WAAW,GAAG,IAAIX,WAAJ,CAAgB;AAChCY,MAAAA,eAAe,EAAEC,OAAO,CAACC,GAAR,CAAYC,kCADG;AAEhCC,MAAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,aAAX,CAAyBC,GAFD;AAGhCC,MAAAA,aAAa,EAAE,IAAIlB,aAAJ,CAAkB;AAC7BmB,QAAAA,GAAG;AAD0B,OAAlB;AAHiB,KAAhB,CAApB;AAQAT,IAAAA,WAAW,CACFU,OADT,GAESC,IAFT,CAEchB,WAAW,IAAI;AACjB,WAAKiB,QAAL,CAAc;AAAEjB,QAAAA,WAAW,EAAEA;AAAf,OAAd;AACA,aAAOA,WAAW,CAACkB,eAAZ,CAA4B;AAC/BC,QAAAA,MAAM,EAAE,sCADuB;AAE/BC,QAAAA,YAAY,EAAE,GAFiB;AAG/BC,QAAAA,KAAK,EAAE;AACHC,UAAAA,SAAS,EAAEC,OAAO,IAAI;AAClB,iBAAKN,QAAL,CAAc;AACVd,cAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,QAAf,EAAyBoB,OAAzB;AADA,aAAd;AAGH;AALE;AAHwB,OAA5B,CAAP;AAWH,KAfT,EAgBSP,IAhBT,CAgBcf,WAAW,IAAI;AACjB,WAAKgB,QAAL,CAAc;AACVhB,QAAAA,WADU;AAEVC,QAAAA,KAAK,EAAED,WAAW,CAACuB;AAFT,OAAd;AAIH,KArBT,EAsBSC,KAtBT,CAsBeC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAtBxB;AAwBH;;AACDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAnD0C","sourcesContent":["import React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\n// import MessageList from './MessageList';\n\nexport default class ChatApp extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            currentUser:null,\n            currentRoom: {users:[]},\n            messages:[],\n            users:[]\n        }\n    }\n\n    componentDidMount (){\n        const chatManager = new ChatManager({\n            instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n            userId: this.props.userInSession._id,\n            tokenProvider: new TokenProvider({\n                url:`https://us1.pusherplatform.io/services/chatkit_token_provider/v1/95077b15-c43c-4d68-ae92-7a1f082f91c8/token`\n            })\n        })\n\n        chatManager\n                .connect()\n                .then(currentUser => {\n                    this.setState({ currentUser: currentUser })\n                    return currentUser.subscribeToRoom({\n                        roomId: \"24ab072d-77b6-4003-92e5-dca664986179\",\n                        messageLimit: 100,\n                        hooks: {\n                            onMessage: message => {\n                                this.setState({\n                                    messages: [...this.state.messages, message],\n                                })\n                            },\n                        }\n                    })\n                })\n                .then(currentRoom => {\n                    this.setState({\n                        currentRoom,\n                        users: currentRoom.userIds\n                    })\n                })\n                .catch(error => console.log(error))\n        \n    }\n    render() {\n        return (\n            <div>\n                {/* <MessageList messages={this.state.messages}/> */}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}