{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nexport default class EachPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formatWrittenAt = (writtenAt, now) => {\n      if (writtenAt.getDate() === now.getDate() && writtenAt.getMonth() === now.getMonth() && writtenAt.getFullYear() === now.getFullYear()) {\n        return \"today \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" + (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" + (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n      } else if (writtenAt.getMonth() === now.getMonth() && writtenAt.getFullYear() === now.getFullYear() && writtenAt.getDate() === now.getDate() - 1) {\n        return \"yesterday \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" + (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" + (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n      } else if (writtenAt.getFullYear() === now.getFullYear()) {\n        return (writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate().toString()) + \".\" + (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth().toString()) + \". \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" + (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" + (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n      } else {\n        return (writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate()) + \".\" + (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth()) + \".\" + writtenAt.getFullYear().toString() + \" \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours()) + \":\" + (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes()) + \":\" + (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds());\n      }\n    };\n\n    this.state = {}; // this.formatWrittenAt= this.formatWrittenAt.bind(this)\n  }\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    debugger;\n    axios({\n      method: \"GET\",\n      baseURL: \"\".concat(process.env.REACT_APP_API, \"/post/\").concat(params.id),\n      withCredentials: true\n    }).then(response => {\n      let now = new Date();\n      let post = response.data;\n      post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n      this.setState({\n        post: post\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    if (this.state.post) {\n      let eachLine = this.state.post.text.map(text => {\n        return React.createElement(\"p\", {\n          className: \"eachLine\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, text);\n      });\n      return React.createElement(\"div\", {\n        className: \"postDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"eachLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.post.title), React.createElement(\"div\", {\n        className: \"rowFlex\",\n        style: {\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"eachMesDiv\",\n        style: {\n          backgroundImage: \"url(\".concat(this.state.post.author.profilePicUrl, \")\"),\n          width: \"40px\",\n          height: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"eachLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Posted by \", React.createElement(Link, {\n        to: {\n          pathname: \"/nearby/\".concat(this.state.post.author._id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.post.author.username))), React.createElement(\"p\", {\n        className: \"eachLine\",\n        style: {\n          marginTop: \"10px\",\n          color: \"darkgrey\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.post.niceTime), eachLine);\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx"],"names":["React","Component","axios","Link","EachPost","constructor","props","formatWrittenAt","writtenAt","now","getDate","getMonth","getFullYear","getHours","toString","getMinutes","getSeconds","state","componentDidMount","params","match","method","baseURL","process","env","REACT_APP_API","id","withCredentials","then","response","Date","post","data","niceTime","setState","catch","err","console","log","render","eachLine","text","map","title","alignItems","backgroundImage","author","profilePicUrl","width","height","pathname","_id","username","marginTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nexport default class EachPost extends Component {\n    constructor(props){\n        super(props);\n        this.state={};\n        // this.formatWrittenAt= this.formatWrittenAt.bind(this)\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        debugger\n        axios({\n            method:\"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post/${params.id}`,\n            withCredentials:true\n        })\n        .then(response=>{\n            let now = new Date();\n            let post = response.data;\n                post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            this.setState({post:post})\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    formatWrittenAt = (writtenAt, now)=> {\n        if (writtenAt.getDate() === now.getDate() &&\n            writtenAt.getMonth() === now.getMonth() &&\n            writtenAt.getFullYear() === now.getFullYear()) {\n            return \"today \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n                (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n                (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n        } else if (writtenAt.getMonth() === now.getMonth() &&\n            writtenAt.getFullYear() === now.getFullYear() &&\n            writtenAt.getDate() === now.getDate() - 1) {\n            return \"yesterday \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n                (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n                (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n        } else if (writtenAt.getFullYear() === now.getFullYear()) {\n            return (writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate().toString()) + \".\" +\n                (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth().toString()) +\n                \". \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n                (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n                (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n        } else {\n            return (writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate()) + \".\" +\n                (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth()) + \".\" +\n                writtenAt.getFullYear().toString() +\n                \" \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours()) + \":\" +\n                (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes()) + \":\" +\n                (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds());\n        }\n    }\n\n    render() {\n        if(this.state.post){\n            let eachLine= this.state.post.text.map(text=>{\n                return(\n                    <p className=\"eachLine\">{text}</p>\n                )\n            })\n            return (\n            <div className=\"postDetails\">\n                <h3 className=\"eachLine\">{this.state.post.title}</h3>\n                <div className=\"rowFlex\" style={{alignItems:\"center\"}}>\n                    <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.state.post.author.profilePicUrl})`, width:\"40px\", height:\"40px\"}}></div>\n                    <p className=\"eachLine\">Posted by <Link to={{ pathname: `/nearby/${this.state.post.author._id}`}}>{this.state.post.author.username}</Link>            \n                    </p>\n                </div>\n                <p className=\"eachLine\" style={{marginTop:\"10px\", color:\"darkgrey\"}}>{this.state.post.niceTime}</p>\n                {eachLine}\n            </div>\n        )\n        }\n        else{\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}