{"ast":null,"code":"import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.signup = (username, password, form) => {\n      debugger;\n      return axios({\n        method: \"POST\",\n        baseURL: 'http://localhost:5000/api/signup',\n        withCredentials: true,\n        data: {\n          username,\n          password,\n          form\n        }\n      }) // return this.service.post('/signup', {username, password, data})\n      .then(response => response.data);\n    };\n\n    this.loggedin = () => {\n      return this.service.get('/loggedin').then(response => response.data);\n    };\n\n    this.login = (username, password) => {\n      return this.service.post('/login', {\n        username,\n        password\n      }).then(response => response.data);\n    };\n\n    this.logout = () => {\n      return this.service.post('/logout', {}).then(response => response.data);\n    };\n\n    let service = axios.create({\n      baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n}\n\nexport default AuthService;","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/components/auth/auth-service.jsx"],"names":["axios","AuthService","constructor","signup","username","password","form","method","baseURL","withCredentials","data","then","response","loggedin","service","get","login","post","logout","create"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,WAAW,GAAG;AAAA,SAQdC,MARc,GAQL,CAACC,QAAD,EAAUC,QAAV,EAAmBC,IAAnB,KAA4B;AACnC;AACA,aAAON,KAAK,CAAC;AACXO,QAAAA,MAAM,EAAC,MADI;AAEXC,QAAAA,OAAO,EAAE,kCAFE;AAGXC,QAAAA,eAAe,EAAE,IAHN;AAIXC,QAAAA,IAAI,EAAC;AAACN,UAAAA,QAAD;AAAUC,UAAAA,QAAV;AAAmBC,UAAAA;AAAnB;AAJM,OAAD,CAAL,CAMP;AANO,OAONK,IAPM,CAODC,QAAQ,IAAIA,QAAQ,CAACF,IAPpB,CAAP;AAQD,KAlBa;;AAAA,SAoBdG,QApBc,GAoBH,MAAM;AACf,aAAO,KAAKC,OAAL,CAAaC,GAAb,CAAiB,WAAjB,EACNJ,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACF,IADpB,CAAP;AAED,KAvBa;;AAAA,SAyBdM,KAzBc,GAyBN,CAACZ,QAAD,EAAWC,QAAX,KAAwB;AAC9B,aAAO,KAAKS,OAAL,CAAaG,IAAb,CAAkB,QAAlB,EAA4B;AAACb,QAAAA,QAAD;AAAWC,QAAAA;AAAX,OAA5B,EACNM,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACF,IADpB,CAAP;AAED,KA5Ba;;AAAA,SA8BdQ,MA9Bc,GA8BL,MAAM;AACb,aAAO,KAAKJ,OAAL,CAAaG,IAAb,CAAkB,SAAlB,EAA6B,EAA7B,EACNN,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACF,IADpB,CAAP;AAED,KAjCa;;AACZ,QAAII,OAAO,GAAGd,KAAK,CAACmB,MAAN,CAAa;AACzBX,MAAAA,OAAO,EAAE,2BADgB;AAEzBC,MAAAA,eAAe,EAAE;AAFQ,KAAb,CAAd;AAIA,SAAKK,OAAL,GAAeA,OAAf;AACD;;AAPe;;AAqClB,eAAeb,WAAf","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (username,password,form) => {\n    debugger\n    return axios({\n      method:\"POST\",\n      baseURL: 'http://localhost:5000/api/signup',\n      withCredentials: true,\n      data:{username,password,form}\n    })\n    // return this.service.post('/signup', {username, password, data})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n  \n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n  \n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;"]},"metadata":{},"sourceType":"module"}