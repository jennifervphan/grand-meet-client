{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/components/message/ChatApp.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Talk from 'talkjs';\nexport default class ChatApp extends Component {\n  constructor(props) {\n    super(props);\n    this.inbox = undefined;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n} // import React, { Component } from 'react';\n// import { ChatManager, TokenProvider } from '@pusher/chatkit-client';\n// import MessageList from './MessageList';\n// import Input from './Input';\n// export default class ChatApp extends Component {\n//     constructor(props){\n//         super(props)\n//         this.state={\n//             currentUser:null,\n//             chatPartner: this.props.location.chatPartner.user,\n//             currentRoom: {users:[]},\n//             messages:[],\n//             users:[]\n//         }\n//         this.addMessage = this.addMessage.bind(this);\n//     }\n//     componentDidMount (){\n//         const chatManager = new ChatManager({\n//             instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n//             userId: this.props.userInSession.username,\n//             tokenProvider: new TokenProvider({\n//                 url:`https://us1.pusherplatform.io/services/chatkit_token_provider/v1/95077b15-c43c-4d68-ae92-7a1f082f91c8/token`\n//             })\n//         })\n//         chatManager\n//                 .connect()\n//                 .then(currentUser => {\n//                     this.setState({\n//                         currentUser:currentUser\n//                     })\n//                     return currentUser.createRoom({\n//                         id: `${this.props.userInSession._id}_${this.props.location.chatPartner.user._id}`,\n//                         name: `${this.props.userInSession.username}_${this.props.location.chatPartner.user.username}`,\n//                         private: true,\n//                         // addUserIds: [`${this.props.userInSession.username}`, `${this.state.chatPartner.username}`],\n//                         customData: { foo: 42 },\n//                       })\n//                       .then(room => {\n//                         return currentUser.subscribeToRoom({\n//                             roomId: `${room.id}`,\n//                             messageLimit: 100,\n//                             hooks: {\n//                                 onMessage: message => {\n//                                     this.setState({\n//                                         messages: [...this.state.messages, message]\n//                                     })\n//                                 },\n//                             }})\n//                             .then(currentRoom => {\n//                             console.log(currentRoom.userIds);\n//                             this.setState({\n//                                 currentRoom,\n//                                 users: currentRoom.userIds\n//                             })\n//                             })\n//                             .catch(error => console.log(error))\n//                     })\n//                 })\n//     }\n//     addMessage(text) {\n//         this.state.currentUser.sendMessage({\n//             text,\n//             roomId: this.state.currentRoom.id\n//         })\n//         .catch(error => console.error('error', error));\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <MessageList messages={this.state.messages} {...this.props}/>\n//                 <Input className=\"input-field\" onSubmit={this.addMessage} />\n//             </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/components/message/ChatApp.jsx"],"names":["React","Component","ReactDOM","Talk","ChatApp","constructor","props","inbox","undefined","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC3CI,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACf,UAAOA,KAAP;AACA,SAAKC,KAAL,GAAWC,SAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAZ0C,C,CAkB/C;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Talk from 'talkjs';\n\nexport default class ChatApp extends Component {\n    constructor (props){\n        super (props);\n        this.inbox=undefined;\n    }\n    \n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\n\n\n\n// import React, { Component } from 'react';\n// import { ChatManager, TokenProvider } from '@pusher/chatkit-client';\n// import MessageList from './MessageList';\n// import Input from './Input';\n\n// export default class ChatApp extends Component {\n//     constructor(props){\n//         super(props)\n//         this.state={\n//             currentUser:null,\n//             chatPartner: this.props.location.chatPartner.user,\n//             currentRoom: {users:[]},\n//             messages:[],\n//             users:[]\n//         }\n//         this.addMessage = this.addMessage.bind(this);\n//     }\n\n//     componentDidMount (){\n//         const chatManager = new ChatManager({\n//             instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n//             userId: this.props.userInSession.username,\n//             tokenProvider: new TokenProvider({\n//                 url:`https://us1.pusherplatform.io/services/chatkit_token_provider/v1/95077b15-c43c-4d68-ae92-7a1f082f91c8/token`\n//             })\n//         })\n\n//         chatManager\n//                 .connect()\n//                 .then(currentUser => {\n//                     this.setState({\n//                         currentUser:currentUser\n//                     })\n\n//                     return currentUser.createRoom({\n//                         id: `${this.props.userInSession._id}_${this.props.location.chatPartner.user._id}`,\n//                         name: `${this.props.userInSession.username}_${this.props.location.chatPartner.user.username}`,\n//                         private: true,\n//                         // addUserIds: [`${this.props.userInSession.username}`, `${this.state.chatPartner.username}`],\n//                         customData: { foo: 42 },\n//                       })\n//                       .then(room => {\n//                         return currentUser.subscribeToRoom({\n//                             roomId: `${room.id}`,\n//                             messageLimit: 100,\n//                             hooks: {\n//                                 onMessage: message => {\n//                                     this.setState({\n//                                         messages: [...this.state.messages, message]\n//                                     })\n//                                 },\n//                             }})\n//                             .then(currentRoom => {\n//                             console.log(currentRoom.userIds);\n//                             this.setState({\n//                                 currentRoom,\n//                                 users: currentRoom.userIds\n//                             })\n//                             })\n//                             .catch(error => console.log(error))\n//                     })\n//                 })\n                \n//     }\n    \n//     addMessage(text) {\n//         this.state.currentUser.sendMessage({\n//             text,\n//             roomId: this.state.currentRoom.id\n//         })\n//         .catch(error => console.error('error', error));\n//     }\n\n//     render() {\n//         return (\n//             <div>\n//                 <MessageList messages={this.state.messages} {...this.props}/>\n//                 <Input className=\"input-field\" onSubmit={this.addMessage} />\n//             </div>\n//         )\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}