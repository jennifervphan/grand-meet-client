{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/pages/Nearby.jsx\";\nimport React, { Component } from 'react';\nimport { geolocated } from 'react-geolocated';\nimport axios from 'axios';\n\nclass Nearby extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      users: [],\n      sortedUsers: []\n    };\n    this.calculateDistance = this.calculateDistance.bind(this);\n  }\n\n  calculateDistance(lat1, lon1, lat2, lon2) {\n    var radlat1 = Math.PI * lat1 / 180;\n    var radlat2 = Math.PI * lat2 / 180;\n    var radlon1 = Math.PI * lon1 / 180;\n    var radlon2 = Math.PI * lon2 / 180;\n    var theta = lon1 - lon2;\n    var radtheta = Math.PI * theta / 180;\n    var dist = Math.sin(radlon1) * Math.sin(radlon2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n    dist = Math.acos(dist);\n    dist = dist * 180 / Math.PI;\n    dist = dist * 60 * 1.1515 * 1.609344;\n    return dist;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    axios.get(\"http://localhost:5000/api/nearby\", {\n      withCredentials: true\n    }).then(responseFromApi => {\n      if (this._isMounted) {\n        let userLong = this.props.userInSession.longitude;\n        let userLat = this.props.userInSession.latitude;\n        let users = responseFromApi.data;\n        users.forEach(function (element) {\n          element.distance = this.calculateDistance(userLat, userLong, element.latitude, element.longitute);\n        });\n        users.sort(function (a, b) {\n          return a.distance - b.distance;\n        });\n        console.log(users);\n        this.setState({\n          sortedUsers: users\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  } //   calculateUserDist= ()=> {\n  //       debugger\n  //     let userLong= this.props.userInSession.longitude;\n  //     let userLat= this.props.userInSession.latitude;\n  //     let users=this.state.users;\n  //     for (var i = 0; i < users.length; i++) {\n  //         users[i][\"distance\"] = this.calculateDistance(userLat,userLong,users[i][\"latitude\"],users[i][\"longitute\"]);}\n  //     users.sort(function(a, b) { \n  //         return a.distance - b.distance;\n  //     });\n  //     console.log(users);\n  //     this.setState({sortedUsers:users})\n  // } \n\n\n  render() {\n    if (this.state.sortedUsers.length > 0) {\n      const users = this.state.sortedUsers;\n      let eachUser = users.map(user => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, user.username));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, eachUser);\n    }\n\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"No nearby Users\");\n  }\n\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false\n  },\n  userDecisionTimeout: 5000\n})(Nearby);","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/pages/Nearby.jsx"],"names":["React","Component","geolocated","axios","Nearby","constructor","props","_isMounted","state","users","sortedUsers","calculateDistance","bind","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","radlon1","radlon2","theta","radtheta","dist","sin","cos","acos","componentDidMount","get","withCredentials","then","responseFromApi","userLong","userInSession","longitude","userLat","latitude","data","forEach","element","distance","longitute","sort","a","b","console","log","setState","componentWillUnmount","render","length","eachUser","map","user","username","positionOptions","enableHighAccuracy","userDecisionTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {geolocated} from 'react-geolocated';\nimport axios from 'axios';\n\nclass Nearby extends Component {\n    _isMounted = false\n\n    constructor(props){\n        super(props);\n        this.state={\n            users:[],\n            sortedUsers:[]\n        }\n        this.calculateDistance=this.calculateDistance.bind(this);\n    }\n\n    calculateDistance (lat1, lon1, lat2, lon2){\n        var radlat1 = Math.PI * lat1/180\n        var radlat2 = Math.PI * lat2/180\n        var radlon1 = Math.PI * lon1/180\n        var radlon2 = Math.PI * lon2/180\n        var theta = lon1-lon2\n        var radtheta = Math.PI * theta/180\n        var dist = Math.sin(radlon1) * Math.sin(radlon2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n        dist = Math.acos(dist)\n        dist = dist * 180/Math.PI\n        dist = dist * 60 * 1.1515* 1.609344\n        return dist\n      }\n\n    componentDidMount() {\n        this._isMounted = true;\n        axios.get(`http://localhost:5000/api/nearby`, {withCredentials:true})\n        .then(responseFromApi => {\n            if (this._isMounted) {\n                let userLong= this.props.userInSession.longitude;\n                let userLat= this.props.userInSession.latitude;\n                let users=responseFromApi.data;\n                users.forEach(function (element) {\n                    element.distance = this.calculateDistance(userLat,userLong,element.latitude,element.longitute);\n                  });\n\n                users.sort(function(a, b) { \n                    return a.distance - b.distance;\n                });\n                    console.log(users);\n                    this.setState({sortedUsers:users})\n        }\n    })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n      }\n\n    //   calculateUserDist= ()=> {\n    //       debugger\n    //     let userLong= this.props.userInSession.longitude;\n    //     let userLat= this.props.userInSession.latitude;\n    //     let users=this.state.users;\n    //     for (var i = 0; i < users.length; i++) {\n    //         users[i][\"distance\"] = this.calculateDistance(userLat,userLong,users[i][\"latitude\"],users[i][\"longitute\"]);}\n    //     users.sort(function(a, b) { \n    //         return a.distance - b.distance;\n    //     });\n    //     console.log(users);\n    //     this.setState({sortedUsers:users})\n    // } \n\n    render() {\n        if(this.state.sortedUsers.length>0){        \n        const users = this.state.sortedUsers;\n        let eachUser=users.map(user=>{\n            return(\n                <div>\n                    <h4>{user.username}</h4>\n                </div>\n            )\n        })\n        return (\n            <div>\n              {eachUser}  \n            </div>\n        )}\n        return(\n            <h1>No nearby Users</h1>\n        )\n    }\n}\n\nexport default geolocated({\n    positionOptions: {\n      enableHighAccuracy: false,\n    },\n    userDecisionTimeout: 5000,\n  })(Nearby);"]},"metadata":{},"sourceType":"module"}