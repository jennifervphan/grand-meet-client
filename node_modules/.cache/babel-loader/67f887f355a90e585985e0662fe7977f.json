{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/pages/Nearby.jsx\";\nimport React, { Component } from 'react';\nimport { geolocated } from 'react-geolocated';\nimport axios from 'axios';\n\nclass Nearby extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.calculateUserDist = users => {\n      debugger;\n      let userLong = this.props.userInSession.longitude;\n      let userLat = this.props.userInSession.latitude;\n\n      for (var i = 0; i < users.length; i++) {\n        users[i][\"distance\"] = this.calculateDistance(userLat, userLong, users[i][\"latitude\"], users[i][\"longitute\"]);\n      }\n\n      users.sort(function (a, b) {\n        return a.distance - b.distance;\n      });\n      return users;\n    };\n\n    this.state = {\n      users: [],\n      sortedUsers: []\n    };\n    this.calculateDistance = this.calculateDistance.bind(this);\n  }\n\n  calculateDistance(lat1, lon1, lat2, lon2) {\n    var radlat1 = Math.PI * lat1 / 180;\n    var radlat2 = Math.PI * lat2 / 180;\n    var radlon1 = Math.PI * lon1 / 180;\n    var radlon2 = Math.PI * lon2 / 180;\n    var theta = lon1 - lon2;\n    var radtheta = Math.PI * theta / 180;\n    var dist = Math.sin(radlon1) * Math.sin(radlon2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n    dist = Math.acos(dist);\n    dist = dist * 180 / Math.PI;\n    debugger;\n    dist = dist * 60 * 1.1515 * 1.609344; //for distance in kilometer\n\n    return dist;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    axios.get(\"http://localhost:5000/api/nearby\", {\n      withCredentials: true\n    }).then(responseFromApi => {\n      if (this._isMounted) {\n        let users = this.calculateUserDist(responseFromApi.data); // let userLong= this.props.userInSession.longitude;\n        // let userLat= this.props.userInSession.latitude;\n        // let users=responseFromApi.data;\n        // users.forEach(function (element) {\n        //     element.distance = this.calculateDistance(userLat,userLong,element.latitude,element.longitute);\n        //   });\n        // users.sort(function(a, b) { \n        //     return a.distance - b.distance;\n        // });\n\n        console.log(users);\n        this.setState({\n          sortedUsers: users\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    if (this.state.sortedUsers.length > 0) {\n      const users = this.state.sortedUsers;\n      let eachUser = users.map(user => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, user.username));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, eachUser);\n    }\n\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"No nearby Users\");\n  }\n\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false\n  },\n  userDecisionTimeout: 5000\n})(Nearby);","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/pages/Nearby.jsx"],"names":["React","Component","geolocated","axios","Nearby","constructor","props","_isMounted","calculateUserDist","users","userLong","userInSession","longitude","userLat","latitude","i","length","calculateDistance","sort","a","b","distance","state","sortedUsers","bind","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","radlon1","radlon2","theta","radtheta","dist","sin","cos","acos","componentDidMount","get","withCredentials","then","responseFromApi","data","console","log","setState","componentWillUnmount","render","eachUser","map","user","username","positionOptions","enableHighAccuracy","userDecisionTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {geolocated} from 'react-geolocated';\nimport axios from 'axios';\n\nclass Nearby extends Component {\n    _isMounted = false\n\n    constructor(props){\n        super(props);\n        this.state={\n            users:[],\n            sortedUsers:[]\n        }\n        this.calculateDistance=this.calculateDistance.bind(this);\n    }\n\n    calculateDistance (lat1, lon1, lat2, lon2){\n        var radlat1 = Math.PI * lat1/180\n        var radlat2 = Math.PI * lat2/180\n        var radlon1 = Math.PI * lon1/180\n        var radlon2 = Math.PI * lon2/180\n        var theta = lon1-lon2\n        var radtheta = Math.PI * theta/180\n        var dist = Math.sin(radlon1) * Math.sin(radlon2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n        dist = Math.acos(dist)\n        dist = dist * 180/Math.PI\n        debugger\n        dist = dist * 60 * 1.1515* 1.609344 //for distance in kilometer\n        return dist\n      }\n\n    componentDidMount() {\n        this._isMounted = true;\n        axios.get(`http://localhost:5000/api/nearby`, {withCredentials:true})\n        .then(responseFromApi => {\n            if (this._isMounted) {\n                let users= this.calculateUserDist(responseFromApi.data);\n                // let userLong= this.props.userInSession.longitude;\n                // let userLat= this.props.userInSession.latitude;\n                // let users=responseFromApi.data;\n                // users.forEach(function (element) {\n                //     element.distance = this.calculateDistance(userLat,userLong,element.latitude,element.longitute);\n                //   });\n\n                // users.sort(function(a, b) { \n                //     return a.distance - b.distance;\n                // });\n                    console.log(users);\n                    this.setState({sortedUsers:users})\n        }\n    })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n      }\n\n      calculateUserDist= (users)=> {\n          debugger\n        let userLong= this.props.userInSession.longitude;\n        let userLat= this.props.userInSession.latitude;\n        for (var i = 0; i < users.length; i++) {\n            users[i][\"distance\"] = this.calculateDistance(userLat,userLong,users[i][\"latitude\"],users[i][\"longitute\"]);}\n        users.sort(function(a, b) { \n            return a.distance - b.distance;\n        });\n        return users\n    } \n\n    render() {\n        if(this.state.sortedUsers.length>0){        \n        const users = this.state.sortedUsers;\n        let eachUser=users.map(user=>{\n            return(\n                <div>\n                    <h4>{user.username}</h4>\n                </div>\n            )\n        })\n        return (\n            <div>\n              {eachUser}  \n            </div>\n        )}\n        return(\n            <h1>No nearby Users</h1>\n        )\n    }\n}\n\nexport default geolocated({\n    positionOptions: {\n      enableHighAccuracy: false,\n    },\n    userDecisionTimeout: 5000,\n  })(Nearby);"]},"metadata":{},"sourceType":"module"}