{"ast":null,"code":"import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.signup = form => {\n      return axios({\n        method: \"POST\",\n        baseURL: \"http://localhost:5000/api/signup\",\n        withCredentials: true,\n        data: form\n      }).then(response => {\n        this.setUser(response.data);\n      });\n    };\n\n    this.loggedin = () => {\n      return this.service.get('/loggedin').then(response => response.data);\n    };\n\n    this.login = // (username,password) => {\n    //   return axios({\n    //     method:\"POST\",\n    //     baseURL: `http://localhost:5000/api/login`,\n    //     withCredentials: true,\n    //   })\n    (username, password, coordinates) => {\n      return this.service.post('/login', {\n        username,\n        password,\n        coordinates\n      }).then(response => {\n        this.setUser(response.data);\n        return response.data;\n      });\n    };\n\n    this.logout = () => {\n      return this.service.post('/logout', {}).then(() => {\n        localStorage.removeItem('user');\n      });\n    };\n\n    let service = axios.create({\n      baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  setUser(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  } // getUser(){\n  //   return JSON.parse(localStorage.getItem('user'));\n  // }\n\n\n}\n\nexport default AuthService;","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/components/auth/auth-service.jsx"],"names":["axios","AuthService","constructor","signup","form","method","baseURL","withCredentials","data","then","response","setUser","loggedin","service","get","login","username","password","coordinates","post","logout","localStorage","removeItem","create","user","setItem","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,WAAW,GAAG;AAAA,SAQdC,MARc,GAQJC,IAAD,IAAU;AACjB,aAAOJ,KAAK,CAAC;AACXK,QAAAA,MAAM,EAAC,MADI;AAEXC,QAAAA,OAAO,oCAFI;AAGXC,QAAAA,eAAe,EAAE,IAHN;AAIXC,QAAAA,IAAI,EAACJ;AAJM,OAAD,CAAL,CAMNK,IANM,CAMDC,QAAQ,IAAI;AAChB,aAAKC,OAAL,CAAaD,QAAQ,CAACF,IAAtB;AAA4B,OAPvB,CAAP;AAQD,KAjBa;;AAAA,SAmBdI,QAnBc,GAmBH,MAAM;AACf,aAAO,KAAKC,OAAL,CAAaC,GAAb,CAAiB,WAAjB,EACNL,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACF,IADpB,CAAP;AAED,KAtBa;;AAAA,SAwBdO,KAxBc,GAyBd;AACA;AACA;AACA;AACA;AACA;AACA,KAACC,QAAD,EAAWC,QAAX,EAAqBC,WAArB,KAAqC;AACnC,aAAO,KAAKL,OAAL,CAAaM,IAAb,CAAkB,QAAlB,EAA4B;AAACH,QAAAA,QAAD;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,OAA5B,EACNT,IADM,CACDC,QAAQ,IAAI;AAChB,aAAKC,OAAL,CAAaD,QAAQ,CAACF,IAAtB;AACF,eAAOE,QAAQ,CAACF,IAAhB;AAAqB,OAHd,CAAP;AAID,KApCa;;AAAA,SA8CdY,MA9Cc,GA8CL,MAAM;AACb,aAAO,KAAKP,OAAL,CAAaM,IAAb,CAAkB,SAAlB,EAA6B,EAA7B,EACNV,IADM,CACD,MAAM;AACVY,QAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACD,OAHM,CAAP;AAID,KAnDa;;AACZ,QAAIT,OAAO,GAAGb,KAAK,CAACuB,MAAN,CAAa;AACzBjB,MAAAA,OAAO,EAAE,2BADgB;AAEzBC,MAAAA,eAAe,EAAE;AAFQ,KAAb,CAAd;AAIA,SAAKM,OAAL,GAAeA,OAAf;AACD;;AAgCDF,EAAAA,OAAO,CAACa,IAAD,EAAM;AACXH,IAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAA7B;AACH,GAzCiB,CA2ClB;AACA;AACA;;;AA7CkB;;AAuDlB,eAAevB,WAAf","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (form) => {\n    return axios({\n      method:\"POST\",\n      baseURL: `http://localhost:5000/api/signup`,\n      withCredentials: true,\n      data:form\n    })\n    .then(response => {\n      this.setUser(response.data)})\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n  \n  login = \n  // (username,password) => {\n  //   return axios({\n  //     method:\"POST\",\n  //     baseURL: `http://localhost:5000/api/login`,\n  //     withCredentials: true,\n  //   })\n  (username, password, coordinates) => {\n    return this.service.post('/login', {username, password, coordinates})\n    .then(response => {\n      this.setUser(response.data)\n    return response.data})     \n  }\n\n  setUser(user){\n    localStorage.setItem('user', JSON.stringify(user));\n}\n\n// getUser(){\n//   return JSON.parse(localStorage.getItem('user'));\n// }\n\n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(() => {\n      localStorage.removeItem('user');\n    })\n  }\n}\n\nexport default AuthService;"]},"metadata":{},"sourceType":"module"}