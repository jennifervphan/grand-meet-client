{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/components/message/ChatApp.jsx\";\nimport React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\nexport default class ChatApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      chatPartner: this.props.location.chatPartner.user.username,\n      currentRoom: {\n        users: []\n      },\n      messages: [],\n      users: []\n    };\n    this.addMessage = this.addMessage.bind(this);\n  }\n\n  componentDidMount() {\n    const chatManager = new ChatManager({\n      instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n      userId: this.props.userInSession.username,\n      tokenProvider: new TokenProvider({\n        url: \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/95077b15-c43c-4d68-ae92-7a1f082f91c8/token\"\n      })\n    });\n    chatManager.connect().then(currentUser => {\n      // currentUser.createRoom({\n      //     id: '#general',\n      //     name: 'General',\n      //     private: true,\n      //     addUserIds: ['craig', 'kate'],\n      //     customData: { foo: 42 },\n      //   }).then(room => {\n      //     console.log(`Created room called ${room.name}`)\n      //   })\n      //   .catch(err => {\n      //     console.log(`Error creating room ${err}`)\n      //   })\n      this.setState({\n        currentUser: currentUser\n      });\n      return currentUser.subscribeToRoom({\n        roomId: \"24ab072d-77b6-4003-92e5-dca664986179\",\n        messageLimit: 100,\n        hooks: {\n          onMessage: message => {\n            this.setState({\n              messages: [...this.state.messages, message]\n            });\n          }\n        }\n      });\n    }).then(currentRoom => {\n      console.log(currentRoom.userIds);\n      this.setState({\n        currentRoom,\n        users: currentRoom.userIds\n      });\n    }).catch(error => console.log(error));\n  }\n\n  addMessage(text) {\n    this.state.currentUser.sendMessage({\n      text,\n      roomId: this.state.currentRoom.id\n    }).catch(error => console.error('error', error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(MessageList, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Input, {\n      className: \"input-field\",\n      onSubmit: this.addMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/components/message/ChatApp.jsx"],"names":["React","Component","ChatManager","TokenProvider","MessageList","Input","ChatApp","constructor","props","state","currentUser","chatPartner","location","user","username","currentRoom","users","messages","addMessage","bind","componentDidMount","chatManager","instanceLocator","process","env","REACT_APP_chatkit_instance_locator","userId","userInSession","tokenProvider","url","connect","then","setState","subscribeToRoom","roomId","messageLimit","hooks","onMessage","message","console","log","userIds","catch","error","text","sendMessage","id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\n\nexport default class ChatApp extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            currentUser:null,\n            chatPartner: this.props.location.chatPartner.user.username,\n            currentRoom: {users:[]},\n            messages:[],\n            users:[]\n        }\n        this.addMessage = this.addMessage.bind(this);\n    }\n\n    componentDidMount (){\n        const chatManager = new ChatManager({\n            instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n            userId: this.props.userInSession.username,\n            tokenProvider: new TokenProvider({\n                url:`https://us1.pusherplatform.io/services/chatkit_token_provider/v1/95077b15-c43c-4d68-ae92-7a1f082f91c8/token`\n            })\n        })\n\n        chatManager\n                .connect()\n                .then(currentUser => {\n                    // currentUser.createRoom({\n                    //     id: '#general',\n                    //     name: 'General',\n                    //     private: true,\n                    //     addUserIds: ['craig', 'kate'],\n                    //     customData: { foo: 42 },\n                    //   }).then(room => {\n                    //     console.log(`Created room called ${room.name}`)\n                    //   })\n                    //   .catch(err => {\n                    //     console.log(`Error creating room ${err}`)\n                    //   })\n                    this.setState({ currentUser: currentUser })\n                    return currentUser.subscribeToRoom({\n                        roomId: \"24ab072d-77b6-4003-92e5-dca664986179\",\n                        messageLimit: 100,\n                        hooks: {\n                            onMessage: message => {\n                                this.setState({\n                                    messages: [...this.state.messages, message],\n                                })\n                            },\n                        }\n                    })\n                })\n                .then(currentRoom => {\n                    console.log(currentRoom.userIds);\n                    this.setState({\n                        currentRoom,\n                        users: currentRoom.userIds\n                    })\n                })\n                .catch(error => console.log(error))\n        \n    }\n    \n    addMessage(text) {\n        this.state.currentUser.sendMessage({\n            text,\n            roomId: this.state.currentRoom.id\n        })\n        .catch(error => console.error('error', error));\n    }\n\n    render() {\n        return (\n            <div>\n                <MessageList messages={this.state.messages}/>\n                <Input className=\"input-field\" onSubmit={this.addMessage} />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}