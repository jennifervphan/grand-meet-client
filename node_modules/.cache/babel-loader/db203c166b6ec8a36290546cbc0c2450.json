{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/AllPosts.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './AllPosts.css';\nimport { Route, Link } from 'react-router-dom';\nexport default class AllPosts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    axios({\n      method: \"GET\",\n      baseURL: \"\".concat(process.env.REACT_APP_API, \"/post\"),\n      withCredentials: true\n    }).then(response => {\n      let changePost = response.data;\n      debugger;\n      changePost = changePost.map(post => {\n        if (post.text[0].length > 100) {\n          post.short = [];\n          post.short[0] = post.text[0].substring(0, 100) + \"...\";\n        } else if (post.text.length > 1) {\n          post.short = [];\n          post.short[0] = changePost.text[0];\n          post.short[1] = \"...\";\n        }\n\n        return post;\n      }); // changePost.niceTime = this.formatWrittenAt(changePost.writtenAt, now);\n\n      this.setState({\n        post: changePost\n      }); // console.log(response.data)\n      // this.setState({\n      //     posts: response.data\n      // })\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    if (this.state.posts) {\n      const posts = this.state.posts;\n      let eachPost = posts.map((post, index) => {\n        if (post.short) {\n          return React.createElement(Link, {\n            className: \"eachPost\",\n            to: {\n              pathname: \"/share/thoughtsCorner/\".concat(post._id)\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            style: {\n              color: \"black\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, post.title), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, post.short)));\n        } else {\n          return React.createElement(Link, {\n            className: \"eachPost\",\n            to: {\n              pathname: \"/share/thoughtsCorner/\".concat(post._id)\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            style: {\n              color: \"black\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, post.title), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, post.text)));\n        }\n      });\n      return React.createElement(\"div\", {\n        className: \"posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, eachPost);\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/AllPosts.jsx"],"names":["React","Component","axios","Route","Link","AllPosts","constructor","props","state","componentDidMount","method","baseURL","process","env","REACT_APP_API","withCredentials","then","response","changePost","data","map","post","text","length","short","substring","setState","catch","err","console","log","render","posts","eachPost","index","pathname","_id","color","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAAQC,KAAR,EAAcC,IAAd,QAAyB,kBAAzB;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC5CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY,EAAZ;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfP,IAAAA,KAAK,CAAC;AACFQ,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,OAAO,YAAIC,OAAO,CAACC,GAAR,CAAYC,aAAhB,UAFL;AAGFC,MAAAA,eAAe,EAAE;AAHf,KAAD,CAAL,CAKCC,IALD,CAKMC,QAAQ,IAAE;AACZ,UAAIC,UAAU,GAAGD,QAAQ,CAACE,IAA1B;AACA;AACAD,MAAAA,UAAU,GAAEA,UAAU,CAACE,GAAX,CAAeC,IAAI,IAAE;AAC7B,YAAIA,IAAI,CAACC,IAAL,CAAU,CAAV,EAAaC,MAAb,GAAsB,GAA1B,EAA+B;AAC/BF,UAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AACAH,UAAAA,IAAI,CAACG,KAAL,CAAW,CAAX,IAAgBH,IAAI,CAACC,IAAL,CAAU,CAAV,EAAaG,SAAb,CAAuB,CAAvB,EAA0B,GAA1B,IAAiC,KAAjD;AACH,SAHG,MAGE,IAAIJ,IAAI,CAACC,IAAL,CAAUC,MAAV,GAAmB,CAAvB,EAA0B;AAC5BF,UAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AACAH,UAAAA,IAAI,CAACG,KAAL,CAAW,CAAX,IAAgBN,UAAU,CAACI,IAAX,CAAgB,CAAhB,CAAhB;AACAD,UAAAA,IAAI,CAACG,KAAL,CAAW,CAAX,IAAgB,KAAhB;AACC;;AACL,eAAOH,IAAP;AACC,OAVW,CAAZ,CAHY,CAeZ;;AACA,WAAKK,QAAL,CAAc;AAACL,QAAAA,IAAI,EAACH;AAAN,OAAd,EAhBY,CAiBZ;AACA;AACA;AACA;AACH,KA1BD,EA2BCS,KA3BD,CA2BOC,GAAG,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KA7BD;AA8BH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKvB,KAAL,CAAWwB,KAAd,EAAoB;AAAA,YACTA,KADS,GACD,KAAKxB,KADJ,CACTwB,KADS;AAEpB,UAAIC,QAAQ,GAAED,KAAK,CAACZ,GAAN,CAAU,CAACC,IAAD,EAAMa,KAAN,KAAc;AAClC,YAAGb,IAAI,CAACG,KAAR,EAAc;AACV,iBACI,oBAAC,IAAD;AAAM,YAAA,SAAS,EAAC,UAAhB;AAA4B,YAAA,EAAE,EAAE;AAC5BW,cAAAA,QAAQ,kCAA0Bd,IAAI,CAACe,GAA/B;AADoB,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGI;AAAK,YAAA,GAAG,EAAEF,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAI,YAAA,KAAK,EAAE;AAACG,cAAAA,KAAK,EAAE;AAAR,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BhB,IAAI,CAACiB,KAAnC,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIjB,IAAI,CAACG,KAAT,CAFA,CAHJ,CADJ;AAYH,SAbD,MAaM;AACF,iBACI,oBAAC,IAAD;AAAM,YAAA,SAAS,EAAC,UAAhB;AAA2B,YAAA,EAAE,EAAE;AAC3BW,cAAAA,QAAQ,kCAA0Bd,IAAI,CAACe,GAA/B;AADmB,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGI;AAAK,YAAA,GAAG,EAAEF,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAI,YAAA,KAAK,EAAE;AAACG,cAAAA,KAAK,EAAE;AAAR,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BhB,IAAI,CAACiB,KAAnC,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIjB,IAAI,CAACC,IAAT,CAFA,CAHJ,CADJ;AAWH;AAEJ,OA5Ba,CAAd;AA6BA,aACI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKW,QADL,CADJ;AAKC,KApCD,MAoCO;AACH,aACI,yCADJ;AAIH;AAEJ;;AAnF2C","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './AllPosts.css';\nimport {Route,Link} from 'react-router-dom';\n\nexport default class AllPosts extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {};\n    }\n\n    componentDidMount(){\n        axios({\n            method: \"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post`,\n            withCredentials: true\n        })\n        .then(response=>{\n            let changePost = response.data;\n            debugger\n            changePost= changePost.map(post=>{\n                if (post.text[0].length > 100) {\n                post.short = []\n                post.short[0] = post.text[0].substring(0, 100) + \"...\"\n            }else if (post.text.length > 1) {\n                post.short = []\n                post.short[0] = changePost.text[0]\n                post.short[1] = \"...\"\n                }\n            return post\n            })\n            \n            // changePost.niceTime = this.formatWrittenAt(changePost.writtenAt, now);\n            this.setState({post:changePost})\n            // console.log(response.data)\n            // this.setState({\n            //     posts: response.data\n            // })\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    }\n\n    render() {\n        if(this.state.posts){\n            const {posts}= this.state;\n        let eachPost= posts.map((post,index)=>{\n            if(post.short){\n                return(\n                    <Link className=\"eachPost\"  to={{\n                        pathname:`/share/thoughtsCorner/${post._id}`\n                    }}>\n                        <div key={index}>\n                        <h4 style={{color: \"black\"}}>{post.title}</h4>\n                        <p>{post.short}</p>\n                        </div>\n                    </Link>\n                    \n                )\n                \n            } else{\n                return(\n                    <Link className=\"eachPost\" to={{\n                        pathname:`/share/thoughtsCorner/${post._id}`\n                    }}>\n                        <div key={index}>\n                        <h4 style={{color: \"black\"}}>{post.title}</h4>\n                        <p>{post.text}</p>\n                        </div> \n                    </Link>\n                \n            )\n            }\n            \n        })\n        return (\n            <div  className=\"posts\">\n                {eachPost}\n            </div>\n        )\n        } else {\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}