{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport { formatWrittenAt } from '../../method';\nexport default class EachPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const comment = this.state.comment;\n      const user = this.state.user;\n      axios.post(\"\".concat(process.env.REACT_APP_API, \"/post/\").concat(this.state.post._id, \"/comment\"), {\n        comment,\n        user\n      }).then(response => {\n        let now = new Date();\n        let post = response.data;\n        post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n        this.setState({\n          comment: \"\",\n          post: post\n        });\n        this.props.history.push(\"/share/thoughtsCorner/allThoughts/\".concat(this.state.post._id));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      user: JSON.parse(localStorage.getItem('user')),\n      comment: '',\n      post: null\n    };\n    this.formatWrittenAt = formatWrittenAt.bind(this);\n  }\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    axios({\n      method: \"GET\",\n      baseURL: \"\".concat(process.env.REACT_APP_API, \"/post/\").concat(params.id),\n      withCredentials: true\n    }).then(response => {\n      console.log(response.data);\n      let now = new Date();\n      let post = response.data.post;\n      let comments = response.data.comments;\n      let eachComment = comments.map(comment => {\n        comment.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n        return comment;\n      });\n      post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n      this.setState({\n        post: post,\n        comments: eachComment\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } // deletePost (postId){\n  //     axios({\n  //         method:\"POST\",\n  //         baseURL:`${process.env.REACT_APP_API}/deletePost/${postId}`,\n  //         withCredentials:true\n  //     })   \n  //     .then(()=>{\n  //         this.props.history.push('/share/thoughtsCorner/allThoughts');\n  //         // this.props.history.push(\"/share/thoughtsCorner/allThoughts\")\n  //         // return <Redirect to=\"/share/thoughtsCorner/allThoughts\"/>\n  //     })\n  //     .catch(err=>{\n  //         console.log(err)\n  //     })\n  // }\n\n\n  render() {\n    if (this.state.post) {\n      let eachLine = this.state.post.text.map(text => {\n        return React.createElement(\"p\", {\n          className: \"eachLine\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, text);\n      });\n      let eachComment;\n\n      if (this.state.comments) {\n        eachComment = this.state.comments.map(comment => {\n          return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n            className: \"eachLine\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, comment.text), React.createElement(\"p\", {\n            className: \"eachLine\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, \"by \", comment.author.username, \" at \", comment.niceTime));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"postDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"eachLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.state.post.title), React.createElement(\"div\", {\n        className: \"eachMesDiv\",\n        style: {\n          backgroundImage: \"url(\".concat(this.state.post.author.profilePicUrl, \")\"),\n          width: \"40px\",\n          height: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), this.state.post.author._id === this.state.user._id ? React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        style: {\n          textAlign: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Posted by you\"), React.createElement(\"p\", {\n        className: \"eachLine\",\n        style: {\n          marginTop: \"10px\",\n          color: \"darkgrey !important\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.post.niceTime), React.createElement(\"div\", {\n        className: \"rowFlex\",\n        style: {\n          justifyContent: \"flex-start\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Link, {\n        style: {\n          marginRight: \"10px\"\n        },\n        to: {\n          pathname: \"/share/thoughtsCorner/allThoughts/editThought/\".concat(this.state.post._id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        style: {\n          marginRight: \"10px\"\n        } // onClick={this.deletePost(this.state.post._id)} \n        // exact to=\"/delete\"\n        // exact to={{pathname:`/share/thoughtsCorner/allThoughts/delete/${this.state.post._id}`}}\n        // to={{pathname: `/share/thoughtsCorner/allThoughts/delete/${this.state.post._id}`}}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Delete\"))) : React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        className: \"eachLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Posted by \", React.createElement(Link, {\n        to: {\n          pathname: \"/nearby/\".concat(this.state.post.author._id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.post.author.username)), React.createElement(\"p\", {\n        className: \"eachLine\",\n        style: {\n          marginTop: \"10px\",\n          color: \"darkgrey !important\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.state.post.niceTime)), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), eachLine, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control\",\n        name: \"comment\",\n        cols: \"40\",\n        rows: \"5\",\n        placeholder: \"Comment...\",\n        value: this.state.comment,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: {\n          marginTop: \"10px\",\n          float: \"left\"\n        },\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Comment\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, eachComment), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx"],"names":["React","Component","axios","Link","Redirect","formatWrittenAt","EachPost","constructor","props","handleFormSubmit","event","preventDefault","comment","state","user","post","process","env","REACT_APP_API","_id","then","response","now","Date","data","niceTime","writtenAt","setState","history","push","catch","err","console","log","handleChange","target","name","value","JSON","parse","localStorage","getItem","bind","componentDidMount","params","match","method","baseURL","id","withCredentials","comments","eachComment","map","render","eachLine","text","author","username","title","backgroundImage","profilePicUrl","width","height","textAlign","marginTop","color","justifyContent","marginRight","pathname","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link, Redirect} from 'react-router-dom';\nimport {formatWrittenAt} from '../../method'; \n\nexport default class EachPost extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            user:JSON.parse(localStorage.getItem('user')),\n            comment:'',\n            post:null\n        };\n        this.formatWrittenAt= formatWrittenAt.bind(this)\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        axios({\n            method:\"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post/${params.id}`,\n            withCredentials:true\n        })\n        .then(response=>{\n            console.log(response.data)\n            let now = new Date();\n            let post = response.data.post;\n            let comments = response.data.comments;\n            let eachComment= comments.map(comment=>{\n                comment.niceTime= this.formatWrittenAt(new Date(post.writtenAt), now);\n                return comment\n            })\n                post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            this.setState({post:post, comments:eachComment})\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    // deletePost (postId){\n    //     axios({\n    //         method:\"POST\",\n    //         baseURL:`${process.env.REACT_APP_API}/deletePost/${postId}`,\n    //         withCredentials:true\n    //     })   \n    //     .then(()=>{\n    //         this.props.history.push('/share/thoughtsCorner/allThoughts');\n\n    //         // this.props.history.push(\"/share/thoughtsCorner/allThoughts\")\n    //         // return <Redirect to=\"/share/thoughtsCorner/allThoughts\"/>\n    //     })\n    //     .catch(err=>{\n    //         console.log(err)\n    //     })\n    // }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const comment = this.state.comment;\n        const user=this.state.user;\n        axios.post(`${process.env.REACT_APP_API}/post/${this.state.post._id}/comment`,{comment, user})\n        .then(response=>{ \n            let now = new Date();\n            let post=response.data;\n            post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            this.setState({comment:\"\", post:post})\n            this.props.history.push(`/share/thoughtsCorner/allThoughts/${this.state.post._id}`)    \n        })\n        .catch(err =>{\n            console.log(err)\n        })\n      }\n      \n    handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n    }\n\n    render() {\n        if(this.state.post){\n            let eachLine= this.state.post.text.map(text=>{\n                return(\n                    <p className=\"eachLine\">{text}</p>\n                )\n            })\n            let eachComment;\n            if(this.state.comments){\n                eachComment= this.state.comments.map(comment=>{\n                    return(\n                        <>\n                        <p className=\"eachLine\">{comment.text}</p>\n                        <p className=\"eachLine\">by {comment.author.username} at {comment.niceTime}</p>\n                        </>\n                    )\n                })\n            }\n            return (\n            <div className=\"postDetails\">\n                <h3 className=\"eachLine\">{this.state.post.title}</h3>\n                    <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.state.post.author.profilePicUrl})`, width:\"40px\", height:\"40px\"}}></div>\n                    {this.state.post.author._id === this.state.user._id?\n                        (<>\n                            <p style={{textAlign:\"left\"}}>Posted by you</p>\n                            <p className=\"eachLine\" style={{marginTop:\"10px\", color:\"darkgrey !important\"}}>{this.state.post.niceTime}</p>\n                            <div className=\"rowFlex\" style={{justifyContent:\"flex-start\"}}>\n                                <Link style={{marginRight:\"10px\"}} to={{pathname: `/share/thoughtsCorner/allThoughts/editThought/${this.state.post._id}`}}>Edit</Link>\n                                <button style={{marginRight:\"10px\"}} \n                                // onClick={this.deletePost(this.state.post._id)} \n                                // exact to=\"/delete\"\n                                // exact to={{pathname:`/share/thoughtsCorner/allThoughts/delete/${this.state.post._id}`}}\n                                // to={{pathname: `/share/thoughtsCorner/allThoughts/delete/${this.state.post._id}`}}\n                                >Delete</button>\n                            </div>\n                        </>\n                        ) \n                        :   \n                        (<>\n                            <p className=\"eachLine\">Posted by <Link to={{ pathname: `/nearby/${this.state.post.author._id}`}}>{this.state.post.author.username}</Link>            \n                            </p>\n                            <p className=\"eachLine\" style={{marginTop:\"10px\", color:\"darkgrey !important\"}}>{this.state.post.niceTime}</p>\n                        </>\n                        )\n                    }\n                <hr/>\n                {eachLine}\n                <hr/>\n                <form onSubmit={this.handleFormSubmit}>\n                    <textarea className=\"form-control\" name=\"comment\" cols=\"40\" rows=\"5\" placeholder=\"Comment...\" value={this.state.comment} onChange={this.handleChange}></textarea>\n                    <button style={{marginTop:\"10px\", float:\"left\"}} type=\"submit\">Comment</button>\n                </form>\n                <div>\n                {eachComment}\n                </div>\n                <hr/>\n                \n            </div>\n        )\n        }\n        else{\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}