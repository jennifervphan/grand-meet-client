{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/final project/grandmeet-client/src/pages/Inbox.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport axios from 'axios';\nimport { TokenProvider, ChatManager } from '@pusher/chatkit-client';\nimport AllRooms from '../components/message/AllRooms';\nimport EachRoom from '../components/message/EachRoom';\nimport MainLayout from '../components/layout/MainLayout';\nimport './Inbox.css';\nexport default class Inbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatRooms: [],\n      currentUser: JSON.parse(localStorage.getItem('user')),\n      currentRoom: {}\n    }; // this.setCurrentRoom= this.setCurrentRoom.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(process.env.REACT_APP_API, \"/inbox\"), {\n      withCredentials: true\n    }).then(response => {\n      console.log(response.data);\n      let chatRooms = response.data;\n      this.setState({\n        chatRooms: chatRooms\n      });\n    });\n    debugger;\n    const chatManager = new ChatManager({\n      instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n      userId: this.state.currentUser.username,\n      tokenProvider: new TokenProvider({\n        url: \"\".concat(process.env.REACT_APP_API, \"/authenticate\")\n      })\n    });\n    chatManager.connect({\n      onRoomUpdated: room => {\n        const chatRooms = this.state.chatRooms;\n        const index = chatRooms.findIndex(r => r.id === room.id);\n        chatRooms[index] = room;\n        this.setState({\n          chatRooms\n        });\n      }\n    }).then().catch(err => {\n      console.log(err);\n    });\n  } // setCurrentRoom= (room)=>{\n  //     this.setState({\n  //         currentRoom: room\n  //     })\n  // }\n\n\n  render() {\n    return React.createElement(MainLayout, Object.assign({}, this.props, {\n      className: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"inboxPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(AllRooms, {\n      rooms: this.state.chatRooms,\n      currentUser: this.state.currentUser,\n      currentRoom: this.state.currentRoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/inbox/:id\",\n      render: props => React.createElement(EachRoom, Object.assign({\n        rooms: this.state.chatRooms,\n        userInSession: this.state.currentUser\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/final project/grandmeet-client/src/pages/Inbox.jsx"],"names":["React","Component","Route","axios","TokenProvider","ChatManager","AllRooms","EachRoom","MainLayout","Inbox","constructor","props","state","chatRooms","currentUser","JSON","parse","localStorage","getItem","currentRoom","componentDidMount","get","process","env","REACT_APP_API","withCredentials","then","response","console","log","data","setState","chatManager","instanceLocator","REACT_APP_chatkit_instance_locator","userId","username","tokenProvider","url","connect","onRoomUpdated","room","index","findIndex","r","id","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Route} from 'react-router-dom';\nimport axios from 'axios';\nimport { TokenProvider, ChatManager } from '@pusher/chatkit-client';\nimport AllRooms from '../components/message/AllRooms';\nimport EachRoom from '../components/message/EachRoom';\nimport MainLayout from '../components/layout/MainLayout'\nimport './Inbox.css';\n\nexport default class Inbox extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            chatRooms:[],\n            currentUser: JSON.parse(localStorage.getItem('user')), \n            currentRoom:{}\n        };\n        // this.setCurrentRoom= this.setCurrentRoom.bind(this);\n    }\n\n    componentDidMount (){\n        axios.get(`${process.env.REACT_APP_API}/inbox`, \n                    {withCredentials:true})\n        .then(response => {\n            console.log(response.data);\n                let chatRooms= response.data;\n                this.setState({chatRooms:chatRooms})\n    })\n       \n        debugger\n        const chatManager = new ChatManager({\n            instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n            userId: this.state.currentUser.username,\n            tokenProvider: new TokenProvider({\n                url: `${process.env.REACT_APP_API}/authenticate`\n            })\n        });\n\n        chatManager\n        .connect({\n            onRoomUpdated: room => {\n                const { chatRooms } = this.state;\n                const index = chatRooms.findIndex(r => r.id === room.id);\n                chatRooms[index] = room;\n                this.setState({\n                    chatRooms\n                });\n        }})\n        .then()\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    // setCurrentRoom= (room)=>{\n    //     this.setState({\n    //         currentRoom: room\n    //     })\n    // }\n\n    render() {\n        return (\n            <MainLayout {...this.props} className=\"Dashboard\">\n                <div className=\"inboxPage\">\n                <AllRooms rooms={this.state.chatRooms} currentUser={this.state.currentUser} currentRoom={this.state.currentRoom}/>\n                <Route path=\"/inbox/:id\" render={(props)=><EachRoom rooms={this.state.chatRooms} userInSession={this.state.currentUser} {...props}/>}/>\n                </div>\n            </MainLayout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}