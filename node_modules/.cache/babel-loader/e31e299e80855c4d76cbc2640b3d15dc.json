{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/Code/labs/project-management-client/src/components/tasks/AddTask.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass AddTask extends Component {\n  constructor(props) {\n    super(props); //             will help us to toggle add task form   \n    //                      |\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const title = this.state.title;\n      const description = this.state.description;\n      const projectID = this.props.theProject._id; // <== we need to know to which project the created task belong, so we need to get its 'id'\n      // it has to be the 'id' because we are referencing project \n      // by its id in the task model on the server side ( project: {type: Schema.Types.ObjectId, ref: 'Project'})\n      // { title, description, projectID } => this is 'req.body' that will be received on the server side in this route, \n      // so the names have to match\n\n      axios.post(\"http://localhost:5000/api/tasks\", {\n        title,\n        description,\n        projectID\n      }).then(() => {\n        // after submitting the form, retrieve project one more time so the new task is displayed as well \n        //              |\n        this.props.getTheProject();\n        this.setState({\n          title: \"\",\n          description: \"\"\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.toggleForm = () => {\n      if (!this.state.isShowing) {\n        this.setState({\n          isShowing: true\n        });\n      } else {\n        this.setState({\n          isShowing: false\n        });\n      }\n    };\n\n    this.showAddTaskForm = () => {\n      if (this.state.isShowing) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Add Task\"), React.createElement(\"form\", {\n          onSubmit: this.handleFormSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Title:\"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: this.state.title,\n          onChange: e => this.handleChange(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Description:\"), React.createElement(\"textarea\", {\n          name: \"description\",\n          value: this.state.description,\n          onChange: e => this.handleChange(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        })));\n      }\n    };\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      isShowing: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.toggleForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Add task \"), this.showAddTaskForm());\n  }\n\n}\n\nexport default AddTask;","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project-management-client/src/components/tasks/AddTask.jsx"],"names":["React","Component","axios","AddTask","constructor","props","handleFormSubmit","event","preventDefault","title","state","description","projectID","theProject","_id","post","then","getTheProject","setState","catch","error","console","log","handleChange","target","name","value","toggleForm","isShowing","showAddTaskForm","e","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass AddTask extends Component {\n  constructor(props){\n      super(props);          //             will help us to toggle add task form   \n                            //                      |\n      this.state = { title: \"\", description: \"\", isShowing: false };\n  }\n   \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const title = this.state.title;\n    const description = this.state.description;\n    const projectID = this.props.theProject._id; // <== we need to know to which project the created task belong, so we need to get its 'id'\n                                                // it has to be the 'id' because we are referencing project \n                                                // by its id in the task model on the server side ( project: {type: Schema.Types.ObjectId, ref: 'Project'})\n    \n    // { title, description, projectID } => this is 'req.body' that will be received on the server side in this route, \n    // so the names have to match\n    axios.post(\"http://localhost:5000/api/tasks\", { title, description, projectID })\n    .then( () => {\n          // after submitting the form, retrieve project one more time so the new task is displayed as well \n          //              |\n        this.props.getTheProject();\n        this.setState({title: \"\", description: \"\"});\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n      const {name, value} = event.target;\n      this.setState({[name]: value});\n  }\n\n  toggleForm = () => {\n      if(!this.state.isShowing){\n          this.setState({isShowing: true});\n      } else {\n        this.setState({isShowing: false});\n      }\n  }\n\n  showAddTaskForm = () => {\n    if(this.state.isShowing){\n        return(\n            <div>\n                  <h3>Add Task</h3>\n                  <form onSubmit={this.handleFormSubmit}>\n                  <label>Title:</label>\n                  <input type=\"text\" name=\"title\" value={this.state.title} onChange={ e => this.handleChange(e)}/>\n                  <label>Description:</label>\n                  <textarea name=\"description\" value={this.state.description} onChange={ e => this.handleChange(e)} />\n                  \n                  <input type=\"submit\" value=\"Submit\" />\n                  </form>\n            </div>\n          )\n    }\n  }\n\n  render(){\n    return(\n      <div>\n            <hr />\n            <button onClick={() => this.toggleForm()}> Add task </button>\n            { this.showAddTaskForm() }\n      </div>\n    )\n  }\n}\n\nexport default AddTask;\n"]},"metadata":{},"sourceType":"module"}