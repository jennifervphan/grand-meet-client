{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'; // import ProjectList from './components/projects/ProjectList';\n\nimport Navbar from './components/navbar/Navbar'; // import ProjectDetails from './components/projects/ProjectDetails';\n// import TaskDetails from './components/tasks/TaskDetails'; // <== import the TaskDetails component\n\nimport Signup from './components/auth/Signup.jsx';\nimport AuthService from './components/auth/auth-service.jsx';\nimport Login from './components/auth/Login.jsx';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTheUser = userObj => {\n      this.setState({\n        loggedInUser: userObj\n      });\n    };\n\n    this.state = {\n      loggedInUser: null\n    };\n    this.service = new AuthService();\n  }\n\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      this.service.loggedin().then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      }).catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n    }\n  }\n\n  render() {\n    this.fetchUser();\n\n    if (this.state.loggedInUser) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        userInSession: this.state.loggedInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), \" \", \" \");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        userInSession: this.state.loggedInUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), \" \", React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/signup\",\n        render: () => React.createElement(Signup, {\n          getUser: this.getTheUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        render: () => React.createElement(Login, {\n          getUser: this.getTheUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \" \", \" \"), \" \");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/App.js"],"names":["React","Component","Switch","Route","Navbar","Signup","AuthService","Login","App","constructor","props","getTheUser","userObj","setState","loggedInUser","state","service","fetchUser","loggedin","then","response","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,4BAAnB,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AACxBQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,UAtBmB,GAsBLC,OAAD,IAAa;AACtB,WAAKC,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAEF;AADJ,OAAd;AAGH,KA1BkB;;AAEf,SAAKG,KAAL,GAAa;AAAED,MAAAA,YAAY,EAAE;AAAhB,KAAb;AACA,SAAKE,OAAL,GAAe,IAAIV,WAAJ,EAAf;AACH;;AAEDW,EAAAA,SAAS,GAAG;AACR,QAAI,KAAKF,KAAL,CAAWD,YAAX,KAA4B,IAAhC,EAAsC;AAClC,WAAKE,OAAL,CAAaE,QAAb,GACKC,IADL,CACUC,QAAQ,IAAI;AACd,aAAKP,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAEM;AADJ,SAAd;AAGH,OALL,EAMKC,KANL,CAMWC,GAAG,IAAI;AACV,aAAKT,QAAL,CAAc;AACVC,UAAAA,YAAY,EAAE;AADJ,SAAd;AAGH,OAVL;AAWH;AACJ;;AAQDS,EAAAA,MAAM,GAAG;AACD,SAAKN,SAAL;;AACA,QAAI,KAAKF,KAAL,CAAWD,YAAf,EAA6B;AACzB,aAAS;AACD,QAAA,SAAS,EAAG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEL,oBACA,MADA;AACO,QAAA,aAAa,EAAK,KAAKC,KAAL,CAAWD,YADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFK,WAAT;AAaH,KAdD,MAcO;AACH,aAAS;AACD,QAAA,SAAS,EAAG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEL,oBACA,MADA;AACO,QAAA,aAAa,EAAK,KAAKC,KAAL,CAAWD,YADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFK,OAIF,oBACH,MADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEH,oBACA,KADA;AACM,QAAA,KAAK,MADX;AACY,QAAA,IAAI,EAAG,SADnB;AAEA,QAAA,MAAM,EACF,MAAM,oBAAE,MAAF;AAAS,UAAA,OAAO,EAAK,KAAKH,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFG,EAOC,oBACA,KADA;AACM,QAAA,KAAK,MADX;AACY,QAAA,IAAI,EAAG,QADnB;AAEA,QAAA,MAAM,EACF,MAAM,oBAAE,KAAF;AAAQ,UAAA,OAAO,EAAK,KAAKA,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,WAJE,MAAT;AAuBK;AACJ;;AAtEW;;AAyEhB,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\n// import ProjectList from './components/projects/ProjectList';\nimport Navbar from './components/navbar/Navbar';\n// import ProjectDetails from './components/projects/ProjectDetails';\n// import TaskDetails from './components/tasks/TaskDetails'; // <== import the TaskDetails component\nimport Signup from './components/auth/Signup.jsx';\nimport AuthService from './components/auth/auth-service.jsx';\nimport Login from './components/auth/Login.jsx';\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { loggedInUser: null };\n        this.service = new AuthService();\n    }\n\n    fetchUser() {\n        if (this.state.loggedInUser === null) {\n            this.service.loggedin()\n                .then(response => {\n                    this.setState({\n                        loggedInUser: response\n                    })\n                })\n                .catch(err => {\n                    this.setState({\n                        loggedInUser: false\n                    })\n                })\n        }\n    }\n\n    getTheUser = (userObj) => {\n        this.setState({\n            loggedInUser: userObj\n        })\n    }\n\n    render() {\n            this.fetchUser()\n            if (this.state.loggedInUser) {\n                return ( <\n                    div className = \"App\" >\n                    <\n                    Navbar userInSession = { this.state.loggedInUser }\n                    /> {\n                        /* <Switch>\n                                    <Route exact path=\"/projects\" component={ProjectList}/>\n                                    <Route exact path=\"/projects/:id\" component={ProjectDetails} />\n                                    <Route exact path=\"/projects/:id/tasks/:taskId\" component={TaskDetails} />\n                                  </Switch> */\n                    } <\n                    /div>\n                );\n            } else {\n                return ( <\n                    div className = \"App\" >\n                    <\n                    Navbar userInSession = { this.state.loggedInUser }\n                    /> <\n                    Switch >\n                    <\n                    Route exact path = '/signup'\n                    render = {\n                        () => < Signup getUser = { this.getTheUser }\n                        />}/ >\n                        <\n                        Route exact path = '/login'\n                        render = {\n                            () => < Login getUser = { this.getTheUser }\n                            />}/ > {\n                                /* <Route exact path=\"/projects\" render = {()=><ProjectList user={this.state.loggedInUser}/>}/>\n                                            <Route exact path=\"/projects/:id\" render = {()=><ProjectDetails user={this.state.loggedInUser}/>} />\n                                            <Route exact path=\"/projects/:id/tasks/:taskId\" component={TaskDetails} /> */\n                            } <\n                            /Switch> <\n                            /div>\n                        );\n                    }\n                }\n            }\n\n            export default App;"]},"metadata":{},"sourceType":"module"}