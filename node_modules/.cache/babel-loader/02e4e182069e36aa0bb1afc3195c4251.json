{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/AllPosts.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './AllPosts.css';\nimport { Route, Link } from 'react-router-dom';\nexport default class AllPosts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    axios({\n      method: \"GET\",\n      baseURL: \"\".concat(process.env.REACT_APP_API, \"/post\"),\n      withCredentials: true\n    }).then(response => {\n      // let changePost = response.data;\n      // debugger\n      // let eachchangePost= changePost.map(post=>{\n      //     if (post.text[0].length > 100) {\n      //     post.short = []\n      //     post.short[0] = post.text[0].substring(0, 100) + \"...\"\n      // }else if (post.text.length > 1) {\n      //     post.short = []\n      //     post.short[0] = post.text[0]\n      //     post.short[1] = \"...\"\n      //     }\n      //     return post\n      // })\n      // console.log(eachchangePost)\n      // changePost.niceTime = this.formatWrittenAt(changePost.writtenAt, now);\n      this.setState({\n        posts: response.data\n      }); // console.log(response.data)\n      // this.setState({\n      //     posts: response.data\n      // })\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    if (this.state.posts) {\n      const posts = this.state.posts;\n      let eachPost = posts.map((post, index) => {\n        // if(post.short){\n        //     debugger\n        //     let eachShort= post.short.map(short=>{\n        //         return(\n        //             <p>{short}</p>\n        //         )\n        //     })\n        //     return(\n        //         <Link className=\"eachPost\"  to={{\n        //             pathname:`/share/thoughtsCorner/${post._id}`\n        //         }}>\n        //             <div key={index}>\n        //             <h4 style={{color: \"black\"}}>{post.title}</h4>\n        //             {eachShort}\n        //             </div>\n        //         </Link>\n        //     )\n        // } else{\n        return React.createElement(Link, {\n          className: \"eachPost\",\n          to: {\n            pathname: \"/share/thoughtsCorner/\".concat(post._id)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          style: {\n            color: \"black\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, post.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, post.text[0], \"...\"))); // }\n      });\n      return React.createElement(\"div\", {\n        className: \"posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, eachPost);\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/AllPosts.jsx"],"names":["React","Component","axios","Route","Link","AllPosts","constructor","props","state","componentDidMount","method","baseURL","process","env","REACT_APP_API","withCredentials","then","response","setState","posts","data","catch","err","console","log","render","eachPost","map","post","index","pathname","_id","color","title","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAAQC,KAAR,EAAcC,IAAd,QAAyB,kBAAzB;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC5CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY,EAAZ;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfP,IAAAA,KAAK,CAAC;AACFQ,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,OAAO,YAAIC,OAAO,CAACC,GAAR,CAAYC,aAAhB,UAFL;AAGFC,MAAAA,eAAe,EAAE;AAHf,KAAD,CAAL,CAKCC,IALD,CAKMC,QAAQ,IAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAACF,QAAQ,CAACG;AAAhB,OAAd,EAlBY,CAmBZ;AACA;AACA;AACA;AACH,KA5BD,EA6BCC,KA7BD,CA6BOC,GAAG,IAAE;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KA/BD;AAgCH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKjB,KAAL,CAAWW,KAAd,EAAoB;AAAA,YACTA,KADS,GACD,KAAKX,KADJ,CACTW,KADS;AAEpB,UAAIO,QAAQ,GAAEP,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACI,eACI,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,UAAhB;AAA2B,UAAA,EAAE,EAAE;AAC3BC,YAAAA,QAAQ,kCAA0BF,IAAI,CAACG,GAA/B;AADmB,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGI;AAAK,UAAA,GAAG,EAAEF,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAI,UAAA,KAAK,EAAE;AAACG,YAAAA,KAAK,EAAE;AAAR,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BJ,IAAI,CAACK,KAAnC,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIL,IAAI,CAACM,IAAL,CAAU,CAAV,CAAJ,QAFA,CAHJ,CADJ,CApB8B,CA+BlC;AAEH,OAjCa,CAAd;AAkCA,aACI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKR,QADL,CADJ;AAKC,KAzCD,MAyCO;AACH,aACI,yCADJ;AAIH;AAEJ;;AA1F2C","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './AllPosts.css';\nimport {Route,Link} from 'react-router-dom';\n\nexport default class AllPosts extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {};\n    }\n\n    componentDidMount(){\n        axios({\n            method: \"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post`,\n            withCredentials: true\n        })\n        .then(response=>{\n            // let changePost = response.data;\n            // debugger\n            // let eachchangePost= changePost.map(post=>{\n            //     if (post.text[0].length > 100) {\n            //     post.short = []\n            //     post.short[0] = post.text[0].substring(0, 100) + \"...\"\n            // }else if (post.text.length > 1) {\n            //     post.short = []\n            //     post.short[0] = post.text[0]\n            //     post.short[1] = \"...\"\n            //     }\n\n            //     return post\n            // })\n            // console.log(eachchangePost)\n        \n            // changePost.niceTime = this.formatWrittenAt(changePost.writtenAt, now);\n            this.setState({posts:response.data})\n            // console.log(response.data)\n            // this.setState({\n            //     posts: response.data\n            // })\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    }\n\n    render() {\n        if(this.state.posts){\n            const {posts}= this.state;\n        let eachPost= posts.map((post,index)=>{\n            // if(post.short){\n            //     debugger\n            //     let eachShort= post.short.map(short=>{\n            //         return(\n            //             <p>{short}</p>\n            //         )\n            //     })\n            //     return(\n            //         <Link className=\"eachPost\"  to={{\n            //             pathname:`/share/thoughtsCorner/${post._id}`\n            //         }}>\n            //             <div key={index}>\n            //             <h4 style={{color: \"black\"}}>{post.title}</h4>\n            //             {eachShort}\n            //             </div>\n            //         </Link>\n                    \n            //     )\n            // } else{\n                return(\n                    <Link className=\"eachPost\" to={{\n                        pathname:`/share/thoughtsCorner/${post._id}`\n                    }}>\n                        <div key={index}>\n                        <h4 style={{color: \"black\"}}>{post.title}</h4>\n                        <p>{post.text[0]}...</p>\n                        </div> \n                    </Link>\n                \n            )\n            // }\n            \n        })\n        return (\n            <div  className=\"posts\">\n                {eachPost}\n            </div>\n        )\n        } else {\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}