{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/Code/labs/project-management-client/src/components/projects/ProjectDetails.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport EditProject from './EditProject';\nimport AddTask from '../tasks/AddTask';\n\nclass ProjectDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getSingleProject = () => {\n      const params = this.props.match.params;\n      axios.get(\"http://localhost:5000/api/projects/\".concat(params.id), {\n        withCredentials: true\n      }).then(responseFromApi => {\n        const theProject = responseFromApi.data;\n        this.setState(theProject);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.renderEditForm = () => {\n      if (!this.state.title) {\n        this.getSingleProject();\n      } else {\n        //                                                    {...props} => so we can have 'this.props.history' in Edit.js\n        //                                                                                          ^\n        //                                                                                          |\n        return React.createElement(EditProject, Object.assign({\n          theProject: this.state,\n          getTheProject: this.getSingleProject\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.deleteProject = () => {\n      const params = this.props.match.params;\n      axios.delete(\"http://localhost:5000/api/projects/\".concat(params.id), {\n        withCredentials: true\n      }).then(() => {\n        this.props.history.push('/projects'); // !!!         \n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.renderAddTaskForm = () => {\n      if (!this.state.title) {\n        this.getSingleProject();\n      } else {\n        // pass the project and method getSingleProject() as a props down to AddTask component\n        return React.createElement(AddTask, {\n          theProject: this.state,\n          getTheProject: this.getSingleProject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.ownershipCheck = project => {\n      if (this.props.loggedInUser && project.owner == this.props.loggedInUser._id) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, this.renderEditForm(), \" \"), React.createElement(\"button\", {\n          onClick: () => this.deleteProject(this.state._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Delete project\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, this.renderAddTaskForm(), \" \"));\n      }\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.getSingleProject();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.description), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.ownershipCheck(this.state)), React.createElement(Link, {\n      to: '/projects',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Back to projects\"));\n  } // render(){\n  //   return(\n  //     <div>\n  //       <h1>{this.state.title}</h1>\n  //       <p>{this.state.description}</p>\n  //       {/* show the task heading only if there are tasks */}\n  //       { this.state.tasks && this.state.tasks.length > 0 && <h3>Tasks </h3> }\n  //       {/* map through the array of tasks and... */}\n  //       { this.state.tasks && this.state.tasks.map((task, index) => {\n  //           return(\n  //               <div key={ index }>\n  //               {/* ... make each task's title a link that goes to the task details page */}\n  //                   <Link to={`/projects/${this.state._id}/tasks/${task._id}`}> \n  //                       { task.title }\n  //                   </Link>\n  //               </div>\n  //           )\n  //       }) }\n  //       <div>{this.renderEditForm()} </div>\n  //       <button onClick={() => this.deleteProject()}>Delete project</button> {/* <== !!! */}\n  //       <br/>\n  //       <div>{this.renderAddTaskForm()} </div>\n  //       <br/><br/><br/><br/><br/>\n  //       <Link to={'/projects'}>Back to projects</Link>\n  //     </div>\n  //   )\n  // }\n\n\n}\n\nexport default ProjectDetails;","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project-management-client/src/components/projects/ProjectDetails.jsx"],"names":["React","Component","axios","Link","EditProject","AddTask","ProjectDetails","constructor","props","getSingleProject","params","match","get","id","withCredentials","then","responseFromApi","theProject","data","setState","catch","err","console","log","renderEditForm","state","title","deleteProject","delete","history","push","renderAddTaskForm","ownershipCheck","project","loggedInUser","owner","_id","componentDidMount","render","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport EditProject from './EditProject';\nimport AddTask from '../tasks/AddTask'\n\nclass ProjectDetails extends Component {\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount(){\n    this.getSingleProject();\n  }\n\n  getSingleProject = () => {\n    const { params } = this.props.match;\n    axios.get(`http://localhost:5000/api/projects/${params.id}`, {withCredentials:true})\n    .then( responseFromApi =>{\n      const theProject = responseFromApi.data;\n      this.setState(theProject);\n    })\n    .catch((err)=>{\n        console.log(err)\n    })\n  }\n\n  renderEditForm = () => {\n    if(!this.state.title){\n      this.getSingleProject();\n    } else {\n    //                                                    {...props} => so we can have 'this.props.history' in Edit.js\n    //                                                                                          ^\n    //                                                                                          |\n      return <EditProject theProject={this.state} getTheProject={this.getSingleProject} {...this.props} />\n    }\n  }\n\n// DELETE PROJECT:\n  deleteProject = () => {\n    const { params } = this.props.match;\n    axios.delete(`http://localhost:5000/api/projects/${params.id}`, {withCredentials:true})\n    .then( () =>{\n        this.props.history.push('/projects'); // !!!         \n    })\n    .catch((err)=>{\n        console.log(err)\n    })\n  }\n\n  renderAddTaskForm = () => {\n    if(!this.state.title){\n        this.getSingleProject();\n      } else {     \n                // pass the project and method getSingleProject() as a props down to AddTask component\n        return <AddTask theProject={this.state} getTheProject={this.getSingleProject} />\n      }\n  }\n\n  ownershipCheck = (project) => {\n    if(this.props.loggedInUser && project.owner == this.props.loggedInUser._id){\n      return (\n        <div>\n          <div>{this.renderEditForm()} </div>\n          <button onClick={() => this.deleteProject(this.state._id)}>Delete project</button>\n          <div>{this.renderAddTaskForm()} </div>\n        </div>\n      )\n    } \n  }\n\n  render(){\n    return(\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.description}</p>\n        <div >\n          {this.ownershipCheck(this.state)}\n        </div>\n        <Link to={'/projects'}>Back to projects</Link>\n      </div>\n    )\n  }\n  // render(){\n  //   return(\n  //     <div>\n  //       <h1>{this.state.title}</h1>\n  //       <p>{this.state.description}</p>\n  //       {/* show the task heading only if there are tasks */}\n  //       { this.state.tasks && this.state.tasks.length > 0 && <h3>Tasks </h3> }\n  //       {/* map through the array of tasks and... */}\n  //       { this.state.tasks && this.state.tasks.map((task, index) => {\n  //           return(\n  //               <div key={ index }>\n  //               {/* ... make each task's title a link that goes to the task details page */}\n  //                   <Link to={`/projects/${this.state._id}/tasks/${task._id}`}> \n  //                       { task.title }\n  //                   </Link>\n  //               </div>\n  //           )\n            \n  //       }) }\n  //       <div>{this.renderEditForm()} </div>\n  //       <button onClick={() => this.deleteProject()}>Delete project</button> {/* <== !!! */}\n  //       <br/>\n  //       <div>{this.renderAddTaskForm()} </div>\n  //       <br/><br/><br/><br/><br/>\n  //       <Link to={'/projects'}>Back to projects</Link>\n  //     </div>\n  //   )\n  // }\n}\n\nexport default ProjectDetails;"]},"metadata":{},"sourceType":"module"}