{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class EachPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.formatWrittenAt = this.formatWrittenAt.bind(this);\n  }\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    debugger;\n    axios({\n      method: \"GET\",\n      baseURL: \"\".concat(process.env.REACT_APP_API, \"/post/\").concat(params.id),\n      withCredentials: true\n    }).then(response => {\n      console.log(response.data);\n      let now = new Date();\n      let changePost = response.data;\n\n      if (changePost.text[0].length > 100) {\n        changePost.short = [];\n        changePost.short[0] = changePost.text[0].substring(0, 100) + \"...\";\n      } else if (changePost.text.length > 1) {\n        changePost.short = [];\n        changePost.short[0] = changePost.text[0];\n        changePost.short[1] = \"...\";\n      } // changePost.niceTime = this.formatWrittenAt(changePost.writtenAt, now);\n\n\n      this.setState({\n        post: changePost\n      });\n      console.log(changePost);\n    }).catch(err => {\n      console.log(err);\n    });\n  } // formatWrittenAt = (writtenAt, now)=> {\n  //     if (writtenAt.getDate() === now.getDate() &&\n  //         writtenAt.getMonth() === now.getMonth() &&\n  //         writtenAt.getFullYear() === now.getFullYear()) {\n  //         return \"today \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n  //             (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n  //             (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n  //     } else if (writtenAt.getMonth() === now.getMonth() &&\n  //         writtenAt.getFullYear() === now.getFullYear() &&\n  //         writtenAt.getDate() === now.getDate() - 1) {\n  //         return \"yesterday \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n  //             (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n  //             (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n  //     } else if (writtenAt.getFullYear() === now.getFullYear()) {\n  //         return (writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate().toString()) + \".\" +\n  //             (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth().toString()) +\n  //             \". \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n  //             (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n  //             (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n  //     } else {\n  //         return (writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate()) + \".\" +\n  //             (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth()) + \".\" +\n  //             writtenAt.getFullYear().toString() +\n  //             \" \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours()) + \":\" +\n  //             (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes()) + \":\" +\n  //             (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds());\n  //     }\n  // }\n\n\n  render() {\n    if (this.state.post) {\n      return React.createElement(\"div\", {\n        className: \"postDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"eachMesDiv\",\n        style: {\n          backgroundImage: \"url(\".concat(this.state.post.author.profilePicUrl, \")\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.post.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Posted by \", this.state.post.author.username, \" on \", this.state.post.niceTime), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.post.text));\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx"],"names":["React","Component","axios","EachPost","constructor","props","state","formatWrittenAt","bind","componentDidMount","params","match","method","baseURL","process","env","REACT_APP_API","id","withCredentials","then","response","console","log","data","now","Date","changePost","text","length","short","substring","setState","post","catch","err","render","backgroundImage","author","profilePicUrl","title","username","niceTime"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class EachPost extends Component {\n    constructor(props){\n        super(props);\n        this.state={};\n        this.formatWrittenAt= this.formatWrittenAt.bind(this)\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        debugger\n        axios({\n            method:\"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post/${params.id}`,\n            withCredentials:true\n        })\n        .then(response=>{\n            console.log(response.data)\n            let now = new Date();\n            let changePost = response.data;\n            if (changePost.text[0].length > 100) {\n                changePost.short = []\n                changePost.short[0] = changePost.text[0].substring(0, 100) + \"...\"\n            } else if (changePost.text.length > 1) {\n                changePost.short = []\n                changePost.short[0] = changePost.text[0]\n                changePost.short[1] = \"...\"\n            }\n            // changePost.niceTime = this.formatWrittenAt(changePost.writtenAt, now);\n            this.setState({post:changePost})\n            console.log(changePost)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    // formatWrittenAt = (writtenAt, now)=> {\n    //     if (writtenAt.getDate() === now.getDate() &&\n    //         writtenAt.getMonth() === now.getMonth() &&\n    //         writtenAt.getFullYear() === now.getFullYear()) {\n    //         return \"today \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n    //             (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n    //             (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n    //     } else if (writtenAt.getMonth() === now.getMonth() &&\n    //         writtenAt.getFullYear() === now.getFullYear() &&\n    //         writtenAt.getDate() === now.getDate() - 1) {\n    //         return \"yesterday \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n    //             (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n    //             (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n    //     } else if (writtenAt.getFullYear() === now.getFullYear()) {\n    //         return (writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate().toString()) + \".\" +\n    //             (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth().toString()) +\n    //             \". \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours().toString()) + \":\" +\n    //             (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes().toString()) + \":\" +\n    //             (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds().toString());\n    //     } else {\n    //         return (writtenAt.getDate() < 10 ? \"0\" + writtenAt.getDate().toString() : writtenAt.getDate()) + \".\" +\n    //             (writtenAt.getMonth() < 10 ? \"0\" + writtenAt.getMonth().toString() : writtenAt.getMonth()) + \".\" +\n    //             writtenAt.getFullYear().toString() +\n    //             \" \" + (writtenAt.getHours() < 10 ? \"0\" + writtenAt.getHours().toString() : writtenAt.getHours()) + \":\" +\n    //             (writtenAt.getMinutes() < 10 ? \"0\" + writtenAt.getMinutes().toString() : writtenAt.getMinutes()) + \":\" +\n    //             (writtenAt.getSeconds() < 10 ? \"0\" + writtenAt.getSeconds().toString() : writtenAt.getSeconds());\n    //     }\n    // }\n\n    render() {\n        if(this.state.post){\n            return (\n            <div className=\"postDetails\">\n                <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.state.post.author.profilePicUrl})`}}></div>\n                <h3>{this.state.post.title}</h3>\n                <p>Posted by {this.state.post.author.username} on {this.state.post.niceTime}</p>\n                <p>{this.state.post.text}</p>\n            </div>\n        )\n        }\n        else{\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}