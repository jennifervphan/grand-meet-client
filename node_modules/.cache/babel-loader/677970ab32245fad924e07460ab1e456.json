{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport { formatWrittenAt } from '../../method';\nexport default class EachPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const comment = this.state.comment;\n      const user = this.state.user;\n      axios.post(\"\".concat(process.env.REACT_APP_API, \"/post/\").concat(this.state.post._id, \"/comment\"), {\n        comment,\n        user\n      }).then(response => {\n        let now = new Date();\n        let post = response.data.post;\n        post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n        let comments = response.data.comments;\n        let eachComment = comments.map(comment => {\n          comment.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n          return comment;\n        });\n        this.setState({\n          comments: eachComment,\n          post: post,\n          comment: \"\"\n        });\n        this.props.history.push(\"/share/thoughtsCorner/allThoughts/\".concat(post._id));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      user: JSON.parse(localStorage.getItem('user')),\n      comment: '',\n      post: null\n    };\n    this.formatWrittenAt = formatWrittenAt.bind(this);\n  }\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    axios({\n      method: \"GET\",\n      baseURL: \"\".concat(process.env.REACT_APP_API, \"/post/\").concat(params.id),\n      withCredentials: true\n    }).then(response => {\n      console.log(response.data);\n      let now = new Date();\n      let post = response.data.post;\n      let comments = response.data.comments;\n      let eachComment = comments.map(comment => {\n        comment.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n        return comment;\n      });\n      post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n      this.setState({\n        post: post,\n        comments: eachComment\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  deletePost(postId) {\n    axios({\n      method: \"POST\",\n      baseURL: \"\".concat(process.env.REACT_APP_API, \"/deletePost/\").concat(postId),\n      withCredentials: true\n    }).then(response => {\n      this.setState({\n        post: response.data.post,\n        comments: null\n      });\n      this.props.history.push('/share/thoughtsCorner/allThoughts'); // this.props.history.push(\"/share/thoughtsCorner/allThoughts\")\n      // return <Redirect to=\"/share/thoughtsCorner/allThoughts\"/>\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    if (this.state.post) {\n      let eachLine = this.state.post.text.map(text => {\n        return React.createElement(\"p\", {\n          className: \"eachLine\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, text);\n      });\n      let eachComment;\n\n      if (this.state.comments) {\n        eachComment = this.state.comments.map(comment => {\n          return React.createElement(\"div\", {\n            className: \"columnFlex\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, comment.author._id === this.state.user._id ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n            className: \"rowFlex\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"eachMesDiv\",\n            style: {\n              backgroundImage: \"url(\".concat(comment.author.profilePicUrl, \")\"),\n              width: \"50px\",\n              height: \"50px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"columnDiv\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"commentLine\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: {\n              pathname: \"/profile\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, comment.author.username, \" \"), \" \", React.createElement(\"span\", {\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, comment.text)), React.createElement(\"p\", {\n            style: {\n              textAlign: \"left\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, comment.niceTime)))) : React.createElement(React.Fragment, null, React.createElement(\"p\", {\n            className: \"eachLine\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, \"by\", React.createElement(Link, {\n            to: {\n              pathname: \"/nearby/\".concat(comment.author._id)\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, comment.author.username, \" \"), comment.niceTime), React.createElement(\"p\", {\n            className: \"eachLine\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, comment.text)));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"postDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"eachLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.state.post.title), React.createElement(\"div\", {\n        className: \"eachMesDiv\",\n        style: {\n          backgroundImage: \"url(\".concat(this.state.post.author.profilePicUrl, \")\"),\n          width: \"40px\",\n          height: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), this.state.post.author._id === this.state.user._id ? React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        style: {\n          textAlign: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Posted by \", React.createElement(Link, {\n        to: {\n          pathname: \"/profile\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.state.post.author.username), \"  \"), React.createElement(\"p\", {\n        className: \"eachLine\",\n        style: {\n          marginTop: \"10px\",\n          color: \"darkgrey !important\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.post.niceTime), React.createElement(\"div\", {\n        className: \"rowFlex\",\n        style: {\n          justifyContent: \"flex-start\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Link, {\n        style: {\n          marginRight: \"10px\"\n        },\n        to: {\n          pathname: \"/share/thoughtsCorner/allThoughts/editThought/\".concat(this.state.post._id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Link, {\n        className: \"deleteBtn\",\n        onClick: () => {\n          this.deletePost(this.state.post._id);\n        },\n        exact: true,\n        to: \"#\" // exact to={{pathname:`/share/thoughtsCorner/allThoughts/delete/${this.state.post._id}`}}\n        // to={{pathname: `/share/thoughtsCorner/allThoughts/delete/${this.state.post._id}`}}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Delete\"))) : React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        className: \"eachLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Posted by \", React.createElement(Link, {\n        to: {\n          pathname: \"/nearby/\".concat(this.state.post.author._id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.state.post.author.username)), React.createElement(\"p\", {\n        className: \"eachLine\",\n        style: {\n          marginTop: \"10px\",\n          color: \"darkgrey !important\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.post.niceTime)), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), eachLine, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control\",\n        name: \"comment\",\n        cols: \"40\",\n        rows: \"5\",\n        placeholder: \"Comment...\",\n        value: this.state.comment,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: {\n          marginTop: \"10px\",\n          float: \"left\"\n        },\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Comment\")), React.createElement(\"div\", {\n        className: \"columnFlex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, eachComment), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx"],"names":["React","Component","axios","Link","Redirect","formatWrittenAt","EachPost","constructor","props","handleFormSubmit","event","preventDefault","comment","state","user","post","process","env","REACT_APP_API","_id","then","response","now","Date","data","niceTime","writtenAt","comments","eachComment","map","setState","history","push","catch","err","console","log","handleChange","target","name","value","JSON","parse","localStorage","getItem","bind","componentDidMount","params","match","method","baseURL","id","withCredentials","deletePost","postId","render","eachLine","text","author","backgroundImage","profilePicUrl","width","height","pathname","username","textAlign","title","marginTop","color","justifyContent","marginRight","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link, Redirect} from 'react-router-dom';\nimport {formatWrittenAt} from '../../method'; \n\nexport default class EachPost extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            user:JSON.parse(localStorage.getItem('user')),\n            comment:'',\n            post:null\n        };\n        this.formatWrittenAt= formatWrittenAt.bind(this)\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        axios({\n            method:\"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post/${params.id}`,\n            withCredentials:true\n        })\n        .then(response=>{\n            console.log(response.data)\n            let now = new Date();\n            let post = response.data.post;\n            let comments = response.data.comments;\n            let eachComment= comments.map(comment=>{\n                comment.niceTime= this.formatWrittenAt(new Date(post.writtenAt), now);\n                return comment\n            })\n                post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            this.setState({post:post, comments:eachComment})\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    deletePost (postId){\n        axios({\n            method:\"POST\",\n            baseURL:`${process.env.REACT_APP_API}/deletePost/${postId}`,\n            withCredentials:true\n        })   \n        .then((response)=>{\n            this.setState({post:response.data.post, comments:null})\n            this.props.history.push('/share/thoughtsCorner/allThoughts');\n\n            // this.props.history.push(\"/share/thoughtsCorner/allThoughts\")\n            // return <Redirect to=\"/share/thoughtsCorner/allThoughts\"/>\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const comment = this.state.comment;\n        const user=this.state.user;\n        axios.post(`${process.env.REACT_APP_API}/post/${this.state.post._id}/comment`,{comment, user})\n        .then(response=>{ \n            let now = new Date();\n            let post=response.data.post;\n            post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            let comments = response.data.comments;\n            let eachComment= comments.map(comment=>{\n                comment.niceTime= this.formatWrittenAt(new Date(post.writtenAt), now);\n                return comment\n            })\n            this.setState({comments:eachComment, post:post, comment:\"\"})\n            this.props.history.push(`/share/thoughtsCorner/allThoughts/${post._id}`)    \n        })\n        .catch(err =>{\n            console.log(err)\n        })\n      }\n      \n    handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n    }\n\n    render() {\n        if(this.state.post){\n            let eachLine= this.state.post.text.map(text=>{\n                return(\n                    <p className=\"eachLine\">{text}</p>\n                )\n            })\n            let eachComment;\n            if(this.state.comments){\n                eachComment= this.state.comments.map(comment=>{\n                    return(\n                        <div className=\"columnFlex\">\n                            {comment.author._id === this.state.user._id?\n                            (<>  \n                                <div className=\"rowFlex\"> \n                                    <div className=\"eachMesDiv\" style={{backgroundImage: `url(${comment.author.profilePicUrl})`, width:\"50px\", height:\"50px\"}}></div>\n                                    <div className=\"columnDiv\">\n                                    <p className=\"commentLine\">\n                                    <Link to={{pathname: `/profile`}}>\n                                    {comment.author.username} </Link> <span className=\"\">{comment.text}</span></p>\n                                    <p style={{textAlign:\"left\"}}>{comment.niceTime}</p>\n                                    </div>\n                                </div>\n                            </>\n                            ):\n                            (<>\n                                <p className=\"eachLine\">by \n                                <Link to={{pathname: `/nearby/${comment.author._id}`}}>\n                                {comment.author.username} </Link>{comment.niceTime}</p>\n                                <p className=\"eachLine\">{comment.text}</p>\n                            </>)\n                            }\n                        </div>\n                    )\n                })\n            }\n            return (\n            <div className=\"postDetails\">\n                <h3 className=\"eachLine\">{this.state.post.title}</h3>\n                    <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.state.post.author.profilePicUrl})`, width:\"40px\", height:\"40px\"}}></div>\n                    {this.state.post.author._id === this.state.user._id?\n                        (<>\n                            <p style={{textAlign:\"left\"}}>Posted by <Link to={{ pathname: `/profile`}}>{this.state.post.author.username}</Link>  </p>\n                            <p className=\"eachLine\" style={{marginTop:\"10px\", color:\"darkgrey !important\"}}>{this.state.post.niceTime}</p>\n                            <div className=\"rowFlex\" style={{justifyContent:\"flex-start\"}}>\n                                <Link style={{marginRight:\"10px\"}} to={{pathname: `/share/thoughtsCorner/allThoughts/editThought/${this.state.post._id}`}}>Edit</Link>\n                                <Link className=\"deleteBtn\"\n                                onClick={()=>{this.deletePost(this.state.post._id)}} \n                                exact to=\"#\"\n                                // exact to={{pathname:`/share/thoughtsCorner/allThoughts/delete/${this.state.post._id}`}}\n                                // to={{pathname: `/share/thoughtsCorner/allThoughts/delete/${this.state.post._id}`}}\n                                >Delete</Link>\n                            </div>\n                        </>\n                        ) \n                        :   \n                        (<>\n                            <p className=\"eachLine\">Posted by <Link to={{ pathname: `/nearby/${this.state.post.author._id}`}}>{this.state.post.author.username}</Link>            \n                            </p>\n                            <p className=\"eachLine\" style={{marginTop:\"10px\", color:\"darkgrey !important\"}}>{this.state.post.niceTime}</p>\n                        </>\n                        )\n                    }\n                <hr/>\n                {eachLine}\n                <hr/>\n                <form onSubmit={this.handleFormSubmit}>\n                    <textarea className=\"form-control\" name=\"comment\" cols=\"40\" rows=\"5\" placeholder=\"Comment...\" value={this.state.comment} onChange={this.handleChange}></textarea>\n                    <button style={{marginTop:\"10px\", float:\"left\"}} type=\"submit\">Comment</button>\n                </form>\n                <div className=\"columnFlex\">\n                {eachComment}\n                </div>\n                <hr/>\n                \n            </div>\n        )\n        }\n        else{\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}