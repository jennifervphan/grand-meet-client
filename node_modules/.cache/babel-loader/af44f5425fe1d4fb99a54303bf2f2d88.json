{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport { formatWrittenAt } from '../../method';\nexport default class EachPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const comment = this.state.comment;\n      const user = this.state.user;\n      axios.post(\"\".concat(process.env.REACT_APP_API, \"/post/\").concat(this.state.post._id, \"/comment\"), {\n        comment,\n        user\n      }).then(response => {\n        let updatedPost = response.data;\n        this.setState({\n          post: updatedPost\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      user: JSON.parse(localStorage.getItem('user')),\n      comment: ''\n    };\n    this.formatWrittenAt = formatWrittenAt.bind(this);\n  }\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    axios({\n      method: \"GET\",\n      baseURL: \"\".concat(process.env.REACT_APP_API, \"/post/\").concat(params.id),\n      withCredentials: true\n    }).then(response => {\n      let now = new Date();\n      let post = response.data;\n      post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n      this.setState({\n        post: post\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  deletePost(postId) {\n    axios({\n      method: \"POST\",\n      baseURL: \"\".concat(process.env.REACT_APP_API, \"/deletePost/\").concat(postId),\n      withCredentials: true\n    }).then(() => {\n      this.setState({\n        post: null\n      });\n      this.props.history.push(\"/share/thoughtsCorner/allThoughts\"); // return <Redirect to=\"/share/thoughtsCorner/allThoughts\"/>\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    if (this.state.post) {\n      let eachLine = this.state.post.text.map(text => {\n        return React.createElement(\"p\", {\n          className: \"eachLine\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, text);\n      });\n      return React.createElement(\"div\", {\n        className: \"postDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"eachLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.state.post.title), React.createElement(\"div\", {\n        className: \"eachMesDiv\",\n        style: {\n          backgroundImage: \"url(\".concat(this.state.post.author.profilePicUrl, \")\"),\n          width: \"40px\",\n          height: \"40px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), this.state.post.author._id === this.state.user._id ? React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        style: {\n          textAlign: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Posted by you\"), React.createElement(\"p\", {\n        className: \"eachLine\",\n        style: {\n          marginTop: \"10px\",\n          color: \"darkgrey !important\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.post.niceTime), React.createElement(\"div\", {\n        className: \"rowFlex\",\n        style: {\n          justifyContent: \"flex-start\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Link, {\n        style: {\n          marginRight: \"10px\"\n        },\n        to: {\n          pathname: \"/share/thoughtsCorner/allThoughts/editThought/\".concat(this.state.post._id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Link, {\n        style: {\n          marginRight: \"10px\"\n        },\n        onClick: this.deletePost(this.state.post._id),\n        to: \"#\" // to={{pathname: `/share/thoughtsCorner/allThoughts/delete/${this.state.post._id}`}}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Delete\"))) : React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        className: \"eachLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Posted by \", React.createElement(Link, {\n        to: {\n          pathname: \"/nearby/\".concat(this.state.post.author._id)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.post.author.username)), React.createElement(\"p\", {\n        className: \"eachLine\",\n        style: {\n          marginTop: \"10px\",\n          color: \"darkgrey !important\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.post.niceTime)), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), eachLine, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control\",\n        name: \"comment\",\n        cols: \"40\",\n        rows: \"5\",\n        placeholder: \"Comment...\",\n        value: this.state.comment,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: {\n          marginTop: \"10px\",\n          float: \"left\"\n        },\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Comment\")));\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/final project/grandmeet-client/src/components/share/EachPost.jsx"],"names":["React","Component","axios","Link","Redirect","formatWrittenAt","EachPost","constructor","props","handleFormSubmit","event","preventDefault","comment","state","user","post","process","env","REACT_APP_API","_id","then","response","updatedPost","data","setState","catch","err","console","log","handleChange","target","name","value","JSON","parse","localStorage","getItem","bind","componentDidMount","params","match","method","baseURL","id","withCredentials","now","Date","niceTime","writtenAt","deletePost","postId","history","push","render","eachLine","text","map","title","backgroundImage","author","profilePicUrl","width","height","textAlign","marginTop","color","justifyContent","marginRight","pathname","username","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link, Redirect} from 'react-router-dom';\nimport {formatWrittenAt} from '../../method'; \n\nexport default class EachPost extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            user:JSON.parse(localStorage.getItem('user')),\n            comment:''\n        };\n        this.formatWrittenAt= formatWrittenAt.bind(this)\n    }\n\n    componentDidMount(){\n        const { params } = this.props.match;\n        axios({\n            method:\"GET\",\n            baseURL:`${process.env.REACT_APP_API}/post/${params.id}`,\n            withCredentials:true\n        })\n        .then(response=>{\n            let now = new Date();\n            let post = response.data;\n                post.niceTime = this.formatWrittenAt(new Date(post.writtenAt), now);\n            this.setState({post:post})\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    deletePost (postId){\n        axios({\n            method:\"POST\",\n            baseURL:`${process.env.REACT_APP_API}/deletePost/${postId}`,\n            withCredentials:true\n        })   \n        .then(()=>{\n            this.setState({ post: null });\n            this.props.history.push(\"/share/thoughtsCorner/allThoughts\")\n            // return <Redirect to=\"/share/thoughtsCorner/allThoughts\"/>\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const comment = this.state.comment;\n        const user=this.state.user;\n        axios.post(`${process.env.REACT_APP_API}/post/${this.state.post._id}/comment`, {comment, user})\n        .then(response=>{\n            let updatedPost=response.data\n            this.setState({post:updatedPost})        \n        })\n        .catch(err =>{\n            console.log(err)\n        })\n      }\n      \n    handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n    }\n\n    render() {\n        if(this.state.post){\n            let eachLine= this.state.post.text.map(text=>{\n                return(\n                    <p className=\"eachLine\">{text}</p>\n                )\n            })\n            return (\n            <div className=\"postDetails\">\n                <h3 className=\"eachLine\">{this.state.post.title}</h3>\n                    <div className=\"eachMesDiv\" style={{backgroundImage: `url(${this.state.post.author.profilePicUrl})`, width:\"40px\", height:\"40px\"}}></div>\n                    {this.state.post.author._id === this.state.user._id?\n                        (<>\n                            <p style={{textAlign:\"left\"}}>Posted by you</p>\n                            <p className=\"eachLine\" style={{marginTop:\"10px\", color:\"darkgrey !important\"}}>{this.state.post.niceTime}</p>\n                            <div className=\"rowFlex\" style={{justifyContent:\"flex-start\"}}>\n                                <Link style={{marginRight:\"10px\"}} to={{pathname: `/share/thoughtsCorner/allThoughts/editThought/${this.state.post._id}`}}>Edit</Link>\n                                <Link style={{marginRight:\"10px\"}} \n                                onClick={this.deletePost(this.state.post._id)} to=\"#\"\n                                // to={{pathname: `/share/thoughtsCorner/allThoughts/delete/${this.state.post._id}`}}\n                                >Delete</Link>\n                            </div>\n                        </>\n                        ) \n                        :   \n                        (<>\n                            <p className=\"eachLine\">Posted by <Link to={{ pathname: `/nearby/${this.state.post.author._id}`}}>{this.state.post.author.username}</Link>            \n                            </p>\n                            <p className=\"eachLine\" style={{marginTop:\"10px\", color:\"darkgrey !important\"}}>{this.state.post.niceTime}</p>\n                        </>\n                        )\n                    }\n                <hr/>\n                {eachLine}\n                <hr/>\n                <form onSubmit={this.handleFormSubmit}>\n                <textarea className=\"form-control\" name=\"comment\" cols=\"40\" rows=\"5\" placeholder=\"Comment...\" value={this.state.comment} onChange={this.handleChange}></textarea>\n                <button style={{marginTop:\"10px\", float:\"left\"}} type=\"submit\">Comment</button>\n            </form>\n            </div>\n        )\n        }\n        else{\n            return(\n                <>\n                </>\n            )\n        }\n        \n    }\n}\n"]},"metadata":{},"sourceType":"module"}