{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/pages/Inbox.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nexport default class Inbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatRooms: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(process.env.REACT_APP_API, \"/inbox\"), {\n      withCredentials: true\n    }).then(response => {\n      let chatRooms = response.data;\n      this.setState({\n        chatRooms: chatRooms\n      });\n    }); // const chatManager = new ChatManager({\n    //     instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n    //     userId: this.props.userInSession.username,\n    //     tokenProvider: new TokenProvider({\n    //         url:`https://us1.pusherplatform.io/services/chatkit_token_provider/v1/95077b15-c43c-4d68-ae92-7a1f082f91c8/token`\n    //     })\n    // })\n    // chatManager\n    //         .connect()\n    //         .then(currentUser => {\n    //             this.setState({\n    //                 currentUser:currentUser\n    //             })\n    //         })\n  }\n\n  render() {\n    let eachRoom = this.state.chatRooms.map(room => {\n      console.log(room);\n      return React.createElement(Link, {\n        to: {\n          pathname: \"/inbox/\".concat(room.id),\n          thisRoom: {\n            thisRoom: room\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, room.name);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, eachRoom);\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/pages/Inbox.jsx"],"names":["React","Component","axios","Link","Inbox","constructor","props","state","chatRooms","componentDidMount","get","process","env","REACT_APP_API","withCredentials","then","response","data","setState","render","eachRoom","map","room","console","log","pathname","id","thisRoom","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,SAAS,EAAC;AADH,KAAX;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBP,IAAAA,KAAK,CAACQ,GAAN,WAAaC,OAAO,CAACC,GAAR,CAAYC,aAAzB,aAAgD;AAACC,MAAAA,eAAe,EAAC;AAAjB,KAAhD,EACCC,IADD,CACMC,QAAQ,IAAI;AACV,UAAIR,SAAS,GAAEQ,QAAQ,CAACC,IAAxB;AACI,WAAKC,QAAL,CAAc;AAACV,QAAAA,SAAS,EAACA;AAAX,OAAd;AACf,KAJG,EADgB,CAMhB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDW,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAQ,GAAE,KAAKb,KAAL,CAAWC,SAAX,CAAqBa,GAArB,CAAyBC,IAAI,IAAE;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEG,UAAAA,QAAQ,mBAAYH,IAAI,CAACI,EAAjB,CAAV;AACVC,UAAAA,QAAQ,EAAE;AAACA,YAAAA,QAAQ,EAAEL;AAAX;AADA,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAECA,IAAI,CAACM,IAFN,CADJ;AAMH,KARa,CAAd;AASA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,QADL,CADJ;AAKH;;AA7CwC","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nexport default class Inbox extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            chatRooms:[]\n        };\n    }\n    componentDidMount (){\n        axios.get(`${process.env.REACT_APP_API}/inbox`, {withCredentials:true})\n        .then(response => {\n                let chatRooms= response.data;\n                    this.setState({chatRooms:chatRooms})\n    })\n        // const chatManager = new ChatManager({\n        //     instanceLocator: process.env.REACT_APP_chatkit_instance_locator,\n        //     userId: this.props.userInSession.username,\n        //     tokenProvider: new TokenProvider({\n        //         url:`https://us1.pusherplatform.io/services/chatkit_token_provider/v1/95077b15-c43c-4d68-ae92-7a1f082f91c8/token`\n        //     })\n        // })\n\n        // chatManager\n        //         .connect()\n        //         .then(currentUser => {\n        //             this.setState({\n        //                 currentUser:currentUser\n        //             })\n        //         })\n    }\n\n    render() {\n        let eachRoom= this.state.chatRooms.map(room=>{\n            console.log(room)\n            return(\n                <Link to={{ pathname: `/inbox/${room.id}`,\n                thisRoom: {thisRoom: room}}}>\n                {room.name}\n                </Link>\n            )\n        })\n        return (\n            <div>\n                {eachRoom}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}