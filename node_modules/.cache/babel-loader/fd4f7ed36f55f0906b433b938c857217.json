{"ast":null,"code":"var _jsxFileName = \"/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/pages/Nearby.jsx\";\nimport React, { Component } from 'react'; // import {geolocated} from 'react-geolocated';\n\nimport axios from 'axios';\nexport default class Nearby extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.calculateDistance = (lat1, lon1, lat2, lon2) => {\n      var radlat1 = Math.PI * lat1 / 180;\n      var radlat2 = Math.PI * lat2 / 180;\n      var radlon1 = Math.PI * lon1 / 180;\n      var radlon2 = Math.PI * lon2 / 180;\n      var theta = lon1 - lon2;\n      var radtheta = Math.PI * theta / 180;\n      var dist = Math.sin(radlon1) * Math.sin(radlon2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n      dist = Math.acos(dist);\n      dist = dist * 180 / Math.PI;\n      dist = dist * 60 * 1.1515 * 1.609344;\n      return dist;\n    };\n\n    this.state = {\n      users: null,\n      sortedUsers: null\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    axios.get(\"http://localhost:5000/api/nearby\", {\n      withCredentials: true\n    }).then(responseFromApi => {\n      if (this._isMounted) {\n        debugger;\n        this.setState({\n          users: responseFromApi.data\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  calculateUserDist() {\n    let users = [...this.state.users];\n\n    for (var j = 0; j < users.length; j++) {\n      if (users[j].username === this.props.userInSession.username) {\n        users.splice(j, 1);\n        j--;\n        debugger;\n      }\n    }\n\n    let userLong = this.props.coords.longitude;\n    let userLat = this.props.coords.latitude;\n\n    for (var i = 0; i < users.length; i++) {\n      users[i][\"distance\"] = this.calculateDistance(userLat, userLong, users[i][\"latitude\"], users[i][\"longitute\"]);\n    }\n\n    users.sort(function (a, b) {\n      return a.distance - b.distance;\n    });\n    this.setState({\n      sortedUsers: users\n    });\n  }\n\n  render() {\n    if (this.state.sortedUsers) {\n      this.calculateUserDist();\n      const users = this.state.sortedUsers;\n      let eachUser = users.map(user => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, user.username));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, eachUser);\n    }\n\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"No nearby Users\");\n  }\n\n}","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/pages/Nearby.jsx"],"names":["React","Component","axios","Nearby","constructor","props","_isMounted","calculateDistance","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","radlon1","radlon2","theta","radtheta","dist","sin","cos","acos","state","users","sortedUsers","componentDidMount","get","withCredentials","then","responseFromApi","setState","data","componentWillUnmount","calculateUserDist","j","length","username","userInSession","splice","userLong","coords","longitude","userLat","latitude","i","sort","a","b","distance","render","eachUser","map","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import {geolocated} from 'react-geolocated';\nimport axios from 'axios';\n\nexport default class Nearby extends Component {\n    _isMounted = false\n\n    constructor(props){\n        super(props);\n        this.state={\n            users:null,\n            sortedUsers:null\n        }\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        axios.get(`http://localhost:5000/api/nearby`, {withCredentials:true})\n        .then(responseFromApi => {\n            if (this._isMounted) {\n            debugger\n            this.setState({\n              users: responseFromApi.data\n            })\n        }\n          })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n      }\n\n      calculateDistance = (lat1, lon1, lat2, lon2)=> {\n        var radlat1 = Math.PI * lat1/180\n        var radlat2 = Math.PI * lat2/180\n        var radlon1 = Math.PI * lon1/180\n        var radlon2 = Math.PI * lon2/180\n        var theta = lon1-lon2\n        var radtheta = Math.PI * theta/180\n        var dist = Math.sin(radlon1) * Math.sin(radlon2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n        dist = Math.acos(dist)\n        dist = dist * 180/Math.PI\n        dist = dist * 60 * 1.1515* 1.609344\n        return dist\n      }\n\n      calculateUserDist(){\n        let users=[...this.state.users];\n        for (var j=0; j<users.length;j++){\n            if(users[j].username=== this.props.userInSession.username){\n                users.splice(j,1);\n                j--\n                debugger\n            }\n        }\n        let userLong= this.props.coords.longitude;\n        let userLat= this.props.coords.latitude;\n        for (var i = 0; i < users.length; i++) {\n            users[i][\"distance\"] = this.calculateDistance(userLat,userLong,users[i][\"latitude\"],users[i][\"longitute\"]);}\n        users.sort(function(a, b) { \n            return a.distance - b.distance;\n        });\n        this.setState({sortedUsers:users})\n    } \n\n    render() {\n        if(this.state.sortedUsers){\n            this.calculateUserDist();\n        \n        const users = this.state.sortedUsers;\n        let eachUser=users.map(user=>{\n            return(\n                <div>\n                    <h4>{user.username}</h4>\n                </div>\n            )\n        })\n        return (\n            <div>\n              {eachUser}  \n            </div>\n        )}\n        return(\n            <h1>No nearby Users</h1>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}