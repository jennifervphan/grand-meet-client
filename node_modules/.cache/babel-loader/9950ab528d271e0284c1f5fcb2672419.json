{"ast":null,"code":"import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.signup = form => {\n      return axios({\n        method: \"POST\",\n        baseURL: \"http://localhost:5000/api/signup\",\n        withCredentials: true,\n        data: form\n      }) // return this.service.post('/signup', {username, password, data})\n      .then(response => response.data);\n    };\n\n    this.loggedin = () => {\n      return this.service.get('/loggedin').then(response => response.data);\n    };\n\n    this.login = // (username,password) => {\n    //   return axios({\n    //     method:\"POST\",\n    //     baseURL: `http://localhost:5000/api/login`,\n    //     withCredentials: true,\n    //   })\n    (username, password) => {\n      return this.service.post('/login', {\n        username,\n        password\n      }).then(response => response.data); // <Redirect to=\"/profile\"/>)\n    };\n\n    this.logout = () => {\n      return this.service.post('/logout', {}).then(response => response.data);\n    };\n\n    let service = axios.create({\n      baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n}\n\nexport default AuthService;","map":{"version":3,"sources":["/Users/jennifervphan/Desktop/Code/labs/project3/grandMeet-client/src/components/auth/auth-service.jsx"],"names":["axios","AuthService","constructor","signup","form","method","baseURL","withCredentials","data","then","response","loggedin","service","get","login","username","password","post","logout","create"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,WAAW,GAAG;AAAA,SAQdC,MARc,GAQJC,IAAD,IAAU;AACjB,aAAOJ,KAAK,CAAC;AACXK,QAAAA,MAAM,EAAC,MADI;AAEXC,QAAAA,OAAO,oCAFI;AAGXC,QAAAA,eAAe,EAAE,IAHN;AAIXC,QAAAA,IAAI,EAACJ;AAJM,OAAD,CAAL,CAMP;AANO,OAONK,IAPM,CAODC,QAAQ,IAAIA,QAAQ,CAACF,IAPpB,CAAP;AAQD,KAjBa;;AAAA,SAmBdG,QAnBc,GAmBH,MAAM;AACf,aAAO,KAAKC,OAAL,CAAaC,GAAb,CAAiB,WAAjB,EACNJ,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACF,IADpB,CAAP;AAED,KAtBa;;AAAA,SAwBdM,KAxBc,GAyBd;AACA;AACA;AACA;AACA;AACA;AACA,KAACC,QAAD,EAAWC,QAAX,KAAwB;AACtB,aAAO,KAAKJ,OAAL,CAAaK,IAAb,CAAkB,QAAlB,EAA4B;AAACF,QAAAA,QAAD;AAAWC,QAAAA;AAAX,OAA5B,EACNP,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACF,IADpB,CAAP,CADsB,CAGpB;AACH,KAnCa;;AAAA,SAqCdU,MArCc,GAqCL,MAAM;AACb,aAAO,KAAKN,OAAL,CAAaK,IAAb,CAAkB,SAAlB,EAA6B,EAA7B,EACNR,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACF,IADpB,CAAP;AAED,KAxCa;;AACZ,QAAII,OAAO,GAAGZ,KAAK,CAACmB,MAAN,CAAa;AACzBb,MAAAA,OAAO,EAAE,2BADgB;AAEzBC,MAAAA,eAAe,EAAE;AAFQ,KAAb,CAAd;AAIA,SAAKK,OAAL,GAAeA,OAAf;AACD;;AAPe;;AA4ClB,eAAeX,WAAf","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (form) => {\n    return axios({\n      method:\"POST\",\n      baseURL: `http://localhost:5000/api/signup`,\n      withCredentials: true,\n      data:form\n    })\n    // return this.service.post('/signup', {username, password, data})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n  \n  login = \n  // (username,password) => {\n  //   return axios({\n  //     method:\"POST\",\n  //     baseURL: `http://localhost:5000/api/login`,\n  //     withCredentials: true,\n  //   })\n  (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n      // <Redirect to=\"/profile\"/>)\n  }\n  \n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;"]},"metadata":{},"sourceType":"module"}